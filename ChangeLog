2005-05-20 04:18  gb

	* lib/macros.lisp: TARGET-OS-CASE.

2005-05-20 03:26  gb

	* level-1/l1-aprims.lisp: OS is now a nickname for the
	platform-specific package.
	
	Remove %COERCE-TO-UVECTOR. Whatever it was ...

2005-05-20 03:23  gb

	* level-1/l1-clos-boot.lisp: Fix typos in code which initializes
	ppc64 class table.

2005-05-20 03:22  gb

	* level-1/l1-numbers.lisp: Avoid "consing"
	single-floats/destructive operations on single-floats on PPC64.

2005-05-20 03:21  gb

	* level-1/l1-pathnames.lisp: setup CCL pathname translations for
	64-bit fasls.

2005-05-20 03:20  gb

	* level-1/l1-sockets.lisp: htonl, ntohs, etc. may not be defined in
	Tiger header files (and are no-ops on big-endian machines, anyway.)
	 Use lisp macros to remind ourselves that there may be byte-order
	issues here, someday.

2005-05-20 03:19  gb

	* level-1/l1-streams.lisp: Conditionalize MAKE-HEAP-IVECTOR.

2005-05-20 03:18  gb

	* level-1/version.lisp: 050520a.

2005-05-20 03:17  gb

	* lib/compile-ccl.lisp: CROSS-COMPILE-CCl.  A lot of the stuff in
	this file is way too complicated (left over from 68k->PPC MCL
	bootstrapping a long time ago); there were and may still be some
	duplicate function definitions and other nonsense here.

2005-05-20 03:15  gb

	* lib/db-io.lisp: Allow "the wrong target" to open .cdb files (as
	needs to be done during cross-compilation.)  Need a better
	solution/scheme here, to prevent this from happening by accident.

2005-05-20 03:13  gb

	* lib/foreign-types.lisp: Don't use the :PRINT-OBJECT DEFSTRUCT
	option (just define a couple of methods.)

2005-05-20 03:12  gb

	* lib/nfcomp.lisp: Some cross-compilation infrastructure.  Careful
	about references to 64-bit array types when cross-compiling.

2005-05-20 03:10  gb

	* lib/numbers.lisp: Avoid using %MAKE-SFLOAT/destructive
	single-float operations on ppc64.

2005-05-20 03:09  gb

	* lib/sequences.lisp: Fix #+ppc64-target typos in
	SIMPLE-1D-ARRAY-SUBSEQ.

2005-05-20 03:08  gb

	* library/parse-ffi.lisp: Make the target argument &optional, not
	&key.  Install the target backend while we're parsing, so that .cdb
	files will have the right signature even if they're cross-compiled.

2005-05-20 03:03  gb

	* library/syscall.lisp: Don't map arg/result types to
	representation types here (now happens in compiler frontend).

2005-05-20 02:59  gb

	* level-0/l0-float.lisp: FSQRT: do the single-float case
	non-destructively on PPC64.

2005-05-20 02:58  gb

	* compiler/PPC/PPC64/ppc64-vinsns.lisp: u32-shift-* ->
	natural-shift-*, and some other fixes...

2005-05-20 02:57  gb

	* compiler/PPC/PPC32/ppc32-vinsns.lisp: u32-shift-* ->
	natural-shift-*.

2005-05-20 02:56  gb

	* compiler/optimizers.lisp: listp: don't expand into references to
	the gensym on ppc64.

2005-05-20 02:55  gb

	* level-0/.cvsignore, level-0/PPC/.cvsignore, library/.cvsignore,
	tools/.cvsignore: Ignore more kinds of fasl files.

2005-05-20 02:49  gb

	* bindarwin/.cvsignore, .cvsignore, l1-dfsls/.cvsignore: Ignore
	more kinds of fasl files.

2005-05-20 02:47  gb

	* compiler/nx1.lisp: Map syscall arg/result types to representation
	types here.

2005-05-19 02:02  gb

	* lib/compile-ccl.lisp: Compiler backend stuff.

2005-05-19 02:02  gb

	* lib/foreign-types.lisp: Record types passed by address on Linux
	(and any other sane ABI.) Integer encoding is in natural-sized
	words (32/64) when ABI is not sane.

2005-05-19 02:00  gb

	* library/darwin-syscalls.lisp: A few things (at least a few of
	those that we know about) take/return :LONG or :UNSIGNED-LONG.

2005-05-19 01:59  gb

	* library/syscall.lisp: Pass args/results through
	FOREIGN-TYPE-TO-REPRESENTATION-TYPE (to handle things like :LONG,
	etc.)

2005-05-19 01:58  gb

	* compiler/PPC/PPC64/ppc64-vinsns.lisp: Fix UNBOX-S32.

2005-05-19 01:58  gb

	* compiler/PPC/ppc2.lisp: :signed/unsigned-HALFword.

2005-05-18 23:35  gb

	* compiler/nx.lisp: Remove FORMAT call.

2005-05-18 23:17  gb

	* compiler/PPC/ppc2.lisp: Fix parenthesization in
	PPC2-POWEROPEN-FOREIGN-ARGS.

2005-05-18 23:10  gb

	* darwin-headers64/libc/C/populate.sh: Don't warn about tokens
	after #endif.  (Don't know how to suppress warnings about tokens
	after #include <foo>.)
	
	Don't pre-include float.h in limits.h

2005-05-18 23:07  gb

	* compiler/PPC/ppc2.lisp: ppc64 changes in poweropen-ffi-arglist
	stuff.

2005-05-18 23:01  gb

	* compiler/nx1.lisp: Pretend that :darwinppc64/:linuxppc64 targets
	follow PowerOpen ABI, which is kind of half-right, at least.

2005-05-18 23:00  gb

	* compiler/nx.lisp: XCOMPILE-LAMBDA binds target-ftd.

2005-05-18 22:59  gb

	* compiler/PPC/PPC64/ppc64-vinsns.lisp: Fix eep.address.

2005-05-18 22:56  gb

	* compiler/PPC/PPC64/ppc64-vinsns.lisp: No more
	PPC64::ONE-DIGIT-BIGNUM-HEADER; fix a few things that thought that
	there was.

2005-05-18 22:55  gb

	* compiler/PPC/ppc2.lisp: New PPC2-UNBOXED-INTEGER-ARG-TO-REG.

2005-05-18 20:07  gb

	* lib/db-io.lisp: CDB-OPEN creates a CDB structure (which may have
	a null FID); %CDB-GET does nothing if the FID is null.	(This is
	intended to avoid repeated attempts to open a missing .cdb file, as
	when populating an interface directory for the first time.)

2005-05-18 20:04  gb

	* library/parse-ffi.lisp: Handle 128-bit integers here.  (Well,
	they aren't really handled anywhere, but we should at least
	recognize the data types.)

2005-05-18 19:05  gb

	* compiler/PPC/ppc2.lisp: Fix missing close-paren.

2005-05-18 19:01  gb

	* lisp-kernel/lisp-exceptions.h: a 64-bit opcode or two.

2005-05-18 19:00  gb

	* lisp-kernel/constants64.s: Bignum header constants.

2005-05-18 19:00  gb

	* level-0/PPC/ppc-array.lisp: %init-misc for PPC64.

2005-05-18 18:59  gb

	* compiler/PPC/PPC64/ppc64-vinsns.lisp: fix copy/past bug in
	box-u8.

2005-05-18 18:59  gb

	* compiler/PPC/PPC64/ppc64-arch.lisp: 2, 3 digit bignum headers are
	interesting; 1 (32-bit) digit headers don't exist.

2005-05-18 18:57  gb

	* compiler/PPC/ppc2.lisp: a bit more ppc64 conditionaliztion. 
	(This is probably pretty close to complete - modulo 64-bit ivectors
	- but probably pretty buggy.)

2005-05-18 18:55  gb

	* compiler/PPC/ppc-lapmacros.lisp: extract-unsigned-byte-bits. for
	PPC64.

2005-05-18 00:58  gb

	* lib/ccl-export-syms.lisp, level-1/l1-utils.lisp: Remove some more
	old/unreferenced stuff.

2005-05-18 00:58  gb

	* level-1/version.lisp: 050518a, since it's reasonable to assume
	that there will be more than 1-per-day.

2005-05-18 00:48  gb

	* xdump/xsym.lisp: no longer 1994

2005-05-18 00:44  gb

	* level-1/l1-utils.lisp: Lose some more old stuff.

2005-05-18 00:38  gb

	* lisp-kernel/spentry.s: Kinder, gentler .SPgetxlong (u32/s32
	only.)

2005-05-18 00:38  gb

	* library/lispequ.lisp: Remove some unused foreign struct
	definitions; make PTASKSTATE an istruct.

2005-05-18 00:37  gb

	* lib/foreign-types.lisp: All (lisp-level) foreign structs defined
	per-ftd.

2005-05-18 00:37  gb

	* lib/describe.lisp: Don't try to describe exception frames ...

2005-05-18 00:37  gb

	* lib/ccl-export-syms.lisp: Export STREAM-DEVICE; don't export some
	old MCL stuff, %PUT-* functions.

2005-05-18 00:35  gb

	* lib/db-io.lisp: Move foreign struct definitions elsewhere.

2005-05-18 00:34  gb

	* lib/level-2.lisp: Don't eval-redef %put-* functions.

2005-05-18 00:34  gb

	* level-1/l1-lisp-threads.lisp: Don't mess with stack overflow
	limits on new stacks.

2005-05-18 00:33  gb

	* level-1/l1-events.lisp: PTASKSTATE is now an istruct.

2005-05-18 00:33  gb

	* compiler/PPC/: PPC32/ppc32-vinsns.lisp, PPC64/ppc64-vinsns.lisp:
	New memory access stuff.

2005-05-18 00:32  gb

	* compiler/PPC/ppc-disassemble.lisp: Recognize LA to TSP.

2005-05-18 00:32  gb

	* compiler/: nx1.lisp, PPC/ppc2.lisp: Drop old (undocumented,
	problematic) %PUT-* memory update functions.  Try to handle some
	64-bit memory reference/assignments, make encoding a little more
	sane.

2005-05-18 00:30  gb

	* compiler/nx.lisp: Enable vinsn debugging in XCOMPILE-LAMBDA.

2005-05-18 00:30  gb

	* compiler/backend.lisp: Recognize :SIGNED-NATURAL alias, as well.

2005-05-17 09:20  gb

	* library/solaris-records.lisp: old old file

2005-05-17 08:43  gb

	* library/parse-ffi.lisp: change target ftd arg handling

2005-05-17 07:22  gb

	* lib/foreign-types.lisp: Arrgh.

2005-05-17 07:18  gb

	* darwin-headers64/libc/: .cvsignore, C/.cvsignore: new files.

2005-05-17 07:16  gb

	* darwin-headers64/libc/C/populate.sh: new file; generates some
	warnings.

2005-05-17 07:12  gb

	* headers64/libc/: C/.cvsignore, .cvsignore: new files.

2005-05-17 07:11  gb

	* headers64/libc/C/populate.sh: New file; use Fedora Core 4 test 3
	headers.

2005-05-17 07:10  gb

	* compiler/PPC/: PPC32/ppc32-backend.lisp,
	PPC64/ppc64-backend.lisp: make & install foreign type data for
	non-native backends.

2005-05-17 07:09  gb

	* lib/foreign-types.lisp: Straighten out :void type identity.

2005-05-17 05:05  gb

	* lib/db-io.lisp: Pass the ftd around, mostly so that we can
	determine the (ftd-specific/ target-specific) size of a pointer.

2005-05-17 04:44  gb

	* lib/foreign-types.lisp: fix linux typo.

2005-05-17 04:44  gb

	* level-1/version.lisp: um, 050517b.

2005-05-17 04:32  gb

	* lib/foreign-types.lisp: Get GETF arg order right.  Set
	long/pointer type sizes based on :bits-per-word.

2005-05-17 04:32  gb

	* lib/db-io.lisp, library/parse-ffi.lisp: Get GETF arg order right
	...

2005-05-17 03:48  gb

	* library/parse-ffi.lisp: ftd-attributes is now a plist; use its
	:bits-per-word key to determine bit size of primitive :long,
	:unsigned-long types.

2005-05-17 03:45  gb

	* lib/db-io.lisp: Pass the target ftd around a bit more, but that's
	probably hopeless.  ftd-attributes is now a plist.

2005-05-17 03:44  gb

	* lib/foreign-types.lisp: Conditionalize more; pass the target ftd
	around a bit more, but that's probably hopeless.  Type translators
	are ftd-specific after all; basic types get installed per-ftd. 
	ftd-attributes is now a plist.

2005-05-17 01:32  gb

	* level-1/version.lisp: Bump  version.

2005-05-17 01:31  gb

	* xdump/faslenv.lisp, lib/nfcomp.lisp: Bump fasl version.

2005-05-17 01:04  gb

	* lib/foreign-types.lisp: Lose ftype-info/ordinal stuff.  (Causes
	bootstrapping problems, as does its removal.)
	
	Primitive types (translators) are global, not per-ftd.

2005-05-17 01:02  gb

	* level-1/l1-io.lisp: WRITE-A-MACPTR: no ftype info.

2005-05-16 22:29  gb

	* lisp-kernel/spentry.s: fix typos.

2005-05-16 22:10  gb

	* lisp-kernel/spentry.s: Define a lot of PPC64 stuff.

2005-05-16 22:10  gb

	* lisp-kernel/constants64.s: Migrate builtin_function indices,
	fpscr bits to constants.s.  Add lowtag defs.  Fix double-float
	struct.

2005-05-16 22:09  gb

	* lisp-kernel/constants32.s: Migrate builtin_function indices,
	fpscr bits to constants.s.

2005-05-16 22:09  gb

	* lisp-kernel/constants.s: Migrate builtin_function indices, fpscr
	bits here from arch-specific files.

2005-05-16 22:08  gb

	* lisp-kernel/pmcl-kernel.c: Work around lack of
	<asm-ppc64/cputable.h>

2005-05-16 22:07  gb

	* lisp-kernel/macros.s: extract_lowtag for PPC64.

2005-05-16 22:07  gb

	* lisp-kernel/: errors.s, lisp-errors.h: Add
	error_object_not_unsigned_byte_56.

2005-05-16 22:03  gb

	* lib/foreign-types.lisp: Target packages, interface dirs.

2005-05-16 22:03  gb

	* lib/db-io.lisp: Don't garble error messages when checking
	trailer.

2005-05-16 22:02  gb

	* level-1/l1-aprims.lisp: Rename OS package.

2005-05-16 22:02  gb

	* compiler/PPC/: PPC32/ppc32-vinsns.lisp, PPC64/ppc64-vinsns.lisp:
	Try to distinguish between referencing fullwords and "natural"
	words in memory.

2005-05-16 22:02  gb

	* compiler/PPC/ppc2.lisp: Don't dereference pointers more than once
	(old %HGET stuff.) Try to distinguish between referencing fullwords
	and "natural" words in memory.

2005-05-16 22:00  gb

	* compiler/PPC/ppc-disassemble.lisp: Recognize a few more
	operations.

2005-05-16 21:59  gb

	* compiler/nx1.lisp: %SET-SINGLE-FLOAT is ppc32-specific.  Don't
	dereference pointers more than once (old %HGET stuff.)

2005-05-15 05:29  gb

	* level-1/version.lisp: Bump; new binaries soon.

2005-05-15 05:29  gb

	* compiler/nx.lisp, compiler/nx1.lisp, compiler/PPC/ppc2.lisp,
	lib/nfcomp.lisp: Lose old, obsolet LFUN-MAKER argument.  May need
	to use XCOMPILE-CCL to bootstrap.

2005-05-15 01:18  gb

	* examples/objc-clos.lisp: Shift in the right direction when
	converting bit- to byte-offsets.

2005-05-15 01:18  gb

	* lib/nfcomp.lisp: Default to *target-backend* (need to re-think
	some of this), use new (more specialized) fasl ops.

2005-05-15 01:16  gb

	* xdump/xfasload.lisp: XLOAD-DNODE-ALIGN: always account for
	header.

2005-05-15 01:15  gb

	* level-0/PPC/ppc-def.lisp: Change an STW to an STR.

2005-05-15 01:15  gb

	* level-0/l0-pred.lisp: A few target-package changes, comments,
	indentation.

2005-05-15 01:14  gb

	* compiler/PPC/: PPC32/ppc32-arch.lisp, PPC64/ppc64-arch.lisp: Add
	vector/array headers to target-uvector alist.

2005-05-15 00:39  gb

	* level-0/nfasload.lisp: Recognize new fasl operators (specialized
	uvector/array types.)

2005-05-15 00:38  gb

	* xdump/: xfasload.lisp, xppcfasload.lisp: More fasl operators, for
	specialized array types.  Remove some (very) old code/concepts.

2005-05-15 00:38  gb

	* xdump/faslenv.lisp: More fasl operators, for specialized array
	types.

2005-05-14 17:18  gb

	* xdump/xsparcfasload.lisp: very old, irrelevant

2005-05-13 14:50  gb

	* lisp-kernel/spentry.s: Fix typo in makeu64.

2005-05-13 04:21  gb

	* compiler/PPC/ppc2.lisp: U32/natural changes, start handling
	64-bit register copies.

2005-05-13 04:20  gb

	* compiler/PPC/PPC64/ppc64-arch.lisp: misc byte-count stuff.

2005-05-13 04:19  gb

	* compiler/PPC/PPC64/ppc64-vinsns.lisp: rename most u32 operations
	to "natural" ones.  Handle some of them, as well as some u64/s64
	boxing/unboxing operations.

2005-05-13 04:18  gb

	* compiler/PPC/PPC32/ppc32-vinsns.lisp: rename most u32 operations
	to "natural" ones.

2005-05-13 04:18  gb

	* compiler/PPC/PPC32/ppc32-arch.lisp: Implement byte-count stuff.

2005-05-13 04:17  gb

	* compiler/nx1.lisp: u32/natural changes.

2005-05-13 04:16  gb

	* compiler/nx0.lisp: Recognize "natural" constants and operands, as
	well as U32 ones.

2005-05-13 04:15  gb

	* compiler/nxenv.lisp: Change most *u32* operator names to
	*natural*.

2005-05-13 04:14  gb

	* compiler/vinsn.lisp: FIXUP-VINSN-TEMPLATE: account for the
	possibility that some (target-specific) vinsn templates may be
	missing.

2005-05-13 04:13  gb

	* compiler/vreg.lisp: Note when vinsn parameters/results have modes
	:s64/:u64, to prevent the corresponding registers from being used
	as temps.

2005-05-13 04:12  gb

	* compiler/backend.lisp: Accept :NATURAL as an alias for an
	unsigned "natural width" (32/64-bit) integer.
	
	AVAILABLE-IMM-TEMP defaults mode to :NATURAL, as does the
	WITH-IMM-TARGET macro.

2005-05-13 04:10  gb

	* compiler/arch.lisp: Architecture-specific
	ARRAY-DATA-SIZE-FUNCTION.

2005-05-13 04:09  gb

	* examples/objc-runtime.lisp: Skip the library version checks (at
	least in theory, the only classes/foreign methods we believe in are
	those described by the interface files.)
	
	Make %MLIST-CONTAINING force canonicaliazation of class pointers
	when updating message signature tables.

2005-05-13 04:07  gb

	* examples/bridge.lisp: UPDATE-TYPE-SIGNATURES-FOR-METHOD
	optionally canonicalizes the class, so that references to
	user-defined classes in method descriptor tables get revived when a
	saved image is restarted.

2005-05-13 04:05  gb

	* level-0/PPC/ppc-def.lisp: %FIXNUM-REF-U32 -> %FIXNUM-REF-NATURAL,
	and other 32/64-bit changes.

2005-05-13 04:04  gb

	* level-1/: ppc-threads-utils.lisp, l1-lisp-threads.lisp:
	%FIXNUM-REF-U32 -> %FIXNUM-REF-NATURAL.

2005-05-13 04:04  gb

	* lisp-kernel/spentry.s: fix some 32/64-bit boxing stuff.

2005-05-13 04:02  gb

	* level-1/version.lisp: 050513.

2005-05-11 23:10  gb

	* lisp-kernel/subprims.s: save/load NVRs without using stmw/lmw
	(since there aren't 64-bit equivalents.) use new __ifdef mechanism
	(old mechanism interfered with source line number scheme.)

2005-05-11 23:10  gb

	* lisp-kernel/spentry.s: save/load NVRs without using stmw/lmw
	(since there aren't 64-bit equivalents.) use new __ifdef mechanism
	(old mechanism interfered with source line number scheme.) A little
	bit of __ifdef([PPC64]) stuff works.

2005-05-11 23:06  gb

	* lisp-kernel/macros.s: save/load NVRs without using stmw/lmw
	(since there aren't 64-bit equivalents.)

2005-05-11 23:05  gb

	* lisp-kernel/m4macros.m4: New __ifdef mechanism.

2005-05-11 23:04  gb

	* lisp-kernel/constants64.s: min_array_subtag, min_vector_subtag.

2005-05-11 23:04  gb

	* lisp-kernel/constants.s: Enumerate all NVR names.  Apple's
	assembler sucks.

2005-05-11 23:03  gb

	* lisp-kernel/: asmutils.s, imports.s: Use new __ifdef mechanism.

2005-05-11 23:03  gb

	* examples/objc-support.lisp: Provide a more ... descriptive
	description for lisp exceptions.

2005-05-11 23:02  gb

	* examples/objc-runtime.lisp: Declare a few more private classes,
	for document load/save.  Need a better long-term solution,
	obviously.

2005-05-11 23:01  gb

	* examples/cocoa-editor.lisp: Don't call CCL::DBG on duplicate
	Hemlock buffer names.
	
	Disable "smart insertion and deletion"; apparently, this has
	something to do with frameworks.
	
	Turn on backup files, which would be named "foo~.lisp".  Not sure
	how easy this is to change.

2005-05-11 22:59  gb

	* examples/bridge.lisp: Failures in OBJC-CLASS-OF are often
	spurious, but we really shouldn't be asking this question in a lot
	of cases.  When #+debug, try to print the object's class name, so
	that we can special-case it.

2005-05-11 22:14  gb

	* examples/bridge.lisp: Remove a DBG trap; don't TIME the call to
	import method type signatures.

2005-05-11 22:04  gb

	* compiler/PPC/PPC64/ppc64-arch.lisp: Be more careful to
	distinguish between (ARRAY *) and (ARRAY T) cases.  Treat
	DOUBLE-FLOAT objects as if they consisted of 2 32-bit elements.

2005-05-11 22:04  gb

	* compiler/optimizers.lisp: Use TARGET-ARCH-CASE; try to simplify
	simple MAKE-ARRAY calls

2005-05-11 22:03  gb

	* compiler/PPC/PPC32/ppc32-arch.lisp: Be more careful to
	distinguish between (ARRAY *) and (ARRAY T) cases.

2005-05-11 22:02  gb

	* level-0/l0-numbers.lisp: Don't use
	WITH-STACK-SHORT-FLOATS/destuctive sfloat operations on PPC64.

2005-05-11 22:01  gb

	* level-0/l0-float.lisp: Changes for immediate single/short floats
	on ppc64.

2005-05-11 22:00  gb

	* level-0/PPC/ppc-def.lisp: Remove a comment.

2005-05-11 22:00  gb

	* level-0/PPC/ppc-float.lisp: Add #\Newline at EOF.

2005-05-11 21:59  gb

	* level-1/l1-aprims.lisp: %PASCAL-FUNCTIONS% starts out a little
	bigger.

2005-05-11 21:58  gb

	* level-1/l1-callbacks.lisp: DELETE-PASCAL-FUNCTION, be a little
	more careful about assumptions that PFEs are named/named globally.

2005-05-11 21:57  gb

	* level-1/l1-utils.lisp: %MAKE-SIMPLE-ARRAY.

2005-05-11 21:57  gb

	* level-1/ppc-callback-support.lisp: Make shorter trampolines (use
	absolute branches.)

2005-05-11 21:56  gb

	* level-1/version.lisp: 050511.

2005-05-11 21:56  gb

	* lib/number-macros.lisp: Use TARGET-ARCH-CASE in most macros.

2005-05-11 21:55  gb

	* lib/numbers.lisp: Some non-destructive SINGLE/SHORT-FLOAT stuff
	for PPC64.

2005-05-11 21:54  gb

	* lib/sequences.lisp: Comment indentation.

2005-05-11 21:54  gb

	* lib/number-case-macro.lisp: Use architecture-specific
	NUMERIC-TYPE-NAME-TO-TYPECODE-FUNCTION.

2005-05-11 21:54  gb

	* compiler/arch.lisp: NUMERIC-TYPE-NAME-TO-TYPECODE-FUNCTION.

2005-05-10 20:47  gb

	* lib/format.lisp: Don't revert to standard float printer if MARKER
	argument provided, in FORMAT-EXP-AUX.

2005-05-10 13:16  gb

	* level-1/version.lisp: Bump.

2005-05-10 13:16  gb

	* level-0/l0-float.lisp: Use ! to indicate destructive operation in
	LOG-E.

2005-05-10 13:16  gb

	* compiler/PPC/PPC32/ppc32-vinsns.lisp: Bring back (and
	comment-out) the old %ILSR-C vinsn, just in case (I had some
	problems reading float contants around the time that the previous
	change was made; I was messing with how shift operations were
	compiled at the time, and the problem may have been elsewhere. 
	Just in case.)

2005-05-10 12:45  gb

	* lisp-kernel/asmutils.s: conditionalize count_leading_zeros,
	conditional loads/stores.

2005-05-10 12:44  gb

	* lisp-kernel/: constants32.s, constants.s: New scheme for
	assembler kernel globals.

2005-05-10 12:43  gb

	* lisp-kernel/constants64.h: Move SUBTAG_CHARACTER.

2005-05-10 12:42  gb

	* lisp-kernel/constants64.s: Move SUBTAG_CHARACTER.  New scheme for
	assembler kernel globals.

2005-05-10 12:39  gb

	* lisp-kernel/macros.s: CLEAR_ALLOC_TAG: parenthesize operands.

2005-05-10 12:39  gb

	* lisp-kernel/lisp-exceptions.c: Typo.

2005-05-10 12:39  gb

	* level-0/nfasload.lisp: Colons.

2005-05-10 12:38  gb

	* level-0/l0-symbol.lisp: #+PPC64-target: special-case (SYMBOL-NAME
	NIL).

2005-05-10 12:37  gb

	* level-0/l0-numbers.lisp: LOGIOR X 0 is X, LOGIOR 0 Y is Y. 
	Sheesh.

2005-05-10 12:37  gb

	* compiler/PPC/PPC32/ppc32-vinsns.lisp: There were 2 (different)
	definitions of %ILSR-C; the second (which took effect) generated
	slightly worse code (for an operation that's rarely used.)

2005-05-10 12:35  gb

	* compiler/vinsn.lisp: Change source file indicator.

2005-05-10 12:34  gb

	* compiler/nx1.lisp: Parameterize LOGBITP a bit.

2005-05-10 12:34  gb

	* compiler/PPC/PPC64/ppc64-vinsns.lisp: Lots of changes, mostly for
	the better ...

2005-05-10 12:33  gb

	* compiler/PPC/PPC64/ppc64-arch.lisp: Target package-name,
	t-offset.  Lots of other changes, including reassigning
	SUBTAG-CHARACTER to make SUBTAG-SINGLE-FLOAT easier to identify.

2005-05-10 12:32  gb

	* compiler/PPC/PPC32/ppc32-arch.lisp: Target package-name,
	t-offset.

2005-05-10 12:31  gb

	* compiler/PPC/ppc-lap.lisp: Support T as a (constant) operand.

2005-05-10 12:31  gb

	* compiler/PPC/ppc-disassemble.lisp: Conditionalize for ppc64.

2005-05-10 12:30  gb

	* compiler/optimizers.lisp: Conditionalize for ppc64, partly (but
	see MAKE-ARRAY).

2005-05-10 12:29  gb

	* compiler/nx.lisp: XCOMPILE-LAMBDA, to test cross-compiler.

2005-05-10 12:29  gb

	* compiler/arch.lisp: Package name, t-offset in target-arch struct.

2005-05-10 00:39  gb

	* lisp-kernel/bits.h: Parameterize, try to force a few more things
	to inline.

2005-05-10 00:39  gb

	* lisp-kernel/darwin64/Makefile: Link with -lmx.

2005-05-10 00:39  gb

	* level-1/l1-numbers.lisp: Add a non-destructive %SINGLE-FLOAT-LOG
	for PPC64.  (Assumes -lmx on Darwin64).

2005-05-10 00:37  gb

	* level-1/l1-init.lisp: Use target::most-positive/negative-fixnum. 
	Remove a few MCL-isms.

2005-05-10 00:36  gb

	* level-0/: l0-def.lisp, l0-float.lisp, l0-io.lisp, l0-pred.lisp,
	l0-utils.lisp, PPC/ppc-debug.lisp, PPC/ppc-float.lisp,
	PPC/ppc-hash.lisp, PPC/ppc-misc.lisp, PPC/ppc-numbers.lisp,
	PPC/ppc-pred.lisp, PPC/ppc-symbol.lisp: some more #+ppc64-target
	conditionalization; still more to be done (especially bignum
	stuff.)

2005-05-10 00:33  gb

	* level-0/: l0-clos.lisp, l0-dcode.lisp, l0-debug.lisp: remove
	empty files.  (Remember to remove old fasls before (XLOAD-LEVEL-0).

2005-05-10 00:32  gb

	* compiler/PPC/: PPC32/ppc32-arch.lisp, PPC64/ppc64-arch.lisp:
	NODE-SIZE.

2005-05-10 00:31  gb

	* compiler/PPC/ppc-lapmacros.lisp: interlocked loads/stores, some
	more shifts, interrupt-checking fixes.

2005-05-09 07:42  gb

	* level-0/PPC/: ppc-clos.lisp, ppc-utils.lisp: conditionalize for
	ppc64.

2005-05-09 07:41  gb

	* compiler/PPC/ppc-lapmacros.lisp: EXTRACT-LOWBYTE for ppc64.

2005-05-09 05:43  gb

	* level-0/PPC/ppc-array.lisp: Conditionalize some for ppc64; warn
	at compile time about missing ppc64 functions.

2005-05-09 05:30  gb

	* level-0/l0-utils.lisp: Remove some unused functions.

2005-05-09 05:29  gb

	* level-0/l0-cfm-support.lisp: TARGET package.

2005-05-09 05:29  gb

	* level-0/: l0-array.lisp, nfasload.lisp: Use CL arithmetic to
	create 32-bit integers ...

2005-05-09 05:28  gb

	* compiler/PPC/PPC64/ppc64-arch.lisp: lowtag constants.

2005-05-09 05:28  gb

	* compiler/PPC/ppc-lapmacros.lisp: TRLGEI, EXTRACT-LOWTAG.

2005-05-09 05:27  gb

	* level-1/l1-clos-boot.lisp: 64-bit vectors, *CLASS-TABLE* changes
	for #+ppc64-target.

2005-05-08 23:01  gb

	* level-0/l0-array.lisp: Start to conditionalize for
	#+ppc64-target; -mostly- involves changing PPC32 package prefix to
	TARGET (but some -real- differences.) 2 down, about 100 to go.

2005-05-08 23:01  gb

	* level-0/l0-aprims.lisp: Start to conditionalize for
	#+ppc64-target; -mostly- involves changing PPC32 package prefix to
	TARGET.

2005-05-08 22:59  gb

	* compiler/PPC/PPC64/ppc64-arch.lisp: Define lowtag constants,
	min-{vector,array}-subtag values.

2005-05-08 21:14  gb

	* lisp-kernel/constants64.s, compiler/PPC/PPC64/ppc64-arch.lisp:
	Fix some tag definitions, add missing ratio/complex.

2005-05-08 21:14  gb

	* lisp-kernel/constants64.h: Fix some tag definitions, add missing
	ratio/complex, define tag_of_nil.

2005-05-08 21:12  gb

	* lisp-kernel/constants32.s: Define tag_of_nil, for lisp_globals
	parameterization.

2005-05-08 21:11  gb

	* lisp-kernel/constants.s: Parameterize lisp_globals struct origin
	stuff.

2005-05-08 06:25  gb

	* level-1/version.lisp: Bump; time for new binaries.

2005-05-08 06:24  gb

	* xdump/xfasload.lisp, level-0/nfasload.lisp: Remove old
	code-vector/svar loading cases.

2005-05-08 06:17  gb

	* lib/nfcomp.lisp: Remove old code-vector/svar dumping cases.

2005-05-08 05:59  gb

	* compiler/PPC/ppc-arch.lisp, compiler/PPC/PPC32/ppc32-arch.lisp,
	compiler/PPC/PPC64/ppc64-arch.lisp, level-0/l0-misc.lisp,
	level-0/l0-utils.lisp, level-0/nfasload.lisp,
	level-1/l1-lisp-threads.lisp, xdump/xfasload.lisp: AREA-
	enumeration constants are PPC-specific, not platform-specific. 
	(AREA. accessors -are- platform-specific).

2005-05-08 05:57  gb

	* lib/nfcomp.lisp: Use $fasl-svar, $fasl-codevector.

2005-05-08 05:10  gb

	* level-0/nfasload.lisp, xdump/faslenv.lisp, xdump/xfasload.lisp:
	Define (and use) $FASL-CODE-VECTOR, $FASL-SVAR.

2005-05-08 04:30  gb

	* xdump/xfasload.lisp: Remove obsolete function.

2005-05-08 04:20  gb

	* lib/nfcomp.lisp: FASL-DUMP-FUNCTION.

2005-05-08 04:19  gb

	* level-0/nfasload.lisp: Report file position of bad fasl opcode.

2005-05-08 03:56  gb

	* xdump/xfasload.lisp: Fix typo.

2005-05-08 03:51  gb

	* xdump/: xfasload.lisp, faslenv.lisp: Drop old operators; add
	$FASL-FUNCTION.

2005-05-08 03:46  gb

	* level-0/nfasload.lisp: Drop old operators; add $FASL-FUNCTION.

2005-05-08 03:30  gb

	* lib/nfcomp.lisp: Use new $fasl-vetab-alloc/count, not
	$fasl-etab-alloc/long.

2005-05-08 03:07  gb

	* lib/nfcomp.lisp, xdump/faslenv.lisp: Increment fasl version.

2005-05-08 02:52  gb

	* lib/nfcomp.lisp: FASL-DUMP-DISPATCH: don't forget to dump
	character constants, and use ETYPECASE to keep from quietly
	neglecting to dump other types in the future.
	
	(All of this is getting tricky to bootstrap; there will be new
	binaries soon.)

2005-05-08 01:17  gb

	* lib/nfcomp.lisp: Know (a bit) less about platform-dependent
	typecodes when dumping; still more work to be done here.

2005-05-08 01:16  gb

	* xdump/: faslenv.lisp, xfasload.lisp: Define (and implement)
	$FASL-SFLOAT.

2005-05-08 01:11  gb

	* level-0/PPC/ppc-float.lisp: DOUBLE-FLOAT-BITS,
	DOUBLE-FLOAT-FROM-BITS.

2005-05-08 01:09  gb

	* level-1/l1-utils.lisp: DEFINE-CONSTANT: report new, old value in
	CERROR message.

2005-05-08 01:08  gb

	* level-0/nfasload.lisp: $FASL-SFLOAT.

2005-05-08 01:07  gb

	* compiler/PPC/PPC64/ppc64-arch.lisp, lisp-kernel/constants64.h,
	lisp-kernel/constants64.s: BIGNUM, DOUBLE-FLOAT have 32-bit
	elements on PPC64 (to ease bootstrapping.)

2005-05-07 23:52  gb

	* level-0/PPC/ppc-float.lisp: (host) support to get/set
	single-float bits.

2005-05-07 23:51  gb

	* lib/nfcomp.lisp: Use new (so far ...) operators.

2005-05-07 23:51  gb

	* xdump/xfasload.lisp: Add support for new (so far) operators.

2005-05-07 23:50  gb

	* xdump/faslenv.lisp: Rename $FASL-FLOAT to $FASL-DFLOAT.

2005-05-07 23:50  gb

	* level-0/nfasload.lisp: Ignore (ignored) extended-string flag in
	obsolete FASL-READSTR and equally obsolete callers.

2005-05-07 22:01  gb

	* lib/nfcomp.lisp: Remove (old, unused) extended-string stuff.

2005-05-07 21:46  gb

	* lib/nfcomp.lisp: FASL-OUT-COUNT, to encode arbitrary-sized
	UNSIGNED-BYTE values.

2005-05-07 21:45  gb

	* level-0/nfasload.lisp: implement some new fasl operators.

2005-05-07 21:45  gb

	* xdump/faslenv.lisp: Define some new fasl operators.

2005-05-07 17:54  gb

	* lib/: defstruct.lisp, defstruct-lds.lisp: use $DEFSTUCT-STRUCT,
	to simplify cross-compilation.

2005-05-07 17:36  gb

	* lib/defstruct-macros.lisp: define $DEFSTUCT-STRUCT, to simplify
	cross-compilation.

2005-05-07 17:34  gb

	* lib/macros.lisp: Provide a couple of doc strings.

2005-05-07 17:34  gb

	* lib/misc.lisp: Function (macro, special-operator) documentation
	associated with function object.

2005-05-07 17:28  gb

	* level-1/l1-aprims.lisp, lib/sequences.lisp: Don't use
	%VECT-SUBTYPE.

2005-05-07 17:28  gb

	* level-0/l0-misc.lisp: Associate documentation with the
	definition.

2005-05-07 17:27  gb

	* level-0/l0-array.lisp: Don't define %VECT-SUBTYPE, to remove
	temptation to use it.

2005-05-07 17:27  gb

	* compiler/PPC/PPC32/ppc32-vinsns.lisp: TRAP-UNLESS-CHARACTER,
	TRAP-UNLESS-CONS.

2005-05-07 17:26  gb

	* compiler/PPC/PPC32/ppc32-arch.lisp: Use :struct to name structure
	type.

2005-05-07 17:26  gb

	* compiler/PPC/ppc2.lisp: Hide a few more ppc32 dependencies. 
	Still issues when native typecodes are involved (%gvector,
	%alloc-misc, etc.)

2005-05-07 17:24  gb

	* compiler/PPC/ppc-lapmacros.lisp: Remove doc string from IF lap
	macro.

2005-05-06 22:59  gb

	* compiler/PPC/ppc2.lisp: Typed-uvref/uvset operators accept
	keywords.

2005-05-06 22:59  gb

	* compiler/nx1.lisp: Use the new (keyword-based) typed-uvref/uvset
	operators.

2005-05-06 22:21  gb

	* compiler/PPC/ppc2.lisp: Remove some ppc32 package constants.

2005-05-06 22:15  gb

	* compiler/: arch.lisp, PPC/PPC32/ppc32-arch.lisp:
	ARRAY-TYPE-NAME-FROM-CTYPE-FUNCTION in arch struct, and PPC32
	implementation.

2005-05-06 19:54  gb

	* compiler/PPC/PPC32/ppc32-vinsns.lisp: SINGLE-FLOAT-BITS.

2005-05-06 19:54  gb

	* lib/level-2.lisp: Don't define %TYPED-MISC-REF, %TYPED-MISC-SET
	anymore.

2005-05-06 19:53  gb

	* level-0/l0-array.lisp, lib/sequences.lisp,
	compiler/optimizers.lisp: Don't use %TYPED-MISC-REF,
	%TYPED-MISC-SET anymore.

2005-05-06 18:17  gb

	* compiler/PPC/PPC32/ppc32-arch.lisp: Fix typo.

2005-05-06 18:06  gb

	* lib/sequences.lisp: Change typecode name in TYPE-KEYWORD-CODE
	call, do the call at readtime, not runtime.

2005-05-06 18:05  gb

	* level-1/sysutils.lisp: TYPE-KEYWORD-CODE uses vector types from
	target.

2005-05-06 18:05  gb

	* compiler/PPC/PPC32/ppc32-arch.lisp: Define vector type names. 
	Flesh out uvector type codes.

2005-05-06 18:04  gb

	* compiler/arch.lisp: Add vector type names (gvector,
	n-bit-ivector.)

2005-05-03 16:31  gb

	* lisp-kernel/gc.c: No need to zero_last_page() anymore.

2005-05-03 16:31  gb

	* lisp-kernel/gc.h: use HeapHighWaterMark to mark highest mapped
	address known to be zero-filled.

2005-05-03 16:30  gb

	* lisp-kernel/image.c: No memory protection anymore, so no need to
	zero_last_page().

2005-05-03 16:30  gb

	* lisp-kernel/lisp-debug.c: Add a missing #\Newline.

2005-05-03 16:29  gb

	* lisp-kernel/lisp-exceptions.c: New handling of heap resizing and
	segment allocation/zeroing.

2005-05-03 16:28  gb

	* lisp-kernel/pmcl-kernel.c: Turn the EGC on again; track
	HeapHighWaterMark.

2005-05-03 16:28  gb

	* lisp-kernel/thread_manager.c: Use allocate_tcr() to ... allocate
	TCR pointers, to ensure that a Mach port can be assigned the TCR's
	address as a "name".

2005-05-03 16:27  gb

	* xdump/xfasload.lisp: Support doc strings in level-0.

2005-05-03 16:26  gb

	* level-1/linux-files.lisp: Return another value from %STAT-VALUES.

2005-05-03 16:25  gb

	* level-1/l1-utils.lisp: MEMBER/ASSOC support, MACRO-FUNCTION moved
	to level-0 (to handle early doc strings.)

2005-05-03 16:25  gb

	* level-0/nfasload.lisp: Handle cold-load documentation.

2005-05-03 16:24  gb

	* level-0/l0-utils.lisp: Some MEMBER/ASSOC support here.

2005-05-03 16:24  gb

	* level-0/l0-misc.lisp: Change the wording in ROOM: it's not 1989
	anymore.

2005-05-03 16:23  gb

	* level-0/l0-def.lisp: Remove (this version of) SET-DOCUMENTATION,
	which might or might not have been overridden by another version
	...
	
	Define a SET-FUNCTION-INFO, which handles the case where a
	function's information is just a doc string.
	
	Move the definition of MACRO-FUNCTION here.

2005-05-01 17:53  gb

	* examples/rubix/blocks.lisp: Hamilton's fix in
	RENDER-FOR-SELECTION.

2005-04-29 03:35  gb

	* lib/nfcomp.lisp, xdump/faslenv.lisp: Increment FASL version.

2005-04-29 03:07  gb

	* lisp-kernel/spentry.s: Writes that may introduce
	intergenerational references should all be handled here; ensuring
	atomicity and handling locatives requires some support in
	pc_luser_xp().

2005-04-29 03:05  gb

	* lisp-kernel/spjump.s: New subprims replace some old ones.

2005-04-29 03:05  gb

	* lisp-kernel/pmcl-kernel.c: No more hardware EGC write barrier. 
	EGC off by default (for bootstrapping new write barrier.)

2005-04-29 03:03  gb

	* lisp-kernel/memprotect.h: No more hardware EGC write barrier.

2005-04-29 03:02  gb

	* lisp-kernel/macros.s: A little more 32/64 macrology; some support
	for bitvector operations.

2005-04-29 03:01  gb

	* lisp-kernel/lisptypes.h: No more pageentry type.

2005-04-29 03:01  gb

	* lisp-kernel/lisp_globals.h: New globals (REFBITS,
	OLDSPACE_DNODE_COUNT).

2005-04-29 03:00  gb

	* lisp-kernel/lisp-exceptions.c: No more protectin-based write
	barrier.  Some new pc-luser support to make software write barrier
	appear to be atomic (needs testing.)

2005-04-29 02:59  gb

	* lisp-kernel/gc.h: No more pagemap.

2005-04-29 02:59  gb

	* lisp-kernel/gc.c: New (software) EGC write barrier; drop support
	for the old one ...

2005-04-29 02:57  gb

	* lisp-kernel/: constants32.s, constants64.s: Move lisp-global
	definitions elsewhere; define some bitvector-related values.

2005-04-29 02:57  gb

	* lisp-kernel/constants32.h: Define t_value.

2005-04-29 02:56  gb

	* lisp-kernel/constants.s: Move lisp-global definitions here.

2005-04-29 02:54  gb

	* lisp-kernel/: bits.c, bits.h: Some word-size issues; still very
	32-bit-centric.

2005-04-29 02:53  gb

	* lisp-kernel/asmutils.s: Add atomic_ior.

2005-04-29 02:51  gb

	* level-1/version.lisp: Bump.

2005-04-29 02:51  gb

	* level-0/PPC/ppc-misc.lisp: %STORE-NODE-CONDITIONAL goes
	out-of-line, for EGC write barrier.
	
	%STORE-IMMEDIATE-CONDITIONAL skips that, when fixnums/immediates
	are known to be involved.

2005-04-29 02:50  gb

	* level-0/PPC/ppc-hash.lisp: %SET-HASH-TABLE-VECTOR-KEY goes out of
	line, to handle EGC write barrier.

2005-04-29 02:49  gb

	* level-0/l0-misc.lisp: Use %STORE-IMMEDIATE-CONDITIONAL when
	fixnums are involved.

2005-04-29 02:48  gb

	* compiler/PPC/PPC32/ppc32-vinsns.lisp: Remove misc-set-node and
	vcell-set.

2005-04-29 02:48  gb

	* compiler/PPC/ppc2.lisp: lwi -> lri.  Do setq of closed-over
	vcells via .SPgvset, for EGC.

2005-04-29 02:46  gb

	* compiler/PPC/ppc-arch.lisp: Replace some obsolete globals with
	refbits and oldspace-dnode-count.

2005-04-29 02:45  gb

	* compiler/subprims.lisp: Replace something obsolete with
	.SPset-hash-key.

2005-04-26 11:02  gb

	* lisp-kernel/spentry.s: Make Darwin assembler happy.  (Well,
	happier than it ordinarily is.)

2005-04-26 11:01  gb

	* examples/objc-runtime.lisp: Declare NSConcreteData.

2005-04-26 10:59  gb

	* lisp-kernel/: spentry.s, spjump.s: SPstore_node_conditional.

2005-04-26 10:58  gb

	* level-0/PPC/ppc-misc.lisp: Remove (very) obsolete %BIND-SPECIAL.

2005-04-26 10:57  gb

	* compiler/PPC/ppc2.lisp: Do rplaca/rplacd (and variants), svset
	(and variants) out-of-line, for new write-barrier scheme.

2005-04-26 10:55  gb

	* compiler/PPC/PPC32/ppc32-vinsns.lisp: A few indentation changes.

2005-04-26 10:55  gb

	* compiler/subprims.lisp: Add .SPstore-node-conditional.

2005-04-26 04:57  gb

	* compiler/subprims.lisp: Updated.

2005-04-26 04:56  gb

	* lisp-kernel/pmcl-kernel.c: Disable EGC, initially.

2005-04-26 04:54  gb

	* lisp-kernel/: spentry.s, spjump.s: Start new write-barrier
	scheme.

2005-04-26 00:55  gb

	* examples/bridge.lisp: Partially implement SEND in terms of
	interface information.

2005-04-26 00:54  gb

	* examples/cocoa-editor.lisp: Avoid message arg type ambiguity.

2005-04-26 00:53  gb

	* examples/: cocoa-typeout.lisp, cocoa-listener.lisp: Declare SEND
	arg type.

2005-04-26 00:52  gb

	* examples/objc-clos.lisp: Handle foreign slots differently, since
	offset/width info is available from interfaces.

2005-04-26 00:52  gb

	* examples/objc-runtime.lisp: Derive class info from interfaces,
	not via introspection.

2005-04-26 00:51  gb

	* examples/objc-support.lisp: Don't references private slots or use
	SEND to send undeclared messages.

2005-04-26 00:50  gb

	* level-1/version.lisp: Bump.

2005-04-26 00:50  gb

	* lib/foreign-types.lisp: Start thinking about making some of this
	target-sensitive.  Pre-define :<BOOL> as an integer type.

2005-04-26 00:48  gb

	* library/parse-ffi.lisp, lib/db-io.lisp: Handle protocol methods,
	protocols in ObjC class decls.

2005-04-26 00:47  gb

	* library/splay-tree.lisp: Add MAP-SPLAY-TREE-KEYS-AND-VALUES.

2005-04-24 00:01  gb

	* lib/arrays-fry.lisp: Ignore fill-pointers when looking at array
	dimensions in RESULT-BIT-ARRAY.

2005-04-20 06:25  gb

	* lib/db-io.lisp: Write trailer on CDB files, check for it.

2005-04-20 06:25  gb

	* level-1/version.lisp: Bump, once again.

2005-04-20 06:24  gb

	* headers/gnome2/C/.cvsignore: New file.

2005-04-20 03:08  gb

	* lib/db-io.lisp: Prepend 2K of NULs to .CDB files, for backward
	compatibility (sort of).  Still more bootstrapping ...

2005-04-20 00:53  gb

	* lib/db-io.lisp, library/parse-ffi.lisp: Changes to how some
	things are encoded in .cdb files; field offsets and widths are now
	provided explicitly.  This will require new .cdb files and is a
	little hard to bootstrap ...

2005-04-20 00:50  gb

	* level-1/l1-reader.lisp: Bryan's change to allow potential numbers
	with package prefixes to be treated as symbols.

2005-04-20 00:49  gb

	* headers/libc/C/populate.sh: Updated, a bit.

2005-04-20 00:48  gb

	* headers/gnome/C/populate.sh: Assume new-style location for
	gnome.h

2005-04-20 00:47  gb

	* headers/: gl/.cvsignore, gnome/.cvsignore, gtk/.cvsignore,
	libc/.cvsignore: Ignore backup .cdb files.

2005-04-20 00:44  gb

	* headers/: gl/C/.cvsignore, gnome/C/.cvsignore, gnome2/.cvsignore,
	gnome2/C/populate.sh, gnustep/.cvsignore, gnustep/C/populate.sh,
	gtk/C/.cvsignore, gtk2/C/.cvsignore, gtk2/C/populate.sh,
	libc/C/.cvsignore, gnustep/C/.cvsignore, gtk2/.cvsignore: New file.

2005-04-18 00:48  gb

	* examples/bridge.lisp: Fix typo: "dictionaryWithObjectsAndKeys:".

2005-04-18 00:47  gb

	* lib/db-io.lisp, lib/foreign-types.lisp, library/parse-ffi.lisp:
	Support for ObjC class info, method info in interface files.

2005-04-18 00:46  gb

	* lib/ccl-export-syms.lisp: Export CURRENT-DIRECTORY; drop
	COMPILE-LOAD.

2005-04-18 00:44  gb

	* level-1/version.lisp: Bump, yet again.

2005-04-18 00:44  gb

	* level-1/linux-files.lisp: Implement CURRENT-DIRECTORY and (SETF
	CURRENT-DIRECTORY).

2005-04-18 00:44  gb

	* level-1/l1-readloop-lds.lisp: Some toplevel commands for
	getting/setting the current directory.

2005-04-18 00:43  gb

	* level-1/l1-typesys.lisp: %DEFTYPE clears the type cache.

2005-04-18 00:43  gb

	* level-1/l1-files.lisp: Remove COMPILE-LOAD, which doesn't offer
	much functionality beyond that offered by (compile ... :load t),
	does it ?

2005-04-18 00:41  gb

	* level-0/l0-error.lisp: Say "FASL", not "PFSL" in error messages.

2005-04-18 00:41  gb

	* darwin-headers/libc/C/populate.sh: Use more recent headers
	(current Panther headers.)

2005-04-18 00:40  gb

	* darwin-headers/gl/C/populate.sh: Process agl.h as well.

2005-04-18 00:38  gb

	* darwin-headers/: gl/C/.cvsignore, quicktime/C/.cvsignore,
	quicktime/C/populate.sh: New file.

2005-04-18 00:38  gb

	* darwin-headers/: carbon/.cvsignore, cocoa/.cvsignore,
	gl/.cvsignore, libc/.cvsignore: Ignore *.cdb-BAK as well.

2005-04-18 00:36  gb

	* darwin-headers/: carbon/C/.cvsignore, chud/.cvsignore,
	chud/C/.cvsignore, chud/C/populate.sh, cocoa/C/.cvsignore,
	libc/C/.cvsignore, quicktime/.cvsignore: New files.

2005-04-18 00:26  gb

	* compiler/optimizers.lisp: Handle the 2-argument case of
	case-sensitive character comparison functions.

2005-04-17 19:29  alex

	* examples/objc-clos.lisp: 
	
	edited %objc-domain-slots-vector to allocate slot vectors on demand
	for object instantiated outside of lisp (AppKit).

2005-04-17 19:27  alex

	* level-1/l1-callbacks.lisp: 
	
	added a trace flag to the callback table and extended
	%pascal-functions% to set a special variable *callback-trace-p*
	during execution.

2005-04-17 19:26  alex

	* lib/encapsulate.lisp: 
	
	extended the trace facility to support tracing of callbacks, a
	:backtrace argument and hook variables for the IDE

2005-04-17 19:25  alex

	* lib/macros.lisp: 
	
	Extended DEFINE-CALLBACK and DEFCALLBACK-BODY to support tracing.

2005-04-17 08:56  beer

	* examples/bridge.lisp: evised %PARSE-MESSAGE and
	CHECK-MESSAGE-ARG-COUNT to fix a bug with interpreting some
	variable-arity message sends

2005-04-15 06:23  gb

	* level-1/version.lisp: Bump.

2005-04-15 06:13  gb

	* lib/level-2.lisp: Fix EVAL-REDEF of %ALLOC-MISC.

2005-04-15 06:00  gb

	* lisp-kernel/: constants64.h, constants64.s: Define charcodeshift,
	ncharchodebits consistently with what ppc64-arch says.

2005-04-15 06:00  gb

	* lisp-kernel/darwin64/Makefile: Apparently, it isn't necessary to
	use the well-known -weak_references_mismatch argument when that has
	nothing to do with anything.  ld64 just keeps getting better and
	better!

2005-04-15 05:59  gb

	* compiler/PPC/PPC64/ppc64-vinsns.lisp: TRAP-UNLESS-MACPTR.  Do a
	few more 64-bit comparisons.

2005-04-15 05:57  gb

	* compiler/PPC/PPC32/ppc32-vinsns.lisp: TRAP-UNLESS-MACPTR.

2005-04-15 05:57  gb

	* compiler/PPC/PPC64/ppc64-arch.lisp: Need a 1-word code-vector
	prefix here.

2005-04-15 05:56  gb

	* compiler/PPC/PPC32/ppc32-arch.lisp: No code-vector prefix here.

2005-04-15 05:56  gb

	* compiler/PPC/ppc2.lisp: Maybe emit a "prefix" on the code vector.
	 More PPC64 conditionalization.

2005-04-15 05:53  gb

	* compiler/PPC/ppc-lap.lisp: Maybe emit a "prefix" on the code
	vector.

2005-04-15 05:52  gb

	* compiler/PPC/ppc-disassemble.lisp: Skip over any code-vector
	prefix.  Start to conditionalize to make PPC64 disassembly better.

2005-04-15 05:51  gb

	* compiler/nx0.lisp: Define, use, NX1-TARGET-FIXNUMP.

2005-04-15 05:50  gb

	* compiler/arch.lisp: CODE-VECTOR-PREFIX, for PPC64 alignment.

2005-04-14 21:27  gb

	* compiler/PPC/PPC64/ppc64-arch.lisp: charcode-shift is 8;
	ncharcodebits is 8 (for now).

2005-04-14 21:26  gb

	* compiler/PPC/PPC32/ppc32-vinsns.lisp: Actually bother to define
	LOAD-CHARACTER-CONSTANT.

2005-04-14 21:26  gb

	* compiler/vreg.lisp: :u64const, :s64const.

2005-04-14 21:20  gb

	* compiler/PPC/ppc2.lisp: LWI -> LRI, PPC2-LWI -> PPC2-LRI.

2005-04-14 21:20  gb

	* compiler/PPC/PPC32/ppc32-vinsns.lisp: LWI -> LRI.

2005-04-14 21:19  gb

	* compiler/PPC/ppc-lapmacros.lisp: Use TARGET-ARCH-CASE, no need
	for PPC-LAP-TARGET-ARCH-CASE.

2005-04-14 21:18  gb

	* lib/macros.lisp: TARGET-ARCH-CASE here.

2005-04-14 01:39  gb

	* compiler/backend.lisp: Finish bootstrapping backend changes.

2005-04-14 01:13  gb

	* compiler/: backend.lisp, PPC/PPC32/ppc32-backend.lisp,
	PPC/PPC64/ppc64-backend.lisp: Start to remove obsolete target
	slots.

2005-04-14 00:51  gb

	* lib/sequences.lisp: Fix typos, exposed by Bryan's fix to #+/#-
	readers.

2005-04-14 00:21  gb

	* level-1/version.lisp: Bump version.

2005-04-14 00:20  gb

	* examples/bridge.lisp: #\B in typestrings is :<BOOL>.	C arrays
	are always passed by reference.

2005-04-14 00:19  gb

	* compiler/PPC/: PPC32/ppc32-vinsns.lisp, PPC64/ppc64-vinsns.lisp:
	Factor out some typecode-specific stuff.

2005-04-14 00:19  gb

	* compiler/PPC/: PPC32/ppc32-arch.lisp, PPC32/ppc32-backend.lisp,
	PPC64/ppc64-arch.lisp, PPC64/ppc64-backend.lisp: Backend/arch
	parameterization.

2005-04-14 00:18  gb

	* compiler/PPC/ppc2.lisp: Use target-specific parameters from 
	structure, not individually.  2d-aref/aset acode changes.

2005-04-14 00:18  gb

	* compiler/PPC/: ppc-lap.lisp, ppc-lapmacros.lisp: Use
	target-specific parameters from  structure, not individually.

2005-04-14 00:17  gb

	* compiler/PPC/ppc-arch.lisp: Require "ARCH" at load-time.

2005-04-14 00:16  gb

	* compiler/nx1.lisp: Try to keep target tags out of acode (for 2d
	array access only, so far.)

2005-04-14 00:16  gb

	* compiler/backend.lisp: Add a "target-arch" slot to backend
	structure (this should allow several other slots to be removed.)

2005-04-14 00:15  gb

	* compiler/arch.lisp: Start moving parameters from "backend"
	structure to new "target-arch" structure.

2005-04-13 12:23  bryan

	* lib/nfcomp.lisp: "file not found" during compile-file should be a
	file-error.

2005-04-12 22:57  bryan

	* level-1/l1-reader.lisp: per 2.4.8.17, "#+(or) #+(or) nil nil t"
	should probably read as T

2005-04-01 03:23  gb

	* darwin-headers/cocoa/C/populate.sh: No they weren't: parse
	PreferencePanes.h

2005-04-01 00:15  gb

	* compiler/PPC/ppc2.lisp: Minor target package changes.

2005-03-29 22:53  gb

	* compiler/: backend.lisp, PPC/PPC32/ppc32-backend.lisp: Start to
	add target-uvector-subtags to backend.

2005-03-29 07:06  gb

	* lisp-kernel/linux64/Makefile: First cut at a Makefile.

2005-03-29 07:05  gb

	* lisp-kernel/linux64/elf64ppc.x: Linker script for linux64; force
	kernel into low memory.

2005-03-29 07:05  gb

	* lisp-kernel/pmcl-kernel.c: May be grief including
	#<asm/cputable.h> on linux64.  Note that fact.

2005-03-29 07:04  gb

	* lisp-kernel/macros.s: extract_lowbyte uses clrlri.

2005-03-29 07:04  gb

	* lisp-kernel/lisp-exceptions.c: Don't save/restore PT_MQ; this had
	something to do with saving/restoring Altivec registers, a long
	time ago.

2005-03-29 07:03  gb

	* lisp-kernel/imports.s: Don't import __trampoline_setup on
	linux64.

2005-03-29 07:02  gb

	* lisp-kernel/plbt.c: No eabi_c_frame on linux64.

2005-03-28 04:34  gb

	* darwin-headers/cocoa/C/populate.sh: The actual cocoa interfaces
	(from darwin-interfaces-040505.tar.gz) were built from this, not
	from what's been in CVS.

2005-03-28 04:33  gb

	* compiler/PPC/PPC64/ppc64-vinsns.lisp:
	TRAP-UNLESS-{SINGLE,DOUBLE}-FLOAT, refer to the least significant
	bit as "lowbit", not as "bit31".  A few other things implemented; a
	lot to go.

2005-03-28 04:31  gb

	* compiler/PPC/PPC32/ppc32-vinsns.lisp:
	TRAP-UNLESS-{SINGLE,DOUBLE}-FLOAT, refer to the least significant
	bit as "lowbit", not as "bit31".

2005-03-28 04:28  gb

	* compiler/PPC/PPC64/ppc64-arch.lisp: Some fixes & cleanups;
	TCR-BIAS.

2005-03-28 04:26  gb

	* compiler/PPC/: PPC32/ppc32-backend.lisp,
	PPC64/ppc64-backend.lisp: More compilation-target parameters in the
	backend.

2005-03-28 04:25  gb

	* compiler/PPC/ppc2.lisp: Start to remove some ppc32-isms.

2005-03-28 04:24  gb

	* compiler/PPC/ppc-lapmacros.lisp: MOST (not all) things run-time
	conditionalized for ppc32/ppc64.

2005-03-28 04:24  gb

	* compiler/PPC/ppc-lap.lisp: Remove some PPC32-isms.

2005-03-28 04:23  gb

	* compiler/backend.lisp: Put more target stuff in the backend
	structure.

2005-03-28 04:22  gb

	* level-0/PPC/ppc-clos.lisp: GF protos, trampolines: LAP moved
	here.

2005-03-28 04:21  gb

	* level-0/PPC/ppc-float.lisp: Float sign, zerop functions in lisp.

2005-03-28 04:21  gb

	* level-0/PPC/ppc-io.lisp: A little bit of conditionalization (for
	a little bit of code.)

2005-03-28 04:20  gb

	* level-0/PPC/ppc-misc.lisp: A little bit of conditionalization
	(needs more work.)

2005-03-28 04:19  gb

	* level-0/PPC/ppc-numbers.lisp: %DOUBLE-FLOAT-PLUSP,
	%SHORT-FLOAT-PLUSP in lisp.

2005-03-28 04:18  gb

	* level-0/l0-numbers.lisp: %DOUBLE-FLOAT-ZEROP, %SHORT-FLOAT-ZEROP
	in lisp.

2005-03-28 04:18  gb

	* level-0/l0-float.lisp: %DOUBLE-FLOAT-SIGN, %SHORT-FLOAT-SIGN in
	lisp.

2005-03-28 04:17  gb

	* level-1/version.lisp: Bump; again, a little hard to bootstrap.

2005-03-28 04:16  gb

	* lib/number-macros.lisp: Remove some commented-out code.

2005-03-28 04:16  gb

	* lib/systems.lisp: Define PPC64-VINSNS.

2005-03-28 04:15  gb

	* lib/compile-ccl.lisp: Include PPC64-ARCH in
	*PPC-COMPILER-MODULES*.

2005-03-28 04:14  gb

	* lisp-kernel/constants32.h: Define TCR_BIAS.

2005-03-28 04:13  gb

	* lisp-kernel/constants64.h: Don't use NATURAL_POINTER_FIELD. 
	Define TCR_BIAS.

2005-03-28 04:13  gb

	* lisp-kernel/constants64.s: Define TCR_BIAS; ensure that TCR has
	single_float_convert field.

2005-03-28 04:12  gb

	* lisp-kernel/darwin/.gdbinit: No TCR_BIAS on Darwin32; rcontext is
	now r13.

2005-03-28 04:11  gb

	* lisp-kernel/lisptypes.h: Don't (try to) support 32-bit foreign
	pointers in 64-bit code.

2005-03-28 04:10  gb

	* lisp-kernel/lisp.h: Don't define NATURAL_POINTER_FIELD.

2005-03-28 04:10  gb

	* lisp-kernel/area.h: Don't use NATURAL_POINTER_FIELD.

2005-03-28 04:09  gb

	* lisp-kernel/Threads.h: Don't use NATURAL_POINTER_FIELD.  Define
	TCR_BIAS in constants{32,64}.h

2005-03-28 04:08  gb

	* level-1/l1-dcode.lisp: Move LAP code to level-0.

2005-03-27 14:36  gb

	* xdump/faslenv.lisp: Increment min fasl version.

2005-03-27 14:30  gb

	* lib/nfcomp.lisp: Increment fasl version.

2005-03-27 14:22  gb

	* level-1/version.lisp: Bump.

2005-03-27 14:22  gb

	* xdump/faslenv.lisp: Increment $fasl_vers.

2005-03-27 14:17  gb

	* compiler/PPC/ppc-arch.lisp: Don't define old-rcontext.

2005-03-27 14:16  gb

	* lisp-kernel/: constants.h, constants.s, spentry.s, subprims.s,
	thread_manager.c: Stop maintaining old_rcontext.  Don't need
	special get_interrupt_tcr() on Linux; review other TCR-related
	cruft.

2005-03-27 13:38  gb

	* lisp-kernel/: constants.h, constants.s, spentry.s, subprims.s:
	r13 is rcontext; maintain r2 (old_rcontext) in parallel, until
	we're bootstrapped.

2005-03-27 13:38  gb

	* compiler/PPC/ppc-arch.lisp: r13 is rcontext; r2 (maintained by
	the kernel) is old-rcontext, until we stop referencing it.

2005-03-27 12:01  gb

	* level-0/PPC/ppc-bignum.lisp, level-0/PPC/ppc-def.lisp,
	level-0/PPC/ppc-float.lisp, level-0/PPC/ppc-misc.lisp,
	lisp-kernel/constants.h, lisp-kernel/constants.s,
	lisp-kernel/macros.s, lisp-kernel/spentry.s,
	lisp-kernel/subprims.s, compiler/PPC/ppc-arch.lisp,
	compiler/PPC/ppc-lapmacros.lisp,
	compiler/PPC/PPC32/ppc32-vinsns.lisp: Stop maintaining OLD-VSP; R13
	will soon (one more round of bootstrapping) become RCONTEXT, and
	then the fasl version will change and there'll be new binaries.

2005-03-27 11:27  gb

	* level-0/PPC/: ppc-bignum.lisp, ppc-def.lisp, ppc-float.lisp,
	ppc-misc.lisp: Maintain OLD-VSP, not NEW-VSP.

2005-03-27 11:13  gb

	* compiler/PPC/: ppc-lapmacros.lisp, ppc2.lisp,
	PPC32/ppc32-vinsns.lisp: VSP is now r15, OLD-VSP is r13.  Keep them
	in sync.  Don't use PPC2-FIX-STACKREG or vinsn
	ADJUST-STACK-REGISTER, for bootstrapping reasons.

2005-03-27 11:08  gb

	* compiler/PPC/ppc-arch.lisp: VSP is now r15, OLD-VSP is r13.

2005-03-27 11:04  gb

	* lisp-kernel/: constants.h, constants.s, macros.s, spentry.s,
	subprims.s: VSP is now r15, OLD-VSP is r13.  They should be
	equivalent until we're finished bootstrapping; use check_vsp to
	enforce that at discrete execution points.

2005-03-27 07:39  gb

	* level-0/PPC/ppc-float.lisp, level-0/PPC/ppc-misc.lisp,
	compiler/PPC/PPC32/ppc32-vinsns.lisp: Ensure vsp = new-vsp, harder.

2005-03-27 07:39  gb

	* lisp-kernel/spentry.s: do check_vsp on subprim entry.

2005-03-27 07:38  gb

	* lisp-kernel/macros.s: define check_vsp (trap if vsp != new_vsp)

2005-03-27 06:55  gb

	* compiler/PPC/ppc-arch.lisp, compiler/PPC/ppc-lapmacros.lisp,
	compiler/PPC/PPC32/ppc32-vinsns.lisp, level-0/PPC/ppc-bignum.lisp,
	level-0/PPC/ppc-def.lisp, level-0/PPC/ppc-misc.lisp,
	lisp-kernel/constants.s, lisp-kernel/macros.s,
	lisp-kernel/spentry.s, lisp-kernel/subprims.s: Really no more
	old-fn.  R15 is new-vsp; try to keep it in synch with VSP (soon to
	become "old-vsp") at all times.

2005-03-27 06:00  gb

	* compiler/PPC/ppc-arch.lisp, compiler/PPC/ppc-lapmacros.lisp,
	compiler/PPC/PPC32/ppc32-vinsns.lisp, level-0/PPC/ppc-def.lisp,
	lisp-kernel/constants.h, lisp-kernel/constants.s,
	lisp-kernel/lisp-debug.c, lisp-kernel/spentry.s,
	lisp-kernel/subprims.s: No more old-fn.

2005-03-27 04:53  gb

	* level-0/PPC/ppc-def.lisp: Copy FN to OLD-FN in
	%APPLY-LEXPR-TAIL-WISE.

2005-03-27 04:52  gb

	* compiler/PPC/: ppc-arch.lisp, ppc-lapmacros.lisp,
	PPC32/ppc32-vinsns.lisp: Lisp believes that FN = R16, copies it to
	OLD-FN whenever it's set (for bootstrapping).

2005-03-27 03:04  gb

	* compiler/PPC/ppc-arch.lisp, compiler/PPC/ppc-lapmacros.lisp,
	compiler/PPC/PPC32/ppc32-vinsns.lisp, lisp-kernel/constants.h,
	lisp-kernel/constants.s, lisp-kernel/constants32.s,
	lisp-kernel/lisp-debug.c, lisp-kernel/spentry.s,
	lisp-kernel/subprims.s: Remove remaining uses of temp4; define r16
	as "new_fn".  All assignments to fn copy to new_fn, as well (more
	bootstrapping).

2005-03-27 00:50  gb

	* compiler/PPC/PPC32/ppc32-arch.lisp, level-0/PPC/ppc-clos.lisp,
	lib/ppcenv.lisp, lisp-kernel/Threads.h, lisp-kernel/constants32.s,
	lisp-kernel/thread_manager.c: Back out of previous change, since
	even current versions of Debian unstable don't provide a TLS-aware
	gcc/glibc.  Set TCR_BIAS to 0 where relevant.
	
	Start to take another approach (moving rcontext to r13), by
	starting to phase out temp4 (= r16).  Don't let the compiler
	allocate temp4, don't use temp4 in LAP code.

2005-03-26 20:35  gb

	* level-1/version.lisp: Bump.

2005-03-26 20:34  gb

	* compiler/PPC/PPC32/ppc32-arch.lisp, lisp-kernel/Threads.h,
	lisp-kernel/constants32.s, lisp-kernel/lisp-exceptions.c,
	lisp-kernel/pmcl-kernel.c, lisp-kernel/spentry.s,
	lisp-kernel/thread_manager.c, lisp-kernel/darwin/.gdbinit,
	lisp-kernel/darwin/Makefile: Start to bootstrap changes to
	reconcile OpenMCL's notion of thread-specific-data (the TCR) with
	Linux's.  On Darwin, this means that r2 (rcontext) points #x7000
	bytes beyond the TCR; on Linux, the TCR structure will be the first
	(real) thread-local variable, and the C runtime's thread pointer
	will therefore point ... #x7000 bytes beyond the TCR.  (This
	basically means that we can keep the same value in r2/rcontext when
	running lisp and foreign code on Linux; Linux C and thread and
	debugging utilities are getting increasingly insistent about that.)
	
	This introduces binary incompatibility; there'll need to be a
	change in the fasl version and new images when the dust settles a
	bit.

2005-03-26 20:20  gb

	* lib/dumplisp.lisp: Hmm.  Not likely that MultiFinder/UniFinder
	are involved anymore.

2005-03-18 22:00  gb

	* lisp-kernel/m4macros.m4: Try to use .size directive on ELF.

2005-03-18 21:59  gb

	* lib/ccl-export-syms.lisp: Export
	*IGNORE-EXTRA-CLOSE-PARENTHESIS*.

2005-03-18 21:58  gb

	* level-1/version.lisp: Are we 0.14.3 yet ?

2005-03-18 21:57  gb

	* level-1/l1-reader.lisp: By default, signal errors on dangling
	close parens.

2005-03-18 21:57  gb

	* lib/encapsulate.lisp: Doc string for TRACE: don't describe
	obscure SBCL options.  Or obscure OpenMCL options, either

2005-03-18 21:56  gb

	* level-1/l1-clos.lisp: Add missing #\Newline at EOF.

2005-03-18 21:48  gb

	* lib/: eval.lisp, step.lisp: no more eval, step

2005-03-18 21:07  gb

	* tools/.cvsignore: ignore fasls

2005-03-18 20:42  gb

	* lisp-kernel/lisp-exceptions.c: Word-size and integer/pointer
	64-bit issues.	Some 64-bit Mach exception stuff (needs more work.)

2005-03-18 20:41  gb

	* lisp-kernel/pmcl-kernel.c: Word-size and integer/pointer 64-bit
	issues.  Use vm_region64 if applicable; someday soon, use it with
	reasonable parameters.

2005-03-18 20:39  gb

	* lisp-kernel/: thread_manager.c, plsym.c, plbt.c: Word-size and
	integer/pointer 64-bit issues.

2005-03-18 20:22  gb

	* lisp-kernel/: gc.c, image.c, lisp-debug.c, lisp-exceptions.h:
	Word-size and integer/pointer 64-bit issues.

2005-03-18 20:20  gb

	* lisp-kernel/constants64.h: ppc64 C frame (may be the same on
	linux/darwin.)

2005-03-18 20:19  gb

	* lisp-kernel/bits.h: ppc64 inline asm for count_leading_zeros. 
	(Still lots of 32-bit assumptions in callers ...)

2005-03-18 20:18  gb

	* lisp-kernel/bits.c: Include lisp-exceptions.h, for some obscure
	reason ...

2005-03-18 20:18  gb

	* lisp-kernel/asmutils.s: Some 64-bit fixes.

2005-03-18 20:07  gb

	* lisp-kernel/Threads.h: some extra casts

2005-03-18 19:53  gb

	* lisp-kernel/darwin64/Makefile: work around some new bugs in ld64

2005-03-17 23:55  gb

	* lisp-kernel/lisp-exceptions.c: Use printf-style '%', not
	format-style '~', in MACH_CHECK_ERROR.
	
	Try to get some thread state stuff for PPC64.
	
	Complain if we can't get thread state  in
	create_thread_context_frame.
	
	When deallocate thread exception port before destroying it, just in
	case.
	
	Hold the mach_exception_lock_set lock before suspending in
	suspend_tcr.

2005-03-17 23:51  gb

	* lisp-kernel/pmcl-kernel.c: Keep trying to get xFindSymbol to
	compile without warnings on current and future OS releases.

2005-03-13 04:47  gb

	* lisp-kernel/linux/Makefile: Add -maltivec to ASFLAGS.

2005-03-08 21:15  gb

	* lisp-kernel/spentry.s: Ensure that the XER is zeroed in the
	shared ff_call return code (doh!) and in a slightly more subtle
	case involving Linux syscall return: it seems that the XER[SO] bit
	can be set when the CR0[SO] bit is clear on syscall return, and we
	weren't zeroing the XER in that case (causing spurious arithmetic
	overflows on subsequent arithmetic operations.)

2005-03-08 21:05  gb

	* level-0/PPC/ppc-misc.lisp: Move YIELD, READ-LOCK-RWLOCK, and
	WRITE-LOCK-RWLOCK to lisp code, mostly 'cause I don't want to have
	to trust inline syscalls from LAP.

2005-03-08 21:04  gb

	* level-0/l0-misc.lisp: Move YIELD, READ-LOCK-RWLOCK, and
	WRITE-LOCK-RWLOCK here (from ppc-misc), mostly 'cause I don't want
	to have to trust inline syscalls from LAP.

2005-03-06 20:55  gb

	* level-0/PPC/ppc-misc.lisp: After doing inline syscalls, ensure
	that the XER (especially the XER[SO] bit) is cleared.

2005-03-05 02:07  bryan

	* level-1/l1-io.lisp: when *print-array*, use #nA(..) syntax even
	when array-element-type is something other than t.

2005-03-05 01:13  bryan

	* level-1/l1-io.lisp: print-unreadable-object should accept t
	(*terminal-io*) and nil (*standard-output*) for the stream.

2005-03-04 23:55  bryan

	* level-1/l1-io.lisp: %print-unreadable-object should always return
	nil.
	
	when type is t, %print-unreadable-object should always print a
	space after the type not just when it's followed by more stuff. 
	(seems less aesthetically pleasing, but that's what the spec says).

2005-03-04 14:46  bryan

	* level-1/l1-streams.lisp: ioblock-element-shift should never be <
	0.

2005-03-02 23:28  bryan

	* level-1/version.lisp: bump.

2005-03-02 20:05  bryan

	* level-1/l1-files.lisp: when *print-escape*, pathnames always
	print starting with #P.  (per clhs 22.1.3.11)

2005-03-02 19:18  bryan

	* level-1/l1-io.lisp: when *print-array* is nil, print bit-vectors
	unreadably.

2005-03-02 18:04  bryan

	* level-1/l1-io.lisp: don't do *print-level* truncation for
	bit-vectors and strings.

2005-03-02 16:42  bryan

	* level-1/l1-io.lisp: write-a-cons: when *print-length*=0, write
	"..." for the entire cons.  when the cons is a dotted pair, don't
	decrement print-length before printing the cdr.

2005-03-02 14:49  bryan

	* level-1/l1-io.lisp: when *print-length* would cause "..." to be
	printed immediately following "#(", don't print a space.  thus
	"#(...)", not "#( ...)".

2005-03-02 13:42  bryan

	* lib/format.lisp: don't insert commas inbetween padchars in #\r
	format directive.

2005-03-01 00:41  bryan

	* level-1/version.lisp: bump.

2005-03-01 00:40  bryan

	* lib/macros.lisp: defclass: signal program error when a slot is
	initialized more than once in :default-initargs.  defclass: make
	duplicate slot name program error a bit more verbose.

2005-02-28 23:06  bryan

	* lib/describe.lisp: really big BIGNUMS shouldn't cause describe to
	FLOATING-POINT-OVERFLOW.  instead just print the fact that it would
	if you tried.

2005-02-27 23:43  gb

	* lisp-kernel/darwin64/Makefile: Build on 64-bit DarwinPPC.  Work
	around some linker lossage.

2005-02-27 23:42  gb

	* lisp-kernel/darwin/Makefile: Remove some obsolete stuff.  Try to
	handle cases where OS libs are gratuitously deleted and added in
	unnamed, undiscussed OS releases.

2005-02-27 23:35  gb

	* lisp-kernel/pmcl-kernel.c: Some word size/signedness cleanup. 
	Use dlsym() in cases where we're sure that it exists.

2005-02-27 23:34  gb

	* lisp-kernel/plbt.c: Rename 'dladdr' to 'darwin_dladdr', in case
	The OS Release That Can Not Be Discussed defines its own dladdr
	function.

2005-02-27 23:32  gb

	* lisp-kernel/lisp-exceptions.h: Try to work around the (old, now
	fixed) OSX G5 kernel signal handler bug, by flipping an unused bug
	in the XER.

2005-02-27 23:31  gb

	* lisp-kernel/lisp-exceptions.c: Some word size/signedness cleanup.

2005-02-27 23:30  gb

	* lisp-kernel/lisp-debug.c: Don't prototype print_lisp_object().

2005-02-27 23:29  gb

	* lisp-kernel/image.c: Be fussy about word size, signedness. 
	(Needs more fussiness.)

2005-02-27 23:29  gb

	* lisp-kernel/imports.s: User PTR macro for imported addresses
	(word size issues.)

2005-02-27 23:28  gb

	* lisp-kernel/m4macros.m4: Tweak FUN .stabs handling, to make fussy
	assemblers (that can't be discussed in public yet) happy.

2005-02-27 23:23  gb

	* lisp-kernel/pantherg5/Makefile: no more pantherg5 stuff

2005-02-27 23:20  gb

	* lisp-kernel/spjump.s: Force 12 bit alignment.  (See if this
	breaks Linux.)

2005-02-27 23:18  gb

	* level-1/l1-streams.lisp: Remove obsolete INSTANCE-INITIALIZE
	methods.

2005-02-27 15:25  bryan

	* lib/format.lisp: width parameter <=0 passed to ~f format
	directive should act as if it never was specified.  previously
	(when 0) would loop.

2005-02-25 20:21  gb

	* lib/ccl-export-syms.lisp: Export WITH-POINTER-TO-IVECTOR from
	CCL; export a few missing things from OPENMCL-MOP.

2005-02-25 20:20  gb

	* lib/macros.lisp: WITH-POINTER-TO-IVECTOR.

2005-02-25 20:18  gb

	* level-0/l0-pred.lisp: Add UVECTORP & IVECTORP; make them type
	predicates.

2005-02-25 19:40  gb

	* level-0/PPC/ppc-misc.lisp: Handle the DOUBLE-FLOAT case(es) in
	%VECT-DATA-TO-MACPTR.

2005-02-25 19:36  gb

	* level-1/l1-streams.lisp: %MAKE-HEAP-IVECTOR: element count not
	optional.

2005-02-25 18:00  gb

	* level-1/version.lisp: Bump.

2005-02-25 17:59  gb

	* lisp-kernel/lisp-debug.c: Add an 'extern' to definition of
	debug_command_entries[].  In lisp_debugger(), define 'state' before
	executable body.

2005-02-25 17:57  gb

	* compiler/PPC/ppc-arch.lisp: A few name changes, for consistency
	with kernel notion of kernel-globals.

2005-02-25 17:56  gb

	* examples/: objc-clos.lisp, objc-support.lisp: Handle changes to
	DEFCLASS's processing of random slot options (:FOREIGN-TYPE).

2005-02-25 17:55  gb

	* lib/macros.lisp: DEFCLASS: only collect random slot option values
	into a list if option was provided more than once.

2005-02-25 17:52  gb

	* level-1/l1-clos.lisp: Preserve values of class slots (:ALLOCATION
	:CLASS) during class redefinition.

2005-02-25 17:51  gb

	* level-1/l1-boot-2.lisp: Bind *LOADING-FILE-SOURCE-FILE* around
	calls to %FASLOAD.

2005-02-25 17:50  gb

	* level-1/l1-init.lisp: Define *LOADING-FILE-SOURCE-FILE*
	elsewhere.

2005-02-25 17:49  gb

	* level-0/l0-init.lisp: Define *LOADING-FILE-SOURCE-FILE* here.

2005-02-25 17:48  gb

	* level-0/l0-misc.lisp: Kernel globals in PPC (not PPC32) package.

2005-02-25 17:44  gb

	* level-1/: l1-pathnames.lisp, l1-boot-1.lisp,
	l1-lisp-threads.lisp: Kernel globals in PPC (not PPC32) package.

2005-02-23 01:01  bryan

	* level-1/version.lisp: bump.

2005-02-22 16:24  gb

	* lisp-kernel/spentry.s: Load f1 from the right stack offset when
	returning from EABI callback.

2005-02-22 16:01  gb

	* lisp-kernel/spentry.s: All callback variants try to return values
	in r3, r4, and f1.

2005-02-22 15:59  gb

	* lib/macros.lisp: Handle float returns in callbacks (needs related
	kernel changes; untested on Linux.)

2005-02-22 13:26  bryan

	* lib/pprint.lisp: when *pretty-print* and *print-base* > 10, use
	the slightly slower #'write-a-symbol to properly determine
	potential numbers.

2005-02-22 13:22  bryan

	* level-1/l1-io.lisp: use *print-base*, not *read-base*, when
	deciding whether to quote a potential number.

2005-02-20 18:47  bryan

	* lib/format.lisp: handle ~v when nil for ~{...~}

2005-02-20 16:25  bryan

	* level-1/version.lisp: bump.  use this version to check for
	stream-external-format being a generic function.

2005-02-20 16:24  bryan

	* level-1/l1-sysio.lisp: rewrite stream-external-format as a
	generic function.

2005-02-20 15:36  bryan

	* lib/format.lisp: treat ~vr as ~r when arg is nil.  per clhs 22.3.

2005-02-20 13:33  bryan

	* level-1/l1-streams.lisp: remove unused code: (defmethod
	file-stream-external-format ((s broadcast-stream))

2005-02-20 03:08  bryan

	* level-1/version.lisp: bump.

2005-02-20 03:05  bryan

	* lib/format.lisp: treat ~v[...~] as ~[...~] when arg is nil.  per
	clhs 22.3.

2005-02-19 19:13  bryan

	* lib/arrays-fry.lisp: somebody misses printf.. format uses ~ and
	not %.

2005-02-19 16:51  bryan

	* lib/format.lisp: reverse ~:@C printing per clhs: "~:@C prints
	what ~:C would, and then if the character requires unusual  shift
	keys on the keyboard to type it, this fact is mentioned."

2005-02-19 15:34  bryan

	* level-1/l1-reader.lisp: add Fs (file separator), Gs (group
	separator), Rs (record separator), and Us (unit seperator) to
	*name-char-alist*.
	
	#\Fs to avoid printing something unescaped #\^\, the others for
	completeness.  the extra four entries in the alist shouldn't have
	any noticeable effect.
	
	probably could fix the printer (and reader?) to handle the escaped
	case, but i like seeing the textual representation.

2005-02-19 14:29  bryan

	* lib/format.lisp: when printing a number with a sign and padding,
	print padding first and then the sign.

2005-02-18 22:42  bryan

	* level-1/version.lisp: bump for #A changes.

2005-02-18 16:19  bryan

	* lib/read.lisp: rewrite #A dispatch handler to allow for all types
	of sequences (bitfields, strings, vectors, lists) when they make
	sense for the supplied rank.

2005-02-17 17:02  gb

	* examples/: objc-readtable.lisp, objc-runtime.lisp: Observe
	*READ-SUPPRESS* in reader macros.

2005-02-16 18:42  bryan

	* tools/asdf.lisp: hook asdf into *module-provider-functions*.

2005-02-16 16:15  bryan

	* level-1/version.lisp: bump.

2005-02-16 14:09  bryan

	* compiler/nx-basic.lisp, compiler/nx.lisp, compiler/nx0.lisp,
	compiler/PPC/ppc-disassemble.lisp, compiler/PPC/ppc-lapmacros.lisp,
	level-0/l0-aprims.lisp, level-0/l0-array.lisp, level-0/l0-def.lisp,
	level-0/l0-float.lisp, level-0/l0-hash.lisp, level-0/l0-init.lisp,
	level-0/l0-misc.lisp, level-0/l0-numbers.lisp,
	level-0/l0-pred.lisp, level-0/l0-symbol.lisp,
	level-0/PPC/ppc-pred.lisp, level-1/l1-aprims.lisp,
	level-1/l1-boot-1.lisp, level-1/l1-clos-boot.lisp,
	level-1/l1-error-signal.lisp, level-1/l1-error-system.lisp,
	level-1/l1-files.lisp, level-1/l1-init.lisp, level-1/l1-io.lisp,
	level-1/l1-numbers.lisp, level-1/l1-pathnames.lisp,
	level-1/l1-reader.lisp, level-1/l1-readloop-lds.lisp,
	level-1/l1-readloop.lisp, level-1/l1-streams.lisp,
	level-1/l1-symhash.lisp, level-1/l1-sysio.lisp,
	level-1/l1-typesys.lisp, level-1/l1-utils.lisp,
	level-1/sysutils.lisp, lib/apropos.lisp, lib/arrays-fry.lisp,
	lib/chars.lisp, lib/defstruct-lds.lisp, lib/defstruct.lisp,
	lib/describe.lisp, lib/encapsulate.lisp, lib/format.lisp,
	lib/hash.lisp, lib/lists.lisp, lib/macros.lisp, lib/misc.lisp,
	lib/nfcomp.lisp, lib/numbers.lisp, lib/pathnames.lisp,
	lib/pprint.lisp, lib/read.lisp, lib/sequences.lisp, lib/setf.lisp,
	lib/sort.lisp, lib/streams.lisp, lib/time.lisp, library/loop.lisp:
	add docstrings to the majority of common-lisp-user symbols starting
	with a snapshot of those found in SBCL 0.8.18.

2005-02-16 13:34  bryan

	* tools/asdf-install/: COPYRIGHT, load-asdf-install.lisp,
	split-sequence.lisp: initial repository version from 050201 import.

2005-02-16 13:29  bryan

	* level-1/l1-reader.lisp: unmatched ') when
	ccl::*ignore-extra-close-parenthesis* is nil should signal a
	reader-error.
	
	the default for ccl::*ignore-extra-close-parenthesis* remains t. 
	set it to nil in your init file for maximum ansi-compliance.

2005-02-16 13:12  bryan

	* tools/: README-OpenMCL.txt, asdf-install/README,
	asdf-install/asdf-install.asd, asdf-install/defpackage.lisp,
	asdf-install/installer.lisp, asdf-install/port.lisp,
	asdf-install/doc/index.html: sync with latest asdf-install code.

2005-02-16 12:53  bryan

	* tools/asdf.lisp: import latest ASDF from clocc repository.
	
	identical (besides revision number) to asdf.lisp found in SBCL
	0.8.18.

2005-02-16 12:50  bryan

	* xdump/xfasload.lisp: turn on *save-doc-strings* and
	*fasl-save-doc-strings*.

2005-02-16 12:45  bryan

	* level-1/l1-reader.lisp: ccl::%unreadable should signal a
	reader-error.
	
	ccl::%unreadable is called when the reader encounters #<, #), or
	#<whitespace>.

2005-02-16 12:44  bryan

	* lib/read.lisp: ## when *read-suppress* should return nil, not
	(values).

2005-02-16 12:43  bryan

	* level-1/l1-reader.lisp: #nr shouldn't type-check n when
	*read-suppress*.

2005-02-16 12:42  bryan

	* level-1/l1-reader.lisp: #( when *read-suppress should ignore
	array length problems.

2005-02-16 12:41  bryan

	* lib/read.lisp: rewrite #* handler
	
	#* must signal a reader-error if any of the token characters are
	not 0 or 1.  previously it would stop at the first character that
	was not 0 or 1.  single- and multi-escape are not allowed in the
	token for #*.
	
	#n* when n > 0 must have at least one element.	the number of
	elements can not exceed n.
	
	except if *read-suppress*, then anything goes until the next
	whitespace or terminating macro.

2005-02-16 12:39  bryan

	* level-1/l1-reader.lisp: more occurrences where error should be a
	reader-error.

2005-02-16 12:35  bryan

	* level-1/l1-streams.lisp: fill in some missing methods for
	echo-streams and concatenated-streams.
	
	  (defmethod stream-read-char-no-hang ((s echo-stream))
	  (defmethod stream-read-byte ((s echo-stream))
	  (defmethod stream-read-line ((s echo-stream))
	  (defmethod stream-read-vector ((s echo-stream) vector start end)
	
	  (defmethod stream-read-char-no-hang ((s concatenated-stream))
	  (defmethod stream-peek-char ((s concatenated-stream))
	  (defmethod stream-read-line ((s concatenated-stream))
	  (defmethod stream-read-list ((s concatenated-stream) list count)
	  (defmethod stream-read-vector ((s concatenated-stream) vector
	start end)

2005-02-16 12:31  bryan

	* level-0/l0-symbol.lisp, level-0/nfasload.lisp,
	level-1/l1-symhash.lisp: ccl::hash-pname loses when given a
	non-simple-string
	
	find-all-symbols did no checking and didn't massage.  added a
	ccl::ensure-simple-string to both check and massage.
	
	make-symbol checked that the arg was a 'simple-string using
	#'require-type.  replacing that with ccl::ensure-simple-string both
	checks and massages.
	
	ccl::pkg-arg (called by a bunch of symbol iterator macros) did
	check that if the arg was a string, that it was a simple string.  i
	rewrote the initial if form as a cond that will call
	ccl::ensure-simple-string if the arg is indeed a string.
	
	also updated ccl::new-package-name.

2005-02-16 12:22  bryan

	* lib/backquote.lisp: comma not inside backquote should signal
	reader-error.

2005-02-16 12:20  bryan

	* level-1/l1-reader.lisp: if *read-suppress*, return NIL from
	read(-*) forms.

2005-02-16 12:19  bryan

	* level-1/l1-io.lisp: adjustable arrays should print readably when
	*print-array* (per clhs 22.1.3.7-8)

2005-02-16 12:16  bryan

	* lib/pprint.lisp: don't declare dynamic-extent for the unused args
	passed to (funcall (formatter "~A") ..) which end up being returned
	to the caller.

2005-02-16 12:11  bryan

	* lib/apropos.lisp: "" is a substring to all strings, update
	%apropos-substring-p to explicitly check for that and return t
	before doing any more work.

2005-02-16 12:09  bryan

	* level-1/l1-utils.lisp: a string-designator can also be a
	singleton character, update string-argp to reflect that.

2005-02-16 12:05  bryan

	* lib/macros.lisp: typecase was always pushing the t clause (if
	present) to the end of the clauses.  i suspect that most cases when
	it appears before the end, the user intended for it to be
	equivalent to a final OTHERWISE clause.  hopefully the warning
	messages about later clauses being shadowed will be sufficient to
	alert them.  as an added benefit it dead-code strips any cases
	following a t-clause.
	
	finally it now correctly raises an error if OTHERWISE (if present)
	is not the final clause.

2005-02-16 11:56  bryan

	* lib/sequences.lisp: ccl::simple-vector-delete loses with
	displaced arrays with a displaced-index-offset > 0.
	
	the second loop (looping through the scratch bit vector) to copy
	the items that survive into the new array misuses the offset with
	the bit vector.  this causes an array out of bounds error.  instead
	it should use the offset with the original array to reference the
	item.
	
	the third loop which copies the remaining items that were
	explicitly excluded from the test also needs the offset to copy the
	right items.

2005-02-16 11:52  bryan

	* lib/format.lisp: allow mincol, minpad in format directives to be
	negative.

2005-02-16 11:46  bryan

	* lib/format.lisp: non-list args in ~{..~} format directive should
	signal type-error.

2005-02-16 11:41  bryan

	* level-1/l1-format.lisp: allow #\+ in format directives.

2005-02-16 11:40  bryan

	* compiler/PPC/ppc-lap.lisp: modify defppclapfunction to accept a
	docstring.

2005-02-16 00:24  bryan

	* lib/macros.lisp: don't update index if with-input-from-string
	exits abnormally.

2005-02-16 00:17  bryan

	* lib/setf.lisp: spec says that the long form of defsetf encloses
	the body in a block named after the access function.
	
	defsetf was doing the wrong thing and putting the block around the
	eventual setf-expansion instead of the body that's evaluated to
	generate the setf-expansion.
	
	defsetf should also return the name of the access-fn and not the
	doc string.

2005-02-15 19:23  bryan

	* level-1/l1-reader.lisp: accept #:. per CLHS and ansi-test
	SYNTAX.SHARP-COLON.7

2005-02-15 19:14  bryan

	* level-0/l0-hash.lisp: %hash-table-equalp uses :test arg instead
	of equalp.
	
	spec says: equalp descends hash-tables by first comparing the count
	of entries and the :test function; if those are the same, it
	compares the keys of the tables using the :test function and then
	the values of the matching keys using equalp recursively.

2005-02-15 19:04  bryan

	* level-1/l1-reader.lisp: suppress unused lexical variable warning
	in #: handler

2005-02-15 18:58  bryan

	* level-1/l1-io.lisp: clhs 22.1.3.8 says an array is printed
	started with #A.

2005-02-15 18:52  bryan

	* level-1/l1-io.lisp: clhs 22.1.3.1.4 says a complex number is
	printed started with #C.

2004-10-27 00:56  gb

	* lisp-kernel/lisp-exceptions.c: Hacks to keep fp exceptions
	enabled after pthread_kill() on Darwin.
	
	Allways enable fp exceptions when calling back into lisp.

2004-10-26 23:28  gb

	* lisp-kernel/asmutils.s: back out of earlier change, now that
	signal_handler calls get_interrupt_tcr

2004-10-26 23:23  gb

	* lisp-kernel/lisp-exceptions.c: Use get_interrupt_tcr() in
	signal_handler on linux.

2004-10-26 23:22  gb

	* lisp-kernel/thread_manager.c: get_interrupt_tcr() takes a
	"create-p" argument, like some callers thought it did.

2004-10-26 22:51  gb

	* lisp-kernel/: asmutils.s, lisp-exceptions.c: play around with r2
	when zeroing FPSCR

2004-10-06 16:44  gb

	* examples/: cocoa-editor.lisp, cocoa-listener.lisp,
	cocoa-typeout.lisp: Alex Crain's patches (paste in listener,
	typeout window size)

2004-10-01 05:03  gb

	* level-1/l1-clos.lisp: if a CERROR offers to change the class of
	an existing GF, actually call CHANGE-CLASS to do so

2004-09-25 18:38  gb

	* level-1/l1-clos.lisp: Use a real SHARED-INITIALIZE after CLOS is
	bootstrapped.  Default superclasses based on metaclass, in
	(SHARED-INITIALIZE :AFTER) method on SLOTS-CLASS.  Don't add use
	:INITARGS for most SLOTS-CLASS slots (the initargs to
	SHARED-INITIALIZE :AFTER should generally set them to computed
	values.) Make sure that the right version of UPDATE-SLOTS is
	committed.

2004-09-25 18:31  gb

	* level-1/l1-dcode.lisp: New support for funcallable instances,
	from Tim Moore.

2004-09-25 18:31  gb

	* level-1/l1-clos-boot.lisp: INSTANCE-SLOTS knows where to find
	slots in funcallable instances that aren't GF's (from Tim Moore.)

2004-09-25 15:38  gb

	* level-1/l1-lisp-threads.lisp: Use %HEAP-IVECTOR-P when checking
	bogosity.

2004-09-25 15:37  gb

	* level-1/l1-streams.lisp: Kinder, gentler heap-ivector stuff.	Use
	it.

2004-09-25 15:37  gb

	* level-1/version.lisp: Bump.

2004-09-25 15:36  gb

	* lib/ccl-export-syms.lisp: Export MAKE-HEAP-IVECTOR and
	DISPOSE-HEAP-IVECTOR.

2004-09-25 15:35  gb

	* lisp-kernel/darwin/Makefile, lib/macros.lisp: DEFCLASS macro:
	handle :DOCUMENTATION as a single option, if provided.	Don't
	default superclasses (from Tim Moore.).  Pass class name, not
	class, in :METACLASS option.

2004-09-25 15:16  gb

	* level-0/PPC/ppc-misc.lisp: FUDGE-HEAP-POINTER: user clrrwi to
	clear three bits.

2004-09-25 15:15  gb

	* hemlock/src/macros.lisp: WITH-POPUP-DISPLAY: use typeout-stream
	(from Alex Crain.)

2004-09-25 15:14  gb

	* hemlock/src/interp.lisp: Indentation change.

2004-09-25 15:13  gb

	* examples/cocoa-editor.lisp: Send backtrace info to typeout window
	on error (from Alex Crain.)

2004-09-25 15:12  gb

	* examples/cocoa-window.lisp: Typeout-window changes, from Alex
	Crain.

2004-09-25 15:08  gb

	* examples/cocoa-typeout.lisp: New file, from Alex Crain

2004-09-25 15:08  gb

	* examples/bridge.lisp: Fixes to COERCE-TO-FOREIGN-TYPE, from
	Randall Beer.

2004-09-25 15:07  gb

	* OpenMCL.app/Contents/Resources/English.lproj/MainMenu.nib/:
	classes.nib, info.nib, objects.nib: Changes from Alex Crain, for
	typeout window.

2004-09-25 15:07  gb

	* OpenMCL.app/Contents/Resources/English.lproj/.cvsignore: new file

2004-09-19 17:21  gb

	* lisp-kernel/lisp-exceptions.c: use thread_abort_safely() when
	suspending Mach threads

2004-09-13 01:26  gb

	* lisp-kernel/thread_manager.c: wait_on_semaphore: return
	KERN_OPERATION_TIMED_OUT if wait was aborted and we'd timed out
	anyway.  suspend_tcr: use mach_suspend_tcr() preferentially on
	Darwin.

2004-09-13 01:21  gb

	* lisp-kernel/lisp-exceptions.c: mach_resume_tcr: it would be a
	good idea to actually resume the thread, not just do the
	bookkeeping (a call to thread_resume() was missing.)

2004-08-30 16:20  gb

	* examples/cocoa-editor.lisp: Lots of changes, mostly:
	
	- try to speed up callbacks that fetch characters from the virtual
	nsstring - kill echo-area buffers when closing windows - windows
	should be released when closed; documents should close when the  
	last window closes.  - try not to invalidate the buffer cache on
	insertions - disable background layout before closing the window
	(in case that's still	going on ...) - clear the buffer's modified
	state when buffer is saved (not sure if the   modeline indicator's
	updated correctly) - DISABLE-BLINK tells the layout manager to
	force redisplay of the (now   non-blinking) character.

2004-08-30 15:59  gb

	* examples/objc-runtime.lisp: Assert that SELF is an instance in
	instance method (should also assert that :ID-typed parameters are
	instances/classes.)

2004-08-30 15:58  gb

	* examples/objc-clos.lisp: set pointer types directly

2004-08-30 15:33  gb

	* examples/: cocoa-listener.lisp, cocoa-window.lisp: Use (THE ...)
	to help the bridge resolve some messages.

2004-08-30 15:31  gb

	* hemlock/src/modeline.lisp: Use DEFPARAMETER to initialize
	*DEFAULT-MODELINE-FIELDS*, so it's a little easier to redefine.

2004-08-30 15:30  gb

	* hemlock/src/lispmode.lisp: Wrap some of the indentation code in a
	MODIFYING-BUFFER, to defer display updates. (This is experimental,
	and should probably be made more general.)

2004-08-30 15:29  gb

	* hemlock/src/interp.lisp: Don't be quite so eager to clear the
	echo area, especially when it's the current buffer.

2004-08-30 15:25  gb

	* lib/foreign-types.lisp: Make (:* T) be shorthand for (:* :VOID). 
	May lead to (benign) redefinition warnings.

2004-08-30 15:25  gb

	* level-1/l1-init.lisp: Remove some FRED-isms.

2004-08-30 15:22  gb

	* level-0/l0-aprims.lisp: DEREFERENCE-BASE-STRING: third return
	value is just the length (not length + displacement).

2004-08-10 18:54  gb

	* level-1/l1-readloop.lisp: Check for local macro functions (and
	complain if FUNCTION references them) in cheap evaluator.
	
	Pass a function and other information to *MACROEXPAND-HOOK* when
	expanding symbol-macros.

2004-08-10 18:19  gb

	* level-1/l1-clos.lisp: late version of %MAKE-METHOD-INSTANCE, from
	HEL

2004-08-06 01:40  gb

	* lib/pprint.lisp: distinguish finding NIL from not finding symbol
	in MAYBE-PRINT-FAST

2004-08-02 22:56  gb

	* examples/cocoa-editor.lisp: Remove subviews from hemlock-frame
	(window) before closing it.

2004-08-01 18:54  gb

	* examples/cocoa-editor.lisp: INIT-WITH-TEXT-STORAGE ->
	SET-TEXT-STORAGE (was initing twice.)

2004-07-31 17:52  gb

	* hemlock/src/: lispmode.lisp, lispbuf.lisp:
	package-name-change-hook

2004-07-31 17:50  gb

	* hemlock/src/buffer.lisp: handle modeline update in
	%SET-BUFFER-MODIFIED

2004-07-31 17:44  gb

	* examples/objc-runtime.lisp: remove a debugging call to FORMAT

2004-07-31 17:43  gb

	* hemlock/src/modeline.lisp: modeline buffer-update zeal

2004-07-31 17:40  gb

	* level-1/l1-lisp-threads.lisp: *fake-stack-frames* is
	thread-specific, just in case

2004-07-31 17:39  gb

	* level-0/PPC/ppc-def.lisp: %%FRAME-BACKLINK: this isn't 0S7

2004-07-31 17:38  gb

	* level-1/l1-io.lisp: move %NEW-PTR here

2004-07-31 17:37  gb

	* level-0/l0-io.lisp: %new-ptr can't exist in level-0

2004-07-31 17:36  gb

	* lib/nfcomp.lisp: make-load-form for foreign-variable istruct

2004-07-31 17:35  gb

	* level-1/l1-files.lisp: fix dangling close paren

2004-07-25 19:15  gb

	* examples/rubix/: blocks.lisp, opengl.lisp, rubix.lisp: newer code
	from Hamilton

2004-07-23 16:15  gb

	* examples/rubix/: blocks.lisp, lights.lisp, loader.lisp,
	opengl.lisp, rubix.lisp, vectors.lisp: new files

2004-06-27 02:55  gb

	* examples/objc-support.lisp: canonicalize classes referenced in
	type signatures

2004-06-27 02:55  gb

	* examples/bridge.lisp: class canonicalization, for resuming images

2004-06-27 02:55  gb

	* examples/: cocoa-window.lisp, tiny.lisp: defer window creation

2004-06-27 02:55  gb

	* examples/finger.lisp: new version from Barry Perryman

2004-06-27 02:55  gb

	* examples/objc-runtime.lisp: early NSThread

2004-06-23 22:24  gb

	* level-1/linux-files.lisp: Remove a (debugging) call to FORMAT.

2004-06-23 11:32  gb

	* level-1/linux-files.lisp: New external-process waiting stuff.

2004-06-23 11:32  gb

	* level-1/l1-processes.lisp: Initial restarts have descriptive
	:report clauses.

2004-06-23 11:30  gb

	* level-1/l1-files.lisp: Gary King's fix to FIND-LOAD-FILE.

2004-06-23 11:30  gb

	* level-1/l1-error-system.lisp: INVOKE-RESTART-INTERACTIVELY works
	with SIMPLE-RESTARTs again.

2004-06-23 11:29  gb

	* level-1/l1-clos.lisp: UPDATE-SLOTS fix.

2004-06-15 03:40  gb

	* OpenMCL.app/Contents/MacOS/dppccl: added

2004-06-06 03:12  gb

	* level-1/linux-files.lisp: Don't sleep/poll while monitoring
	external process; signal completion via semaphore.

2004-06-06 03:11  gb

	* level-0/l0-cfm-support.lisp: Ignore NAME in
	SHLIB-CONTAINING-ADDRESS for Linux.

2004-06-06 00:01  gb

	* lisp-kernel/spentry.s: Ensure TSP valid before asserting
	lisp-mode in ffi return.

2004-06-06 00:00  gb

	* lisp-kernel/thread_manager.c: New post-gc freeing mechanism
	(suspened thread may own malloc lock.) Similar mechanism for TCR
	cleanup.

2004-06-05 23:59  gb

	* lisp-kernel/: gc.c, gc.h, lisp-exceptions.c: New post-gc freeing
	mechanism (suspened thread may own malloc lock.)

2004-06-05 23:57  gb

	* level-1/linux-files.lisp: Do external processes differently.

2004-06-05 23:57  gb

	* level-1/l1-boot-3.lisp: No periodic task for external processes.

2004-06-05 23:56  gb

	* level-1/l1-readloop-lds.lisp: Don't pass (%CURRENT-TCR) to
	stack-walking functions in break loop commands.

2004-06-05 23:55  gb

	* lib/describe.lisp: :prompt-function takes an argument.

2004-05-23 17:37  gb

	* level-1/linux-files.lisp: In GET-DESCRIPTOR-FOR, leave room for a
	#\Newline when copying an arbitrary input stream to a temporary
	file.

2004-05-08 14:21  gb

	* examples/cocoa.lisp: Define UI-OBJECT-DO-OPERATION for *NSApp*.

2004-05-08 14:20  gb

	* examples/objc-runtime.lisp: Use #?.  Find cfstrings in __const
	section, too.

2004-05-08 14:19  gb

	* examples/cocoa-window.lisp: Use #?.  SET THE UI OBJECT (lost in
	0.14.2 merge.)

2004-05-08 14:18  gb

	* examples/cocoa-listener.lisp: Use #?.

2004-05-07 10:56  gb

	* examples/cocoa-editor.lisp: Fix duplicate
	HI::SAVE-HEMLOCK-DOCUMENT.  Don't parse buffer unless we're looking
	at a paren when trying to determine blink location.

2004-05-07 02:23  gb

	* examples/objc-clos.lisp: Handle new issues with :foreign-type
	(non-standard slot options collect values into a list.)

2004-05-07 02:22  gb

	* level-1/version.lisp: Date tag for development.

2004-05-06 00:28  gb

	* compiler/PPC/ppc2.lisp, darwin-headers/cocoa/C/populate.sh,
	examples/cocoa-window.lisp, examples/cocoa.lisp,
	examples/objc-runtime.lisp, level-0/l0-cfm-support.lisp,
	level-0/l0-misc.lisp, level-0/PPC/ppc-symbol.lisp,
	level-1/l1-aprims.lisp, level-1/l1-boot-2.lisp,
	level-1/l1-clos-boot.lisp, level-1/l1-clos.lisp,
	level-1/l1-lisp-threads.lisp, level-1/l1-sockets.lisp,
	level-1/l1-utils.lisp, level-1/linux-files.lisp,
	level-1/ppc-trap-support.lisp, level-1/version.lisp,
	lib/arglist.lisp, lib/ccl-export-syms.lisp, lib/compile-ccl.lisp,
	lib/db-io.lisp, lib/edit-callers.lisp, lib/encapsulate.lisp,
	lib/foreign-types.lisp, lib/macros.lisp, lib/nfcomp.lisp,
	lib/systems.lisp, library/parse-ffi.lisp,
	lisp-kernel/pmcl-kernel.c, lisp-kernel/darwin/.gdb_history,
	lisp-kernel/darwin/Makefile, xdump/faslenv.lisp: incorporate 0.14.2
	changes

2004-05-02 01:28  gb

	* examples/cocoa-editor.lisp: save-as, open-document for Hemlock. 
	Fix off-by-one in paren-blinking; lock view focus when disabling
	blink to fix display glitch.

2004-05-02 01:27  gb

	* hemlock/src/filecoms.lisp: Use Cocoa for more file operations.

2004-04-30 20:34  gb

	* lib/macros.lisp: SETF shows arglist in error message, if odd
	length.

2004-04-30 20:34  gb

	* level-1/version.lisp: Bump the version.

2004-04-30 20:34  gb

	* hemlock/src/struct.lisp: Font-mark/font-region stuff.

2004-04-30 20:33  gb

	* hemlock/src/streams.lisp: Add a STREAM-WRITE-STRING method for
	echo area.

2004-04-30 20:32  gb

	* hemlock/src/morecoms.lisp: Don't call HI::MAYBE-UPDATE-SELECTION
	anymore.

2004-04-30 20:32  gb

	* hemlock/src/listener.lisp: New history, font-region stuff.

2004-04-30 20:31  gb

	* hemlock/src/lispmode.lisp: Arglist stuff.

2004-04-30 20:30  gb

	* hemlock/src/interp.lisp: Clear echo area on entry to command.

2004-04-30 20:30  gb

	* hemlock/src/htext3.lisp: Check buffer modification.

2004-04-30 20:30  gb

	* hemlock/src/htext2.lisp: Remove old selection-updating code (was
	unused.)

2004-04-30 20:29  gb

	* hemlock/src/font.lisp: Partial integration with new font-region
	stuff.

2004-04-30 18:53  gb

	* hemlock/src/: filecoms.lisp, files.lisp: Partial integration with
	Cocoa document handling.

2004-04-30 18:53  gb

	* hemlock/src/edit-defs.lisp: Still not working, but closer.

2004-04-30 18:52  gb

	* hemlock/src/command.lisp: Get rid of some (very) old code. 
	CENTER-TEXT-PANE via Cocoa.

2004-04-30 18:51  gb

	* hemlock/src/cocoa-hemlock.lisp: FONT-REGION stuff.

2004-04-30 18:51  gb

	* hemlock/src/bindings.lisp: arglist-on-space,
	current-function-arglist.

2004-04-30 18:50  gb

	* examples/: cocoa-editor.lisp, cocoa-listener.lisp: Lots-o-changes
	...

2004-04-30 18:49  gb

	* examples/cocoa-window.lisp: Synthesize obliqueness/boldness.

2004-04-30 13:58  gb

	* examples/objc-runtime.lisp: %MAKE-CONSTANT-NSSTRING when
	restoring constant NSStrings.

2004-04-19 13:31  gb

	* examples/cocoa-editor.lisp: Lots of changes/fixes: selection,
	view-size, scrolling, paren-matching, etc.

2004-04-19 13:30  gb

	* hemlock/src/cocoa-hemlock.lisp: Event-queue-node constructor.

2004-04-19 00:49  gb

	* level-1/l1-error-system.lisp: Don't use %CURRENT-TCR, in
	%LAST-FN-ON-STACK.

2004-04-13 13:26  gb

	* library/lispequ.lisp: New fields in backtrace context.

2004-04-13 13:26  gb

	* library/hemlock.lisp: Simple loader, for now.

2004-04-13 13:25  gb

	* level-1/version.lisp: Bump.

2004-04-13 13:25  gb

	* level-1/l1-lisp-threads.lisp, level-1/l1-readloop-lds.lisp,
	level-1/ppc-threads-utils.lisp, lib/backtrace-lds.lisp,
	lib/backtrace.lisp, lib/describe.lisp: New stack-walking scheme:
	pass optional backtrace context, not TCR.

2004-04-13 13:24  gb

	* hemlock/src/struct.lisp: region now per-buffer.

2004-04-13 13:23  gb

	* hemlock/src/streams.lisp: Less hysteria writing to echo-area
	stream.

2004-04-13 13:23  gb

	* hemlock/src/: pop-up-stream.lisp, rompsite.lisp: Remove some
	CLXisms.

2004-04-13 13:22  gb

	* hemlock/src/listener.lisp: Better EVAL-REGION.

2004-04-13 13:22  gb

	* hemlock/src/killcoms.lisp: Reorganize; new per-buffer
	active-region scheme.

2004-04-13 13:21  gb

	* hemlock/src/key-event.lisp: Immutable key-event (not dll-node.)

2004-04-13 13:21  gb

	* hemlock/src/htext3.lisp: Always delete current-region before
	insertion.

2004-04-13 13:20  gb

	* hemlock/src/echo.lisp: Don't call DISPLAYED-P.

2004-04-13 13:18  gb

	* hemlock/src/cursor.lisp: Remove a few CLXisms.

2004-04-13 13:18  gb

	* hemlock/src/command.lisp: Mark setup for new scheme.

2004-04-13 13:17  gb

	* hemlock/src/cocoa-hemlock.lisp: Key events are interned, so don't
	make them mutable.

2004-04-13 13:16  gb

	* hemlock/src/bindings.lisp: #k"Enter" evaluates region, not
	"defun".

2004-04-13 13:16  gb

	* examples/cocoa-editor.lisp: Lots-o-changes: double-click, paste,
	etc.

2004-04-13 13:15  gb

	* examples/objc-runtime.lisp: (Partial) fixes to struct-returning
	method definitions.

2004-04-13 13:14  gb

	* examples/cocoa-backtrace.lisp: Remove some commented-out code.

2004-04-12 13:29  gb

	* level-1/l1-sockets.lisp: Erik Pearson's SOCKET-ERROR
	changes/fixes.

2004-04-07 22:32  gb

	* OpenMCL.app/Contents/Resources/English.lproj/MainMenu~.nib/:
	classes.nib, info.nib, objects.nib: remove backup files

2004-04-07 21:49  gb

	* examples/objc-runtime.lisp: Call #_GetCurrentEventQueue before
	some other thread calls it ...	Make "void" NSThread early, to tell
	AppKit we're multi-threaded.

2004-04-07 21:46  gb

	* examples/cocoa-listener.lisp: Defaults changes.

2004-04-07 21:45  gb

	* examples/cocoa-editor.lisp: Defaults changes.  Support clipview
	around echo-area (horizontal scrolling).

2004-04-07 21:43  gb

	* examples/cocoa-defaults.lisp: Changes to support constraints,
	prefs dialog.

2004-04-07 21:42  gb

	* examples/cocoa-prefs.lisp: New file.

2004-04-07 21:41  gb

	* examples/cocoa-window.lisp: Require "COCOA-PREFS".  Doc string on
	defaults; handle showPreferences: message.

2004-04-07 21:38  gb

	* hemlock/src/cocoa-hemlock.lisp: Handle control-g (abort-event) in
	GET-KEY-EVENT.

2004-04-07 21:35  gb

	* OpenMCL.app/Contents/Resources/English.lproj/MainMenu.nib/:
	classes.nib, info.nib, objects.nib: Add showPreferences: action,
	connect Preferences item to it.

2004-04-02 23:08  gb

	* lisp-kernel/pmcl-kernel.c: Use readlink() to determine executable
	pathname under Linux.  Use PATH_MAX on	both platforms.

2004-04-02 22:53  gb

	* lisp-kernel/pmcl-kernel.c: Determine executable pathname (needs
	to use /proc on Linux.)

2004-04-02 22:53  gb

	* lisp-kernel/lisp-exceptions.c: Hysteresis in stack-overflow
	recovery.  (Needs testing.)

2004-04-02 22:52  gb

	* library/lispequ.lisp: Add bt.break-condition.

2004-04-02 22:51  gb

	* lib/describe.lisp: Break condition comes from context now.

2004-04-02 22:50  gb

	* lib/backtrace-lds.lisp: %ACTIVE-AREA is deprecated.

2004-04-02 22:49  gb

	* level-1/l1-readloop-lds.lisp: Backtrace context now contains the
	break condition.

2004-04-02 22:47  gb

	* level-1/l1-lisp-threads.lisp: Fencepost in %PTR-IN-AREA-P. 
	Deprecate (and remove some calls to) %ACTIVE-AREA, since stacks
	have been contiguous for a couple of years now ...

2004-04-02 22:44  gb

	* level-1/l1-clos.lisp: Check for circularities when checking for
	forward-referenced superclasses.  Redefine %ADD-METHOD as
	ADD-METHOD when we're able to.	ENSURE-CLASS-USING-CLASS of a
	forward-referenced class passes initargs to CHANGE-CLASS.

2004-03-27 18:51  gb

	* examples/: cocoa-editor.lisp, cocoa-listener.lisp: Umm,
	background color components are of type :float.

2004-03-27 04:08  gb

	* OpenMCL.app/Contents/Resources/English.lproj/lispeditor~.nib/:
	classes.nib, info.nib, objects.nib: remove backup files from CVS

2004-03-27 04:05  gb

	*
	OpenMCL.app/Contents/Resources/English.lproj/MainMenu.nib/objects.n
	ib: Not sure what changed, but IB found inconsistencies and wanted
	the .nib to be saved.

2004-03-27 03:59  gb

	* OpenMCL.app/Contents/Resources/English.lproj/MainMenu.nib/:
	info.nib, objects.nib: Not sure what changed, but IB found
	inconsistencies and wanted the .nib to be saved.

2004-03-27 03:58  gb

	* examples/cocoa-backtrace.lisp: Integration.

2004-03-27 03:58  gb

	* examples/cocoa-editor.lisp: Color stuff, redisplay changes.  Use
	a sheet to display error messages from Hemlock command threads.

2004-03-27 03:57  gb

	* examples/cocoa-listener.lisp: Color stuff; maintain backtrace
	contexts in threads.  Menu action functions, validation for
	interrupt and backtrace.

2004-03-27 03:55  gb

	* examples/cocoa.lisp: Require COCOA-BACKTRACE.  Move
	UI-DO-OPERATION here, implement backtrace operations.

2004-03-27 03:54  gb

	* examples/objc-runtime.lisp: Don't install deallocate hook, for
	the time being.

2004-03-27 03:53  gb

	* hemlock/src/cocoa-hemlock.lisp: Update the selection before
	grabbing the next key-event.  Timed-wait on next event, for
	EDITOR-SLEEP.

2004-03-27 03:52  gb

	* hemlock/src/htext1.lisp: lock/unlock the buffer (actually the
	gap-cache) when editing.

2004-03-27 03:52  gb

	* hemlock/src/htext2.lisp: MAYBE-UPDATE-SELECTION: doesn't do
	anything anymore; should be removed.

2004-03-27 03:51  gb

	* hemlock/src/killcoms.lisp: Active region vars are now
	symbol-macros.

2004-03-27 03:50  gb

	* hemlock/src/listener.lisp: *POP-STRING* needed a newline.

2004-03-27 03:50  gb

	* hemlock/src/macros.lisp: Use new error handler.

2004-03-27 03:50  gb

	* hemlock/src/rompsite.lisp: Make EDITOR-SLEEP kind of work.

2004-03-27 03:49  gb

	* hemlock/src/struct.lisp: Keep active region stuff in gap-cache.

2004-03-27 03:48  gb

	* level-1/l1-clos.lisp: Fix error message typo when allocating GFs.

2004-03-27 03:47  gb

	* level-1/l1-dcode.lisp: Don't set &allow-other-keys in GF lambda
	lists if method only says &key.

2004-03-27 03:45  gb

	* level-1/l1-files.lisp: Quote more chars when converting from
	native namestrings.

2004-03-27 03:45  gb

	* level-1/version.lisp: 040326.

2004-03-27 03:44  gb

	* lib/macros.lisp: Unknown slot options in DEFCLASS: use CDR, not
	CADR for option value.

2004-03-27 03:43  gb

	* level-1/linux-files.lisp: NANOSCECONDS: always return two
	integers.

2004-03-25 18:13  gb

	* level-0/PPC/ppc-float.lisp: %SET-FPSCR-CONTROL: maintain stack
	discipline.  Write zeroes to status fields as well, to avoid
	enabling a signaled exception.

2004-03-25 13:10  gb

	* OpenMCL.app/Contents/Resources/English.lproj/MainMenu.nib/:
	classes.nib, info.nib, objects.nib: Lisp menu

2004-03-24 20:28  gb

	* level-1/version.lisp: 040324.

2004-03-24 18:08  gb

	* compiler/dll-node.lisp: PROVIDE's been in the CL package for the
	last decade or so.  (This (small) change was made from a
	Hemlock/Cocoa editor !)

2004-03-24 18:07  gb

	* examples/cocoa-listener.lisp: EVAL-SELECTION ui methods.

2004-03-24 18:06  gb

	* examples/cocoa-editor.lisp: Update the buffer-cache after
	processing deletion notification.  MAKE-HEMLOCK-BUFFER makes the
	gap-context, used to make all buffers except echo area. 
	NSSTRING-TO-BUFFER needs to set up gap context.

2004-03-24 18:04  gb

	* hemlock/src/bindings.lisp: #k"enter", #k"c-m-x" bound to "Editor
	Evaluate Defun".

2004-03-24 18:03  gb

	* hemlock/src/listener.lisp: Eval-region via selection queue
	mechanism.

2004-03-24 18:03  gb

	* level-1/l1-clos-boot.lisp: Fix typo in error message
	(rededefining non-GF as GF.)

2004-03-24 10:26  gb

	* examples/cocoa-editor.lisp: Clean this up: put things in the
	right package.

2004-03-24 01:51  gb

	* examples/cocoa-editor.lisp: Use new gap-cache stuff.	Keep track
	of editing in textstorage; don't move point when editing.

2004-03-24 01:49  gb

	* examples/cocoa-listener.lisp: Get FDs right when starting a
	listener process.  Note package correctly.

2004-03-24 01:48  gb

	* hemlock/src/command.lisp: Transpose Characters - do it even if at
	line end (may be bugs in %SET-NEXT-CHARACTER.)

2004-03-24 01:47  gb

	* hemlock/src/htext1.lisp: New shared gap scheme.

2004-03-24 01:46  gb

	* hemlock/src/htext2.lisp: Use circumflex in mark printer. 
	%SET-NEXT-CHARACTER changes (still bugs here.)

2004-03-24 01:44  gb

	* hemlock/src/: struct.lisp, decls.lisp: New (shared) gap-cache
	stuff.

2004-03-24 01:43  gb

	* level-1/l1-streams.lisp: SELECTION-INPUT-STREAM fixes.

2004-03-23 23:34  gb

	* level-0/nfasload.lisp: Skip the alignment bytes when reading a
	(SIMPLE-ARRAY DOUBLE-FLOAT (*)).

2004-03-23 23:33  gb

	* lib/nfcomp.lisp: Skip the alignment bytes when writing a
	(SIMPLE-ARRAY DOUBLE-FLOAT (*)), but don't act as if they were
	included in the value returned by SUBTAG-BYTES.

2004-03-22 10:41  gb

	* examples/cocoa-editor.lisp: Process Hemlock commands in a
	per-frame thread.

2004-03-22 10:40  gb

	* examples/cocoa-listener.lisp: New listener
	process/selection-stream stuff.

2004-03-22 10:39  gb

	* examples/cocoa-window.lisp: Initialize UI object here.

2004-03-22 10:38  gb

	* examples/cocoa.lisp: UI object will be *NSApp*.

2004-03-22 10:38  gb

	* hemlock/src/bindings.lisp: Rearrange a bit.

2004-03-22 10:38  gb

	* hemlock/src/cocoa-hemlock.lisp: Maintain event queue in per-frame
	thread.

2004-03-22 10:37  gb

	* hemlock/src/edit-defs.lisp: Start to make this saner.

2004-03-22 10:37  gb

	* hemlock/src/htext1.lisp: Cache buffer gap variables in buffer,
	when passing buffer between threads.

2004-03-22 10:36  gb

	* hemlock/src/interp.lisp: Run a %COMMAND-LOOP (in a separate
	thread) after all.

2004-03-22 10:35  gb

	* hemlock/src/modeline.lisp: Major mode listed before others,
	always.

2004-03-22 10:35  gb

	* hemlock/src/listener.lisp: Hook for package change.  Use
	selection stream.

2004-03-22 10:34  gb

	* hemlock/src/key-event.lisp: Maintain key-events in doubly-linked
	lists.

2004-03-22 10:34  gb

	* hemlock/src/struct.lisp: Extra slots in BUFFER, to cache gap
	variables.

2004-03-22 10:33  gb

	* hemlock/src/ring.lisp: Lock rings while operating on them.

2004-03-22 10:32  gb

	* level-1/l1-boot-lds.lisp: MAKE-MCL-LISTENER-PROCESS changes.

2004-03-22 10:32  gb

	* level-1/l1-application.lisp: New file; define application class,
	subclasses.

2004-03-22 10:31  gb

	* level-1/l1-lisp-threads.lisp: NEW-TCR converts pointer to fixnum,
	even if sign bit set.

2004-03-22 10:30  gb

	* level-1/l1-processes.lisp: MAKE-PROCESS takes :CLASS argument.

2004-03-22 10:30  gb

	* level-1/l1-reader.lisp: All control chars, #\Space are
	whitespace.

2004-03-22 10:30  gb

	* level-1/l1-readloop-lds.lisp: toplevel loop changes.

2004-03-22 10:29  gb

	* level-1/l1-readloop.lisp: Move application stuff to
	l1-application.

2004-03-22 10:28  gb

	* level-1/l1-streams.lisp: Selection-stream stuff, apparently still
	buggy.

2004-03-22 10:27  gb

	* level-1/level-1.lisp: Load l1-application.

2004-03-22 10:27  gb

	* level-1/version.lisp: 040322.

2004-03-22 10:27  gb

	* lib/: compile-ccl.lisp, systems.lisp: Add l1-application.

2004-03-22 10:26  gb

	* OpenMCL.app/Contents/Info.plist: Change document classes to
	Hemlock*.

2004-03-22 04:12  gb

	* hemlock/src/decls.lisp: restored

2004-03-22 04:12  gb

	* hemlock/src/decls.lisp: accidental removal

2004-03-20 16:38  gb

	* level-1/version.lisp: Bump version to 040320.

2004-03-20 00:38  gb

	* examples/cocoa-editor.lisp: Handle key events in echo area.

2004-03-20 00:37  gb

	* examples/compile-hemlock.lisp: Revive kbdmac.

2004-03-20 00:37  gb

	* hemlock/src/rompsite.lisp: Remove more clx/tty stuff.

2004-03-20 00:36  gb

	* hemlock/src/kbdmac.lisp: Revive,  but don't create stream yet.

2004-03-20 00:35  gb

	* hemlock/src/: cocoa-hemlock.lisp, command.lisp, interp.lisp: More
	command-interpreter changes.

2004-03-19 11:39  gb

	* lisp-kernel/thread_manager.c: set foreign thread tcr back to NULL
	in tsd on exit

2004-03-18 17:48  gb

	* hemlock/src/streams.lisp: Bind current-buffer.  No real
	difference in output-buffering stuff.

2004-03-18 17:47  gb

	* hemlock/src/: main.lisp, rompsite.lisp: Remove/comment-out some
	unused stuff.

2004-03-18 17:47  gb

	* hemlock/src/interp.lisp: Use MESSAGE for editor-errors.  Call
	command-interpreter-info-function (for extended input stuff.)

2004-03-18 17:46  gb

	* hemlock/src/echo.lisp: Bind current-buffer when clearing echo
	area.

2004-03-18 17:44  gb

	* hemlock/src/command.lisp: Quoted-insert sets up command-info
	function.

2004-03-18 17:43  gb

	* hemlock/src/cocoa-hemlock.lisp: Command-information struct moves
	here; add function slot.

2004-03-18 17:43  gb

	* examples/cocoa-editor.lisp: Add echo-area stuff, start to use it.

2004-03-17 17:19  gb

	* lisp-kernel/thread_manager.c: Foreign thread exit on first
	cleanup call.  (Should all threads do so, after all ?)

2004-03-17 17:19  gb

	* level-1/l1-lisp-threads.lisp: Return NIL (not 0/%null-ptr) if no
	underlying pthread.

2004-03-17 17:18  gb

	* examples/cocoa-listener.lisp: Window-close on listener thread
	exit: don't wait around (deadlocks during QUIT.)

2004-03-17 08:43  gb

	* lisp-kernel/lisp-exceptions.c: Suspend other threads on entry to
	debugger (not on entry to Bug.)

2004-03-17 08:29  gb

	* lisp-kernel/lisp-debug.c: Suspend other threads on entry to
	debugger (not on entry to Bug.)

2004-03-17 08:29  gb

	* library/lispequ.lisp: Backtrace-info changes.

2004-03-17 08:28  gb

	* lib/describe.lisp: tsp/vsp ranges, for bogus-object detection.

2004-03-17 08:26  gb

	* level-1/l1-readloop-lds.lisp: Backtrace/break-loop changes.

2004-03-17 08:26  gb

	* level-1/l1-lisp-threads.lisp: LLGPL.	Fix some dynamic-binding
	stuff; ad-hoc scheme for bogus-thing check in (some) other threads.

2004-03-17 08:24  gb

	* level-0/PPC/ppc-def.lisp: %CATCH-TOP is always in the same place.

2004-03-17 08:23  gb

	* examples/cocoa-listener.lisp: No more *OPEN-EDITOR-DOCUMENTS*.

2004-03-17 08:22  gb

	* examples/cocoa-backtrace.lisp: Getting closer ...

2004-03-17 08:19  gb

	* examples/cocoa-window.lisp: Create an NSThread early.

2004-03-17 08:18  gb

	* examples/objc-runtime.lisp:
	%make-nsstring/%make-constant-nsstring.

2004-03-17 08:17  gb

	* OpenMCL.app/Contents/Resources/English.lproj/backtrace.nib/:
	classes.nib, info.nib, objects.nib: Smaller, striped ...

2004-03-12 06:24  gb

	* OpenMCL.app/Contents/Resources/English.lproj/backtrace.nib/:
	classes.nib, info.nib, objects.nib: add backtrace nib

2004-03-12 06:23  gb

	* examples/cocoa-backtrace.lisp: use nib

2004-03-08 12:36  gb

	* lisp-kernel/lisp-exceptions.c: Fix fatal_mach_error() prototype.

2004-03-08 07:02  gb

	* lisp-kernel/lisp-exceptions.c: Fix MACH_CHECK_ERROR.

2004-03-08 07:01  gb

	* library/lispequ.lisp: bt.stack-group -> bt.tcr

2004-03-08 07:00  gb

	* lib/describe.lisp: Add stack-inspector stuff.

2004-03-08 06:59  gb

	* level-1/l1-clos.lisp: SLOTS-CLASS has to look for primary-p-ness.

2004-03-08 06:58  gb

	* level-1/l1-clos-boot.lisp: Set GF lfun-bits if continued after
	congruency error.  SLOTS-CLASS has to look for primary-p-ness.

2004-03-08 06:56  gb

	* examples/cocoa-window.lisp: Factor in window creation.

2004-03-08 06:56  gb

	* examples/cocoa-editor.lisp: Factor out window creation.

2004-03-08 06:55  gb

	* examples/cocoa-backtrace.lisp: New file.  Doesn't work ...

2004-03-07 12:53  gb

	* lisp-kernel/pmcl-kernel.c: Parameterize MAXIMUM_MAPPABLE_MEMORY.

2004-03-07 12:53  gb

	* lib/level-2.lisp: No EVAL-REDEF for %newgotag.

2004-03-07 12:52  gb

	* compiler/nx1.lisp: No DEFNX1 for %newgotag.

2004-03-07 01:03  gb

	* lisp-kernel/constants64.h: Note that use of go/block tags is
	deprecated.

2004-03-07 01:03  gb

	* compiler/: nx0.lisp, nx1.lisp: Don't use dynamic block/go tags. 
	Forget about event-polling, etc.

2004-03-07 01:02  gb

	* compiler/PPC/ppc2.lisp: Don't use dynamic block/go tags.

2004-03-07 01:01  gb

	* compiler/PPC/PPC64/ppc64-arch.lisp: Try to bring inline with
	constants64.[sh]

2004-03-07 00:55  gb

	* examples/cocoa-editor.lisp: Echo areas on windows.  Start the UI
	here when asked to.  Scroll windows.

2004-03-07 00:54  gb

	* examples/cocoa-defaults.lisp: Only synch if we added a new key.

2004-03-07 00:53  gb

	* examples/cocoa.lisp: APPLICATION-WILL-FINISH-LAUNCHING: start the
	UI.

2004-03-07 00:53  gb

	* hemlock/src/command.lisp: Window-scrolling changes.

2004-03-07 00:53  gb

	* hemlock/src/cursor.lisp: Let Cocoa scroll windows.

2004-03-07 00:52  gb

	* level-0/l0-misc.lisp: Per-thread stack-space calculated on a
	per-process basis.

2004-03-07 00:52  gb

	* level-1/l1-readloop-lds.lisp: BREAK-LOOP creates backtrace
	context, tells the application when it's valid.

2004-03-07 00:50  gb

	* level-1/l1-processes.lisp: *BACKTRACE-CONTEXTS* is bound
	per-thread.

2004-03-07 00:50  gb

	* level-1/ppc-threads-utils.lisp: Foreign thread initialization
	needs to emulate shallow per-thread binding.

2004-03-07 00:49  gb

	* level-1/version.lisp: 040307

2004-03-07 00:49  gb

	* lisp-kernel/thread_manager.c: Lock the area_lock while threads
	are suspended.	TCR cleanup frees tlb_pointer.

2004-03-07 00:48  gb

	* lisp-kernel/lisp-exceptions.c: darwin_exception_cleanup() frees
	native_thread_info (foreign exception state).

2004-03-07 00:37  gb

	* lisp-kernel/ppc_print.c: Careful with the use of ptr_from_lispobj
	in add_lisp_base_string.  Careful with the use of immheader_tag_p
	when printing vectors.

2004-03-06 03:10  gb

	* lisp-kernel/: Threads.h, area.h, constants64.h, gc.c, image.c,
	lisp-debug.c, lisp-exceptions.c, lisp-exceptions.h, lisptypes.h,
	macros.h, plbt.c, plsym.c, pmcl-kernel.c, ppc_print.c,
	thread_manager.c: Lots of PPC64 changes.  Move image_base to
	#x200000 on Darwin; reserve a little under 2GB by default.  Don't
	abort() if Mach exception-port stuff fails.

2004-03-06 03:04  gb

	* xdump/xfasload.lisp: Move image-base to #x200000 on Darwin.

2004-03-06 02:47  gb

	* examples/cocoa-defaults.lisp, examples/cocoa-editor.lisp,
	examples/cocoa-listener.lisp, hemlock/src/font.lisp,
	hemlock/src/listener.lisp, hemlock/src/rompsite.lisp: Random
	changes; still barely functional.

2004-03-03 16:27  gb

	* level-1/l1-clos.lisp: Define and use
	COMPUTE-CLASS-PRECEDENCE-LIST.	Flush initargs caches whenever
	class is finalized.

2004-03-03 15:20  gb

	* examples/objc-runtime.lisp: Uninstall dealloc-hook on
	*SAVE-EXIT-FUNCTIONS* (run before SAVE-APPLICATION), not
	*LISP-CLEANUP-FUNCTIONS* (so slot-vectors stay around during
	shutdown.)

2004-03-03 15:18  gb

	* examples/objc-clos.lisp: CRLF -> LF.

2004-03-03 15:01  gb

	* examples/cocoa-window.lisp: Require (and use) "COCOA-DEFAULTS".

2004-03-03 15:00  gb

	* examples/cocoa-listener.lisp: Wait until initial thread does
	CLOSE during listener thread cleanup.

2004-03-03 15:00  gb

	* examples/cocoa-editor.lisp: CLOSE message: close document before
	invoking SUPER method, not after.  Insertion/deletion fixes.

2004-03-03 14:56  gb

	* examples/cocoa-defaults.lisp: New file: maintain "defaults" via
	NSUserDefaults.

2004-03-03 14:53  gb

	* compiler/optimizers.lisp: fix %MAKE-DISPLACED-ARRAY call

2004-03-02 19:39  gb

	* lisp-kernel/spentry.s: Fix in destructuring-bind code.

2004-03-01 17:52  gb

	* hemlock/src/: main.lisp, modeline.lisp: Fix typos, start to
	introduce package-changed hooks.

2004-03-01 11:04  gb

	* lisp-kernel/thread_manager.c: Declare the right function in
	new_tcr().

2004-03-01 10:08  gb

	* lisp-kernel/: area.h, gc.c, image.c, imports.s, lisp_globals.h,
	pmcl-kernel.c, thread_manager.c: Use AREA_LOCK when accessing
	all_areas, unless we're early in bootstrapping.  Change the API,
	such as it is.	Need to ensure that readers/GC obey locking, as
	well.

2004-03-01 10:06  gb

	* level-1/l1-readloop.lisp: APPLICATION-UI-OBJECT stuff.

2004-03-01 10:06  gb

	* level-1/l1-readloop-lds.lisp: Notify "application-ui" on package
	change.

2004-03-01 10:05  gb

	* level-1/l1-lisp-threads.lisp: Don't terminate LISP-THREADs.

2004-03-01 10:05  gb

	* level-1/l1-clos-boot.lisp: DEFAULT-INITARGS: function follows
	form ...

2004-03-01 10:04  gb

	* level-1/l1-boot-lds.lisp: Use application-ui stuff to note
	initial package.

2004-03-01 10:03  gb

	* lib/macros.lisp: Invert order of initform/initfunction (FORM
	follows FUNCTION ? Nah ..) in canonicalized
	direct-default-initargs.

2004-03-01 10:02  gb

	* level-0/l0-int.lisp: Fix SIZE-VECT in bignum printer.

2004-03-01 10:01  gb

	* examples/cocoa-editor.lisp, examples/cocoa-listener.lisp,
	examples/cocoa-window.lisp, examples/cocoa.lisp,
	examples/compile-hemlock.lisp, hemlock/src/buffer.lisp,
	hemlock/src/listener.lisp, hemlock/src/modeline.lisp,
	hemlock/src/struct.lisp: More changes.	Every day, more changes. 
	(Listeners kind of work now.)

2004-02-29 07:56  gb

	* hemlock/src/bindings.lisp: Some listener-mode bindings.

2004-02-28 18:40  gb

	* hemlock/src/listener.lisp: Derived from lispbuf.lisp; barely
	differs yet.  Start to bring this code into the 90s.

2004-02-28 18:39  gb

	* hemlock/src/bindings.lisp: Some commented-out Listener-mode
	stuff.

2004-02-28 18:38  gb

	* hemlock/src/modeline.lisp: CR-terminated files have
	:EXTERNAL-FORMAT :MACOS, not :MAC.

2004-02-28 18:36  gb

	* examples/: cocoa-editor.lisp, cocoa-listener.lisp: Various
	changes.  Listeners still aren't functional.

2004-02-28 18:36  gb

	* examples/compile-hemlock.lisp: "listener" replaces "lispbuf".

2004-02-28 18:35  gb

	* compiler/optimizers.lisp: Bryan O'Connor's fix to
	COMP-MAKE-DISPLACED-ARRAY (make displacement explicit.)

2004-02-28 16:59  gb

	* level-1/l1-typesys.lisp: Fix typo, add more cases in
	CACHEABLE-CTYPE-P.

2004-02-28 02:24  gb

	* examples/hemlock-textstorage.lisp: Merge into cocoa-editor.lisp,
	remove this file.

2004-02-28 02:23  gb

	* hemlock/src/: bindings.lisp, cocoa-hemlock.lisp, filecoms.lisp,
	htext1.lisp, htext3.lisp, modeline.lisp, streams.lisp, struct.lisp:
	More changes for Cocoa Hemlock.

2004-02-28 02:22  gb

	* level-1/l1-typesys.lisp: Don't cache things involving certain
	MEMBER-CTYPEs.

2004-02-28 02:21  gb

	* level-1/: l1-streams.lisp, l1-sysio.lisp: stream ELEMENT-SHIFT
	fixes (from Bryan O'Connor.)

2004-02-28 02:20  gb

	* level-1/l1-error-system.lisp: INVOKE-RESTART recognizes simple
	restarts (from Bryan O'Connor.)

2004-02-28 02:19  gb

	* level-1/: l1-aprims.lisp, l1-utils.lisp: MAKE-ARRAY (and
	variants) track explicit array displacement (from Bryan O'Connor).

2004-02-28 02:16  gb

	* level-0/l0-array.lisp: ARRAY-DISPLACEMENT checks for explicit
	displacement (from Bryan O'Connor.)

2004-02-28 02:14  gb

	* level-0/l0-complex.lisp: Require NUMBER-MACROS at compile-time.

2004-02-28 02:14  gb

	* level-1/version.lisp: 0.14.2-040228.

2004-02-28 02:13  gb

	* lib/arrays-fry.lisp: ADJUST-ARRAY fixes (from Bryan O'Connor).

2004-02-28 02:12  gb

	* lib/macros.lisp: WITH-SIMPLE-RESTART change (from Bryan
	O'Connor).

2004-02-28 02:11  gb

	* library/lispequ.lisp: Define $arh_exp_disp_bit (from Bryan
	O'Connor).

2004-02-27 19:24  gb

	* OpenMCL.app/Contents/Info.plist: Try to persuade system to use
	openmcl icon for lisp documents.

2004-02-27 09:32  beer

	* examples/objc-clos.lisp: ObjC generic functions and methods for
	predefined ObjC messages mostly seem to work; support for
	conversion between ObjC records and Lisp structs (mostly from Gary)

2004-02-27 09:27  beer

	* examples/bridge.lisp: *TYPE-SIGNATURE-TABLE* now contains message
	descriptors; some new automatic type coercions for message
	arguments

2004-02-27 09:25  beer

	* examples/objc-runtime.lisp: UPDATE-TYPE-SIGNATURES-FOR-METHOD now
	takes a class as a second argument

2004-02-27 09:23  beer

	* examples/name-translation.lisp: Yet a few more new ObjC special
	words

2004-02-26 12:59  gb

	* lisp-kernel/thread_manager.c: (Hopefully) return NULL if
	semaphore_create() fails.

2004-02-26 12:58  gb

	* level-0/l0-aprims.lisp: Check return value from semaphore
	creation.

2004-02-26 12:57  gb

	* examples/cocoa-editor.lisp, examples/cocoa-listener.lisp,
	examples/cocoa-window.lisp, examples/hemlock-textstorage.lisp,
	hemlock/src/bindings.lisp, hemlock/src/buffer.lisp,
	hemlock/src/cocoa-hemlock.lisp, hemlock/src/filecoms.lisp,
	hemlock/src/htext1.lisp, hemlock/src/htext2.lisp,
	hemlock/src/htext3.lisp, hemlock/src/modeline.lisp,
	hemlock/src/struct.lisp, level-1/l1-readloop.lisp: QUIT typechecks
	arg before it's too late to do so.

2004-02-24 13:31  gb

	* examples/: cocoa-editor.lisp, cocoa-listener.lisp,
	cocoa-window.lisp, hemlock-textstorage.lisp: Start to use Hemlock
	for documents.

2004-02-24 13:30  gb

	* examples/objc-runtime.lisp: Use some other obscure way of
	initializing class before looking for methods (Panther).

2004-02-23 18:41  gb

	* examples/hemlock-textstorage.lisp, hemlock/src/bindings.lisp,
	hemlock/src/cocoa-hemlock.lisp, hemlock/src/command.lisp,
	hemlock/src/interp.lisp, hemlock/src/modeline.lisp,
	hemlock/src/struct.lisp: more changes.

2004-02-23 18:40  gb

	* examples/objc-runtime.lisp: method lookup: ensure class is
	initialized, via fairly obscure means.

2004-02-23 18:40  gb

	* examples/compile-hemlock.lisp: Add COCOA-HEMLOCK.

2004-02-23 18:39  gb

	* examples/cocoa-editor.lisp: require HEMLOCK-TEXTSTORAGE.  (Blows
	up during load ...).

2004-02-23 10:20  gb

	* examples/hemlock-textstorage.lisp, hemlock/src/bindings.lisp,
	hemlock/src/htext1.lisp, hemlock/src/htext2.lisp,
	hemlock/src/htext3.lisp, hemlock/src/htext4.lisp,
	hemlock/src/interp.lisp, hemlock/src/keysym-defs.lisp,
	hemlock/src/morecoms.lisp: Lots-o-changes.

2004-02-23 10:18  gb

	* examples/compile-hemlock.lisp: Reorganize; use FASL-CONCATENATE.

2004-02-23 10:18  gb

	* compiler/PPC/ppc2.lisp: Bugs in PPC2-%SET-BIT.

2004-02-21 18:41  gb

	* hemlock/src/keysym-defs.lisp: Learn to spell.  Learn what package
	we're in.

2004-02-21 18:40  gb

	* hemlock/src/keysym-defs.lisp: Learn to spell.

2004-02-21 18:27  gb

	* lisp-kernel/: area.h, bits.c, bits.h, constants.h, constants32.h,
	constants64.h, constants64.s, gc.c, gc.h, lisp-exceptions.h,
	lisp.h, lisp_globals.h, lisptypes.h, macros.h, macros.s, plsym.c,
	pmcl-kernel.c, spentry.s, darwin/.gdb_history, darwin/Makefile,
	pantherg5/Makefile: PPC64 changes (some of them rather suspect
	...).  32-bit kernel may be a little funky ...

2004-02-21 18:21  gb

	* examples/hemlock-textstorage.lisp: Lots of changes.  Still needs
	event-translation work (and lots of other things.)

2004-02-21 18:20  gb

	* examples/compile-hemlock.lisp: Fewer files.  More warnings ...

2004-02-21 18:19  gb

	* hemlock/src/: htext2.lisp, htext1.lisp: Maybe update the
	selection if the mark we move is the buffer's point.

2004-02-21 18:16  gb

	* hemlock/src/interp.lisp: Process single events.

2004-02-21 18:16  gb

	* hemlock/src/keysym-defs.lisp: Cocoa, not an RT.  (Still needs
	some work.)

2004-02-21 18:15  gb

	* hemlock/src/struct.lisp: Buffers maybe have text-storage, but no
	windows list.

2004-02-21 18:15  gb

	* hemlock/src/modeline.lisp: Move some modeline stuff here from
	window.lisp.

2004-02-21 18:14  gb

	* examples/objc-clos.lisp: Handle INITFUNCTION/INITARG case in
	SHARED-INITIALIZE.

2004-02-18 11:51  beer

	* examples/objc-clos.lisp: More (and different!) support for ObjC
	generic functions and methods

2004-02-16 03:41  gb

	* level-0/l0-float.lisp: ACOS of DOUBLE-FLOAT wants to
	(%MAKE-DFLOAT) the result.  Again.  Still.

2004-02-15 09:25  gb

	* lisp-kernel/thread_manager.c: Foreign threads linger, too.

2004-02-15 09:23  gb

	* examples/objc-support.lisp: Remove DBG trap in NS-EXCEPTION
	method.

2004-02-15 09:23  gb

	* examples/objc-runtime.lisp: Metaclass of user-defined class
	derived from class-name symbol, not foreign string.

2004-02-15 09:22  gb

	* examples/objc-clos.lisp: ALLOCATE-INSTANCE et al: install the
	instance's slot-vector if it has one.  Error out (don't just return
	nil) if instance slot-vector is missing.  Randall's fix to
	WRITER-METHOD-CLASS.

2004-02-15 09:20  gb

	* examples/process-objc-modules.lisp: Fix PROVIDE call.

2004-02-15 09:19  gb

	* examples/cocoa-window.lisp: Change PROCESS-INTERRUPT mechanism,
	since postEvent:atStart: doesn't seem to always do so from
	subthreads.

2004-02-15 09:17  gb

	* lib/number-case-macro.lisp: SINGLE-FLOAT, in *TYPE-TO-TYPECODE*.

2004-02-15 09:16  gb

	* lib/macros.lisp: WITH-OUTPUT-TO-STRING: don't quote element-type.

2004-02-15 09:14  gb

	* lib/backtrace-lds.lisp: OPCODE is in the ARCH package.

2004-02-15 09:10  gb

	* lib/dumplisp.lisp: No more quit-acknowledgement.

2004-02-15 09:10  gb

	* level-1/version.lisp: Date suffix for bleeding-edge version.

2004-02-15 09:10  gb

	* level-1/l1-readloop.lisp: No more "quit acknowledgement".

2004-02-15 09:08  gb

	* level-0/l0-float.lisp: pick up acos/asin fixes

2004-02-13 11:18  beer

	* examples/objc-clos.lisp: Some initial steps toward integrating
	ObjC methods into CLOS generic functions

2004-02-13 11:17  beer

	* examples/name-translation.lisp: Added a few more special ObjC
	words I've come across Removed old generic function name-mangling
	code, since we're no going that route

2004-02-12 00:22  gb

	* level-0/l0-float.lisp: ACOS: double-float case uses %MAKE-DFLOAT
	to allocate result.

2004-02-11 20:19  gb

	* lisp-kernel/pantherg5/Makefile: Start to conditionalize for
	PPC64, almost.

2004-02-11 20:17  gb

	* lisp-kernel/spentry.s: Fix a lot of the cases broken by removal
	of extract_2_lisptags_.

2004-02-11 20:16  gb

	* lisp-kernel/macros.s: More portability stuff; still a ways to go.

2004-02-11 20:15  gb

	* lisp-kernel/constants64.s: Flesh out a bit.

2004-02-11 20:15  gb

	* lisp-kernel/constants32.s: Don't suppress PPC64 defs of eabi
	stack frames.

2004-02-11 18:23  gb

	* lisp-kernel/constants.s: Hoist register names, etc into main
	file.

2004-02-11 12:01  gb

	* lisp-kernel/pantherg5/Makefile: Copy of regular Darwin Makefile,
	for starters.

2004-02-11 12:00  gb

	* lisp-kernel/darwin/Makefile: Beg the assembler to be
	AltiVec-aware.	Probably a better way.

2004-02-11 12:00  gb

	* lisp-kernel/spentry.s: Partly convert to 64-bit-maybeness.

2004-02-11 11:59  gb

	* lisp-kernel/macros.s: Parameterize more for ppc32/ppc64.

2004-02-11 11:59  gb

	* lisp-kernel/constants32.s: 32-bit platform constants.

2004-02-11 11:58  gb

	* lisp-kernel/constants.s: Include platform-specific constants
	file.

2004-02-11 11:58  gb

	* lisp-kernel/asmutils.s: Assume that the assembler is AltiVec
	aware in vector save/restore.  (Do we need vector save/restore ?)

2004-02-11 01:54  gb

	* lib/: compile-ccl.lisp, systems.lisp: add asdf, defsystem

2004-02-10 12:06  gb

	* compiler/nx-basic.lisp: VARIABLE-INFORMATION returns :SPECIAL if
	visible binding is proclaimed (but not declared) SPECIAL.

2004-02-10 11:39  gb

	* level-1/version.lisp: 0.14.1

2004-02-10 10:58  gb

	* lisp-kernel/sampler.c: was never used

2004-02-09 09:26  gb

	* level-1/l1-processes.lisp: ABORT-BREAK restart around process's
	initial function.

2004-02-09 09:22  gb

	* level-1/linux-files.lisp: Aargh.

2004-02-09 09:22  gb

	* level-1/l1-readloop.lisp: WITH-STANDARD-ABORT-HANDLING around the
	idle loop.

2004-02-09 01:34  gb

	* lisp-kernel/pmcl-kernel.c: egc back on

2004-02-09 01:33  gb

	* level-1/l1-files.lisp: fix error message on REQUIRE failure

2004-02-08 19:11  gb

	* level-0/PPC/ppc-float.lisp: %%SCALE-DFLOAT reserved 16 bytes on
	tsp, but used 24.

2004-02-07 23:08  gb

	* level-1/l1-pathnames.lisp: Add "ccl:tools;" to
	*MODULE-SEARCH-PATH*.

2004-02-07 23:08  gb

	* level-1/version.lisp: 040208, Alpha->Beta.

2004-02-07 22:58  gb

	* tools/README-OpenMCL.txt: New file.

2004-02-07 22:01  gb

	* tools/defsystem.lisp: imported from SourceForge clocc project
	HEAD as of 040207

2004-02-07 22:01  gb

	* tools/asdf.lisp: imported from SourceForge cclan project HEAD as
	of 040207

2004-02-07 21:57  gb

	* tools/asdf-install/: doc/index.html, Makefile, README,
	defpackage.lisp, digitool.lisp, installer.lisp, loader.lisp,
	port.lisp, .cvsignore, asdf-install.asd: imported from SourceForge
	cclan project HEAD as of 040207

2004-02-07 18:06  gb

	* level-1/l1-pathnames.lisp: Don't include "ccl:" or "home:" on
	*module-search-path*.  Do include "ccl:openmcl;modules;".

2004-02-07 18:01  gb

	* level-1/l1-init.lisp: *MODULE-FILE-ALIST* is gone.  Honest.

2004-02-07 18:00  gb

	* level-1/l1-files.lisp: Add a doc string for
	*MODULE-PROVIDER-FUNCTIONS*; reference it in the error message if
	REQUIRE fails.

2004-02-07 17:11  gb

	* level-1/l1-files.lisp: Incorporate Bryan O'Connor's changes to
	REQUIRE (with some changes.)

2004-02-07 17:10  gb

	* lib/ccl-export-syms.lisp: Remove *MODULE-FILE-ALIST*.  Add
	*MODULE-PROVIDER-FUNCTIONS*.

2004-02-07 17:09  gb

	* lib/dumplisp.lisp: Don't reference *MODULE-FILE-ALIST* anymore.

2004-02-07 15:20  gb

	* lib/macros.lisp: Define CCL::CONDITIONAL-STORE, for use by CLX
	(and maybe other things, if it learns how to decode more "places".)

2004-02-07 15:19  gb

	* level-0/l0-misc.lisp: Add STORE-GVECTOR-CONDITIONAL, to hide some
	represenatation details.

2004-02-07 14:59  gb

	* lib/level-2.lisp: %GET-DOUBLE-FLOAT and %GET-SINGLE-FLOAT: offset
	defaults to 0.

2004-02-07 14:58  gb

	* level-1/version.lisp: bump.

2004-02-07 14:58  gb

	* level-1/l1-utils.lisp: %GET-DOUBLE-FLOAT/%SET-DOUBLE-FLOAT were
	shadowed by later versions.

2004-02-07 14:57  gb

	* level-1/l1-readloop.lisp: Initial listener doesn't claim to be
	*INTERACTIVE-ABORT-PROCESS*.

2004-02-07 14:56  gb

	* level-1/l1-files.lisp: Don't call CHOOSE-FILE-DIALOG when looking
	for a module.

2004-02-07 14:55  gb

	* level-1/l1-events.lisp: New scheme to select process for SIGINT.

2004-02-07 14:54  gb

	* examples/objc-runtime.lisp: Revive objc-classes/methods when
	restarting an image.  Check appkit/foundation versions, print a
	message & exit if mismatch.  Find cfstring-containing library
	sections after loading appkit/foundation, and again on image
	startup.

2004-02-07 14:50  gb

	* examples/cocoa-window.lisp: Change comments.

2004-02-06 12:43  gb

	* examples/objc-runtime.lisp: REVIVIE-OBJC-CLASSES (mostly working,
	but needs to happen at the right time and needs to handle version
	mismatches.)

2004-02-06 12:42  gb

	* examples/objc-support.lisp: Don't call REMAP-OBJC-CLASSES on
	saved-application startup.

2004-02-06 12:41  gb

	* examples/process-objc-modules.lisp: No more
	REMAP-ALL-LIBRARY-CLASSES.

2004-02-06 12:40  gb

	* level-1/l1-boot-2.lisp: Replace *TERMINAL-INPUT-LOCK* with the
	new shared-resource scheme.

2004-02-06 12:39  gb

	* level-1/l1-boot-lds.lisp: MAKE-MCL-LISTENER-PROCESS: spawned
	process becomes "primary owner" of input stream, if it has an
	attached SHARED-RESOURCE.

2004-02-06 12:38  gb

	* level-1/l1-processes.lisp: Probably better to have PROCESS-WAIT
	sleep explicitly, so that it doesn't spend all of its time
	yielding.

2004-02-06 12:36  gb

	* level-1/l1-readloop-lds.lisp: Tweaks to the :Y command, to handle
	new shared-resource scheme.  Marco Baringer's :SET breakloop
	command, from almost a year ago.

2004-02-06 12:35  gb

	* level-1/l1-readloop.lisp: TOPLEVEL-FUNCTION manages the "shared
	resource" attached to the shared terminal-input stream.

2004-02-06 12:33  gb

	* level-1/l1-streams.lisp: INPUT-STREAMs may have a SHARED-RESOURCE
	attached to them; use it to manage terminal-input requests.

2004-02-06 12:32  gb

	* level-1/l1-typesys.lisp: Slot type predicates use CTYPEP, to
	(kind of) deal with (FUNCTION ...) types.

2004-02-06 12:30  gb

	* level-1/level-1.lisp: Load DLL-NODE a little earlier.

2004-02-06 12:30  gb

	* level-1/linux-files.lisp: SHARED-RESOURCEs, mostly for
	arbitrating access to CCL::*TERMINAL-INPUT*.  (May not work well,
	but neither did the old scheme.)

2004-02-06 12:28  gb

	* level-1/version.lisp: 040206.

2004-02-06 12:27  gb

	* lib/dumplisp.lisp: Do handshaking with initial thread before
	shutting down for SAVE-APPLICATION.

2004-02-06 12:27  gb

	* lib/macros.lisp: WITH-TERMINAL-INPUT changed slightly.

2004-02-06 12:26  gb

	* lisp-kernel/thread_manager.c: Keep the tcr around as long as
	possible (count down from PTHREAD_DESTRUCTOR_ITERATIONS).  Handle
	the case when a pthread can no longer reveive signals but the
	underlying Mach thread still exists, in suspend_tcr/resume_tcr.

2004-02-06 12:24  gb

	* lisp-kernel/lisp-exceptions.c: Provide mach_suspend_tcr(),
	mach_resume_tcr() so that threads can be suspended between
	pthread_exit() and their actual termination.

2004-02-06 11:57  gb

	* lisp-kernel/: constants.h, constants.s: Add shutdown_count field
	to tcr.

2004-02-02 09:22  gb

	* examples/objc-runtime.lisp: New
	OBJC-[CLASS,METACLASS,INSTANCE]-p, OBJC-OBJECT-P uses them.
	
	Install a callback to take over _dealloc responsibilities.  Doing
	so seems to sometimes trigger a hang on QUIT, where the initial
	thread never gets an interrupt.  Maybe memory corruption, maybe
	something else: need to check that (free) is the right way to free
	the object.

2004-02-02 09:15  gb

	* level-1/l1-error-system.lisp: Bryan O'Connor's change to
	INVOKE-RESTART: throw NIL if simple-restart/null fn.

2004-02-02 09:14  gb

	* level-1/l1-io.lisp: FUNCTION-IS-CURRENT-DEFINITION? knows about
	these new-fangled SETF function names.

2004-02-02 09:12  gb

	* level-1/l1-lisp-threads.lisp: Disable interrupts when accessing
	the termination queue; may need to inhibit GC as well.

2004-02-02 09:11  gb

	* level-1/l1-processes.lisp: REQUIRE-GLOBAL-SYMBOL checks the
	environment, too.

2004-02-02 09:11  gb

	* level-1/l1-readloop.lisp: Handshaking during
	QUIT/PREPARE-TO-QUIT; this is intended to work around a bug where
	#_pthread_kill seems to not deliver the signal to the target thread
	if the signaling thread (a) exits and (b) runs certain Cocoa
	tsd-cleanup routines.  (I.e., it's a mystery.)

2004-02-02 09:08  gb

	* level-1/l1-streams.lisp: Bryan O'Connor's change to FILE-LENGTH. 
	Default methods on some things that are supposed to TYPE-ERROR, not
	get a NO-APPLICABLE-METHOD.

2004-02-02 09:07  gb

	* level-1/version.lisp: 040202.

2004-02-02 09:06  gb

	* lib/ccl-export-syms.lisp: export %STR-FROM-PTR.  Don't export
	%STR-FROM-PTR-IN-SCRIPT, which doesn't exist.

2004-02-02 09:06  gb

	* lib/macros.lisp: Bryan O'Connor's fix to WITH-SIMPLE-RESTART. 
	LET-GLOBALLY moved here.

2004-02-02 09:01  gb

	* lisp-kernel/lisp-exceptions.c: Remove old vector-copying stuff.

2004-02-01 12:41  beer

	* examples/objc-clos.lisp: PRINT-OBJECT shouldn't die when given an
	OBJC-OBJECT whose ObjC part has "gone away"

2004-02-01 12:38  beer

	* examples/tiny.lisp: Use DEFCLASS and MAKE-INSTANCE

2004-02-01 12:37  beer

	* examples/bridge.lisp: Move toward the use of FIND-CLASS and
	CLASS-OF

2004-02-01 11:09  gb

	* lisp-kernel/: constants.h, thread_manager.c: Experimental change,
	to defer tcr cleanup.

2004-02-01 09:50  beer

	* examples/objc-clos.lisp: REMOVE-SLOT-INITARGS was dropping the
	last KEY/VALUE pair

2004-02-01 08:42  gb

	* examples/bridge.lisp: Ivar parsing follows different ruls for
	STRUCT than for *STRUCT; #\B is for :<BOOL>.  Now seems able to
	parse all Foundation/AppKit classes in 10.3.2.

2004-02-01 06:18  gb

	* examples/objc-support.lisp: NS-LISP-EXCEPTION has a lisp slot. 
	Now, to figure out a way to get rid of that ...

2004-02-01 06:17  gb

	* examples/: objc-clos.lisp, objc-runtime.lisp: More than one class
	can share the same metaclass.

2004-01-31 20:05  gb

	* lib/number-case-macro.lisp: Remove stale comment.

2004-01-31 20:04  gb

	* lib/foreign-types.lisp: Fix missing close-paren.

2004-01-31 19:55  gb

	* lib/foreign-types.lisp: Unparse :VOID, use keywords more
	consistently when unparsing.

2004-01-31 19:54  gb

	* library/lispequ.lisp: Fix DEF-ACCESSORS for VALUES-CTYPE.

2004-01-31 19:53  gb

	* lib/macros.lisp: PARSE-DEFGENERIC fix from Bryan O'Connor.

2004-01-30 21:34  gb

	* examples/bridge.lisp: PARSE-FOREIGN-STRUCT-OR-UNION-SPEC allows
	for anonymous fields.

2004-01-30 16:58  gb

	* lisp-kernel/pmcl-kernel.c: Don't enable EGC by default (so I can
	work on tuning it some ...)

2004-01-30 16:57  gb

	* level-1/l1-sysio.lisp: Handle BROADCAST-STREAMs, error out on
	other non-FILE-STREAMs.

2004-01-30 16:56  gb

	* level-1/l1-streams.lisp: Lots of nit-picking; BROADCAST-STREAM
	methods (at least partly) fixed to return value from last stream in
	list.

2004-01-30 16:54  gb

	* level-1/l1-sockets.lisp: Fix CLOSE call to LOCAL-SOCKET-FILENAME.

2004-01-30 16:53  gb

	* level-1/l1-reader.lisp: WHITESPACEP looks in readtable.

2004-01-30 16:52  gb

	* level-1/l1-io.lisp: FRESH-LINE uses STREAM-FRESH-LINE.

2004-01-30 16:51  gb

	* level-1/l1-files.lisp: IF-EXISTS: dialog nonsense.  PROBE-FILE
	checks WILD-PATHNAME-P, which moved here.

2004-01-30 16:49  gb

	* lib/pathnames.lisp: WILD-PATHNAME-P now earlier.

2004-01-30 16:48  gb

	* xdump/faslenv.lisp, lib/nfcomp.lisp: Bump fasl version.

2004-01-30 13:09  gb

	* examples/objc-clos.lisp: Lots of changes: foreign slot
	definitions have a :FOREIGN-TYPE; initarg is used to recognize
	them.  Foreign direct slot offset is (slightly encoded, for
	bitfields) relative slot offset, can be set by parsing ivars of
	predefined classes or from :FOREIGN-TYPE when setting
	(CLASS-DIRECT-SLOTS).  Effective-slot location set from class's own
	direct slot or from superclass direct slot.  The foreign "init.."
	method is called as part of ALLOCATE-INSTANCE, not (again) in
	SHARED-INITIALIZE.  ENSURE-CLASS-USING-CLASS tries to do what we
	mean, not what we say.	Hook into the guts of NSObjectDeallocate to
	note when an instance is deallocated (and remove its lisp
	slots-vector); still needs work.  Note that saving images with
	foreign classes in them still doesn't work.

2004-01-30 12:57  gb

	* examples/objc-runtime.lisp: Lots of changes: get rid of old
	DEF-OBJC-CLASS support, initialize predefined classes using CLOS
	(mostly).

2004-01-30 12:55  gb

	* examples/objc-support.lisp: Install predefined classes here.	Use
	DEFCLASS to create NS-LISP-EXCEPTION.

2004-01-30 12:51  gb

	* examples/process-objc-modules.lisp: MAP-OBJC-CLASS ->
	INSTALL-FOREIGN-OBJC-CLASS.

2004-01-30 12:49  gb

	* examples/: cocoa-editor.lisp, cocoa-inspector.lisp,
	cocoa-listener.lisp, cocoa-window.lisp, cocoa.lisp,
	hemlock-textstorage.lisp: Used DEFCLASS to creat classes,
	SLOT-VALUE or an accessor to access slots.

2004-01-30 12:48  gb

	* examples/bridge.lisp: Parse instance-var type strings differently
	from arg type strings.

2004-01-30 12:46  gb

	* compiler/PPC/PPC64/ppc64-vinsns.lisp: Use CMPD vice CMPW.  (1
	down, a few hundred to go.)

2004-01-30 12:45  gb

	* level-1/version.lisp: 040130

2004-01-30 12:44  gb

	* level-1/l1-utils.lisp: %CSTRLEN.

2004-01-30 12:44  gb

	* level-1/l1-sysio.lisp: CLOSE just does CALL-NEXT-METHOD, which
	might work now.

2004-01-30 12:43  gb

	* level-1/l1-streams.lisp: CLOSE: set the closed slot to ...
	something non-NULL.  STREAM-IO-ERROR: so things like sockets can
	specialize it.	Need to test ELEMENT-SHIFT stuff; not sure if I
	merged Bryan's patch correctly.

2004-01-30 12:36  gb

	* level-1/l1-sockets.lisp: SOCKET-ERROR is (simple) STREAM-ERROR. 
	Change how it's signaled, and define STREAM-IO-ERROR for SOCKET.

2004-01-30 12:34  gb

	* level-1/l1-lisp-threads.lisp: Lock on *TERMINATION-POPULATION*
	access.

2004-01-30 12:34  gb

	* level-1/l1-clos.lisp: ADD-READER/WRITER-METHOD: less specialized.
	 Turn a few early accessors into GFs; writer methods on some slots.

2004-01-30 12:32  gb

	* level-1/l1-clos-boot.lisp: CLASS-SLOT-INITARGS,
	CREATE-READER/WRITER-METHOD-FUNCTION: less specialized.

2004-01-30 12:30  gb

	* lib/macros.lisp: WITH-STRING-FROM-CSTRING: stack allocate a
	lisp-string, getting bytes from c-string.

2004-01-30 12:28  gb

	* lib/foreign-types.lisp: BIT/BITFIELD foreign integer types.

2004-01-29 10:45  gb

	* level-0/l0-array.lisp: CTYPE-SUBTYPE: no specialized (COMPLEX )
	arrays, so check NUMERIC-CTYPE-COMPLEXP first.

2004-01-28 17:06  gb

	* lisp-kernel/lisp-exceptions.c: kinder, gentler do_tsp_overflow

2004-01-26 18:18  gb

	* lib/sequences.lisp: SUBSEQ: Array-headers aren't sequences;
	vector headers are.

2004-01-26 09:51  gb

	* lib/level-2.lisp: (SETF %GET-BITFIELD) becomes %SET-BITFIELD,
	which is what the setf inverse thought it was anyway.

2004-01-26 09:50  gb

	* lib/db-io.lisp: %DECODE-FOREIGN-NAME handles 0-length names
	correctly.

2004-01-26 05:09  gb

	* level-1/l1-clos.lisp: Kinder, gentler %SHARED-INITIALIZE uses
	INSTANCE-CLASS-WRAPPER.

2004-01-26 05:08  gb

	* level-1/l1-clos-boot.lisp: INSTANCE-CLASS-WRAPPER (how many
	versions of this are there ?) looks at pointer-based classes.

2004-01-26 05:06  gb

	* level-1/l1-error-system.lisp: Bryan O'Connor's fix to
	%ACTIVE-RESTART.

2004-01-26 05:05  gb

	* level-1/version.lisp: So much for the 040124 idea ...

2004-01-26 05:04  gb

	* lib/foreign-types.lisp: Initialize ordinal->type vector elements
	to NIL.

2004-01-25 15:16  gb

	* lisp-kernel/spentry.s: Linux "as" doesn't like semicolon
	comments, so use /* */.

2004-01-25 15:16  gb

	* lib/time.lisp: GET-INTERNAL-xxx-TIME moved here.

2004-01-25 15:16  gb

	* lib/number-macros.lisp: WITH-STACK-SHORT-FLOATS is
	PPC32-specific.

2004-01-25 15:15  gb

	* lib/macros.lisp: Start to make RLET assert foreign-type ordinals,
	then give up on the idea.  (FOREIGN-TYPES would need to work
	earlier in the cold load than they do.)

2004-01-25 15:14  gb

	* lib/foreign-types.lisp: Try to introduce "foreign type ordinals",
	which can be embedded in MACPTRs (this is hard to bootstrap for
	many reasons.) (PREF foo :thing.embedded-record) expands into some
	SETFable noise around %INC-PTR.

2004-01-25 15:12  gb

	* level-1/version.lisp: Bump.

2004-01-25 15:11  gb

	* level-1/sysutils.lisp: MAKE-ARRAY earlier.

2004-01-25 15:11  gb

	* level-1/linux-files.lisp: Move some time stuff to time.lisp.

2004-01-25 15:11  gb

	* level-1/l1-utils.lisp: %COMPOSITE-POINTER-REF, so embedded
	foreign structs can be SETF-able.

2004-01-25 15:10  gb

	* level-1/l1-typesys.lisp: Don't REQUIRE at loadtime, so we can
	maybe move earlier in the cold load.

2004-01-25 15:10  gb

	* level-1/l1-io.lisp: MACPTRs may say what they're pointing to,
	though this idea is hard to bootstrap.

2004-01-25 15:09  gb

	* level-1/l1-files.lisp: Move LOGICAL-PATHNAME-P earlier.

2004-01-25 15:08  gb

	* level-1/: l1-aprims.lisp, l1-clos-boot.lisp: Say "target:" a few
	times.

2004-01-25 15:07  gb

	* level-0/PPC/ppc-symbol.lisp: Fix %SVAR-BINDING-ADDRESS for the
	nth time.

2004-01-25 15:07  gb

	* level-0/PPC/ppc-float.lisp: Some conditionalization, mostly
	dealing with immediate/non-immediate SHORT-FLOATs.

2004-01-25 15:04  gb

	* level-0/l0-float.lisp, level-0/l0-numbers.lisp,
	level-1/l1-numbers.lisp, lib/numbers.lisp: Conditionalize use of
	WITH-STACK-SHORT-FLOATS, sortof.

2004-01-25 15:01  gb

	* compiler/PPC/PPC64/ppc64-arch.lisp: No low (half-) word of
	lisp-fpscr.

2004-01-25 15:00  gb

	* compiler/PPC/PPC32/ppc32-arch.lisp: WITH-STACK-SHORT-FLOATS moved
	here.

2004-01-25 15:00  gb

	* compiler/PPC/ppc-lapmacros.lisp: Halfhearted attempt at
	#+ppc32/#+ppc64 conditionalization.  Will need to split this in
	half.

2004-01-25 14:59  gb

	* compiler/optimizers.lisp: %composite-pointer-ref.

2004-01-24 16:45  gb

	* lib/systems.lisp: -some- PPC64 backend stuff.

2004-01-24 16:43  gb

	* lib/sequences.lisp: Vector case of SUBSEQ had better be faster
	...

2004-01-24 16:43  gb

	* lib/foreign-types.lisp: Start to associate "ordinal" numbers with
	types (for typed pointers.)

2004-01-24 16:40  gb

	* level-1/: l1-sockets.lisp, l1-streams.lisp, l1-sysio.lisp: Return
	was-open-p from CLOSE method.

2004-01-24 16:38  gb

	* level-1/l1-clos.lisp: UPDATE-SLOTS: assume that slotds are
	ordered, don't order them by location.

2004-01-24 16:37  gb

	* level-0/PPC/ppc-misc.lisp: %COPY-GVECTOR-TO-GVECTOR.

2004-01-24 16:36  gb

	* level-0/l0-array.lisp: Array element type of strings is
	CHARACTER, not that it matters whether it's that or BASE-CHAR.

2004-01-24 16:34  gb

	* examples/objc-runtime.lisp: Work harder to determine if an
	instance really is an instance.

2004-01-24 16:34  gb

	* examples/objc-clos.lisp: Lots of changes from Randall Beer.

2004-01-24 16:33  gb

	* examples/hemlock-textstorage.lisp: Preliminary NSBox stuff.  Not
	much of it, even.

2004-01-24 16:32  gb

	* compiler/PPC/PPC64/ppc64-vinsns.lisp: Some of these actually work
	...

2004-01-24 16:31  gb

	* compiler/PPC/PPC64/ppc64-backend.lisp: target-lisp-node-size is
	8.  Don't require vinsns (break circle).

2004-01-24 16:30  gb

	* compiler/PPC/PPC64/ppc64-arch.lisp: Some fixes; call it
	fulltag-misc after all.

2004-01-24 16:30  gb

	* compiler/PPC/PPC32/ppc32-vinsns.lisp: Rename some things to
	(start to) match ppc64.

2004-01-24 16:28  gb

	* compiler/PPC/PPC32/ppc32-backend.lisp: target-lisp-node-size in
	backend.  Make default if :ppc32-target, not :ppc-target.

2004-01-24 16:27  gb

	* compiler/PPC/PPC32/ppc32-arch.lisp: Define
	target-most-[positive,negative]-fixnum

2004-01-24 16:27  gb

	* compiler/PPC/ppc2.lisp: Don't use LOAD-TIME-VALUE to reference
	vinsn-template cell; look up the template at runtime.  Change some
	vinsn usage.

2004-01-24 16:25  gb

	* compiler/PPC/ppc-asm.lisp: Fix 64-bit rotates, define clrrdi
	instead of defining clrrdi. twice.

2004-01-24 16:23  gb

	* compiler/vreg.lisp: Yawn.  Update spec class alist for new
	storage-class names.

2004-01-24 16:22  gb

	* compiler/vinsn.lisp: Match against :u64/:s64 storage class names.

2004-01-24 16:22  gb

	* compiler/reg.lisp: New constants for	64-bit storage classes.

2004-01-24 16:21  gb

	* compiler/backend.lisp: New GPR mode-names for 64-bit storage
	classes.

2004-01-24 16:20  gb

	* compiler/arch.lisp: 64-bit storage classes.

2004-01-22 03:53  gb

	* compiler/PPC/PPC32/ppc32-vinsns.lisp: Um, COPY-FPR sets (and
	uses) an FPR ...

2004-01-22 03:52  gb

	* compiler/vinsn.lisp: MAKE-VINSN zeros the GPRS-SET & FPRS-SET
	fields when pulling a vinsn off of the freelist.

2004-01-22 03:51  gb

	* lisp-kernel/spentry.s: Try to un-botch SPbuiltin_length, for
	about the third time in a week.

2004-01-21 23:11  gb

	* level-1/l1-readloop.lisp: New --version command-line argument;
	new APPLICATION-VERSION-STRING method.

2004-01-21 23:10  gb

	* level-1/version.lisp: Bump, again.

2004-01-21 23:10  gb

	* lib/compile-ccl.lisp: Correct TARGET-LEVEL-1-MODULES, to reflect
	new target names.

2004-01-21 01:32  gb

	* level-1/l1-streams.lisp: Default methods (specialized on T) of
	OPEN-STREAM-P, INTERACTIVE-STREAM-P, INPUT-STREAM-P,
	OUTPUT-STREAM-P complain that argument isn't a stream.	This is OK,
	as long as users only specialize these methods on subclasses of
	FUNDAMENTAL-STREAM, and they shouldn't be doing otherwise anyway.

2004-01-21 00:37  gb

	* level-1/l1-streams.lisp: Bryan O'Connor's fix to
	STREAM-UNREAD-CHAR method for ECHO-STREAM.

2004-01-21 00:30  gb

	* compiler/nx1.lisp: NX1-ASH: where did those numbers come from ?

2004-01-21 00:29  gb

	* level-1/l1-typesys.lisp: (SIGNED-BYTE 1) is perfectly legal ...

2004-01-20 16:54  gb

	* compiler/PPC/ppc-backend.lisp: Define FIXUP-PPC-BACKEND in terms
	of target.

2004-01-20 16:54  gb

	* lib/compile-ccl.lisp: :PPC -> :PPC32.

2004-01-20 16:43  gb

	* xdump/: xfasload.lisp, xppcfasload.lisp: Backend name changes.

2004-01-20 16:42  gb

	* lib/: compile-ccl.lisp, systems.lisp: More PPC/PPC32 changes. 
	(Not generalized yet ...)

2004-01-20 16:41  gb

	* level-1/version.lisp: Bump again.

2004-01-20 16:41  gb

	* level-1/l1-files.lisp: Bryan O'Connor's fix to PROBE-FILE.

2004-01-20 16:40  gb

	* compiler/PPC/ppc2.lisp: Don't refer to *PPC-VINSN-TEMPLATES*; use
	the target backend instead.

2004-01-20 16:39  gb

	* compiler/nx1.lisp: New backend names.

2004-01-20 16:38  gb

	* compiler/PPC/PPC64/ppc64-vinsns.lisp: backend changes

2004-01-20 16:37  gb

	* compiler/PPC/PPC64/ppc64-backend.lisp: new file

2004-01-20 16:17  gb

	* compiler/PPC/PPC32/: ppc32-backend.lisp, ppc32-vinsns.lisp: meet
	the new files, same as the old files

2004-01-20 16:16  gb

	* compiler/PPC/ppc-backend.lisp: new file, sorta

2004-01-20 16:15  gb

	* compiler/PPC/: ppc-backend.lisp, ppc-vinsns.lisp: removed, now
	PPC32-specific

2004-01-20 16:15  gb

	* compiler/PPC/ppc-asm.lisp: backend changes

2004-01-19 17:41  gb

	* library/loop.lisp: Bryan O'Connor's fix to force RETURNing
	clauses into the main body.

2004-01-19 17:40  gb

	* lib/nfcomp.lisp: Allow (EVAL-WHEN () ,@body).

2004-01-19 17:40  gb

	* lib/macros.lisp: PARSE-DEFGENERIC allows multiple DECLARE forms,
	passes them as :DECLARATIONS option.  HANDLER-BIND a little less
	jumpy.

2004-01-19 17:37  gb

	* lib/foreign-types.lisp: (Finally) try to handle odd poweropen
	struct alignment rules.

2004-01-19 17:37  gb

	* lib/db-io.lisp: (Finally) try to handle odd poweropen struct
	alignment rules.  Pad :DBM_CONSTANT to naturally align double-float
	field, since unnatural alignment is now the norm.

2004-01-19 17:35  gb

	* level-1/l1-readloop.lisp: SIGNAL keeps looking in the same
	cluster when a handler declines.

2004-01-19 17:34  gb

	* level-1/l1-readloop-lds.lisp: Allowing INVOKE-DEBUGGER to build a
	condition from extra arguments would clearly lead to increased
	street crime.

2004-01-19 17:33  gb

	* level-1/l1-error-system.lisp: Define (and signal) some new
	condition classes.

2004-01-19 17:30  gb

	* level-1/l1-error-signal.lisp: Map kernel "can't construct
	arglist" to a (new) TYPE-ERROR subclass.

2004-01-19 17:29  gb

	* level-1/l1-dcode.lisp: GF's need to check keywords after all. 
	Recognize :ALLOW-OTHER-KEYS T sooner, don't treat :ALLOW-OTHER-KEYS
	NIL as an unknown argument.

2004-01-19 17:27  gb

	* level-0/l0-array.lisp: Paranoia in CTYPE-SUBTYPE: allow float
	aliases.

2004-01-18 21:12  gb

	* examples/cocoa-inspector.lisp: Don't reference *objc-readtable*.

2004-01-17 21:00  gb

	* library/loop.lisp: From Bryan O'Connor: "LOOP FOR x ..." uses
	destructuring mechanism on X, so "LOOP FOR NIL ..." is accepted.

2004-01-17 20:58  gb

	* library/lispequ.lisp: More pathname info for DESCRIBE.  Use
	INSTANCE-SLOTS vice INSTANCE.SLOTS, so .accessors will work on
	other instance types.

2004-01-17 20:57  gb

	* lib/pprint.lisp: PPRINT-DISATCH: symbol is external in CL, so
	don't use it as a structure name.

2004-01-17 20:55  gb

	* lib/numbers.lisp: RATIONALIZE comments; extra typechecking in
	BOOLE.

2004-01-17 20:55  gb

	* lib/macros.lisp: WITH-HASH-TABLE-ITERATOR allows declarations.

2004-01-17 20:54  gb

	* lib/foreign-types.lisp: Handle FOREIGN-ARRAY-TYPE.  (Note: this
	is Darwin-specific.)

2004-01-17 20:53  gb

	* lib/arrays-fry.lisp: SBIT, %SBITSET hande 0-dimensional bitvector
	case.

2004-01-17 20:52  gb

	* level-1/version.lisp: Bump.

2004-01-17 20:52  gb

	* level-1/sysutils.lisp: TYPE-OF changes.  Blame CLHS.

2004-01-17 20:51  gb

	* level-1/l1-utils.lisp: More PROGRAM-ERRORs signaled during
	destructuring.

2004-01-17 20:50  gb

	* level-1/l1-typesys.lisp: Lots more changes.

2004-01-17 20:49  gb

	* level-1/l1-streams.lisp: MAKE-STRING-OUTPUT-STREAM: no such thing
	as a STRING-CHAR anymore.

2004-01-17 20:48  gb

	* level-1/l1-readloop-lds.lisp: WARN has to be more anal-retentive
	about the condition and any args it gets.

2004-01-17 20:47  gb

	* level-1/l1-numbers.lisp: Handle bytespecs with size 0.

2004-01-17 20:46  gb

	* level-1/l1-files.lisp: Quote dots in namestring components. 
	Catch a few bogus cases, like (:ABSOLUTE :UP) in directory.

2004-01-17 20:44  gb

	* level-1/l1-dcode.lisp: %%NTH-ARG-DCODE: signal program error if 0
	args.

2004-01-17 20:40  gb

	* level-1/l1-clos.lisp: Use safer accessors.  (May revert back some
	cases, since .accessors should now use INSTANCE-SLOTS rather than
	INSTANCE.SLOTS.)

2004-01-17 20:38  gb

	* level-1/l1-clos-boot.lisp: Define more accessors; INSTANCE-SLOTS
	is now used in most "early" .accessors.  Don't look at GF-AOK bit;
	whatever the problem with initarg caching is, that's not the
	solution.

2004-01-17 20:36  gb

	* level-1/l1-aprims.lisp: NRECONC uses ENDP.  %MAKE-DISPLACED-ARRAY
	always displaces to what the user said to displace to.

2004-01-17 20:35  gb

	* level-0/l0-pred.lisp: DISPLACED-ARRAY-P didn't handle transitive
	displacement.

2004-01-17 20:34  gb

	* level-0/l0-numbers.lisp: Handle denorms in
	INTEGER-DECODE-SHORT-FLOAT.

2004-01-17 20:33  gb

	* level-0/l0-float.lisp: (EXPT b e) is (COERCE 1 (TYPE-OF B)) if
	(ZEROP E).

2004-01-17 20:32  gb

	* level-0/l0-array.lisp: *BASE-CHAR-CLASS* may or may not be the
	same as *CHARACTER-CLASS*.  (integer 1 1) denotes a BIT.

2004-01-17 20:30  gb

	* compiler/optimizers.lisp: Handle negative bytespecs; don't define
	synonyms where they may be involved.  Open-code INTEGERP.

2004-01-15 01:34  gb

	* compiler/optimizers.lisp: Remove a stale comment.  Might consider
	a less-hairy typespec.

2004-01-15 01:33  gb

	* level-0/l0-array.lisp: (INTEGER 0 0) is a subtype of (INTEGER 0
	1), aka BIT.

2004-01-15 01:32  gb

	* level-1/l1-clos-boot.lisp: MAKE-INSTANCES-OBSOLETE: methods
	return class.

2004-01-15 01:29  gb

	* level-1/l1-dcode.lisp: %%CHECK-KEYWORDS is (a) slow (b) wrong (c)
	probably unnecessary.  If (c) is true, there's a similar case where
	the same things are probably true as well, and callers should be
	changed. (c) is certainly true in some cases (when the "combined
	method" is a simple method.

2004-01-15 01:26  gb

	* level-1/l1-error-system.lisp: READER-ERROR inherits from
	PARSE-ERROR and STREAM-ERROR.

2004-01-15 01:25  gb

	* level-1/l1-files.lisp: PATHNAME-DEVICE typechecks its arg before
	ignoring it.

2004-01-15 01:20  gb

	* level-1/l1-streams.lisp: Default version of STREAM-FILENAME
	signals an error; streams that aren't FILE-STREAMs aren't
	pathname-designators.

2004-01-15 01:18  gb

	* level-1/l1-typesys.lisp: Bump up the (global) type-cache size. 
	Fixes in CLASS type methods.

2004-01-15 01:16  gb

	* lisp-kernel/spentry.s: A million monkeys and a million
	typewriters: sooner or later, one of them will get ASH right ...

2004-01-14 20:59  gb

	* level-0/l0-numbers.lisp: Special-case (TRUNCATE
	MOST-NEGATIVE-FIXNUM x).

2004-01-13 21:50  gb

	* level-1/version.lisp: forgot to commit this earlier

2004-01-13 18:13  gb

	* compiler/nx-basic.lisp: Signal a PROGRAM-ERROR or two.  Better
	checking of SYMBOL-MACROs in AUGMENT-ENVIRONMENT.

2004-01-13 18:12  gb

	* compiler/nx0.lisp: Allow NIL to be a -local- function name. 
	Don't tail-call SIGNAL-PROGRAM-ERROR.

2004-01-13 18:11  gb

	* compiler/nx1.lisp: Add a (long-)missing IN-PACKAGE.

2004-01-13 18:11  gb

	* compiler/PPC/ppc-disassemble.lisp: DISASSEMBLE's output should go
	to *STANDARD-OUTPUT*.

2004-01-13 18:10  gb

	* level-0/l0-array.lisp: FILL-POINTER's lament.

2004-01-13 18:10  gb

	* level-0/l0-bignum.lisp: maybe bignum-bignum-gcd really works now.

2004-01-13 18:09  gb

	* level-0/l0-numbers.lisp: IMAGPART uses * vice FLOAT, to get the
	sign of 0.0 right.  PHASE of a negative rational returns
	single-float PI.

2004-01-13 18:08  gb

	* level-1/l1-aprims.lisp: ALT-LIST-LENGTH here.  LAST allows
	positive integers.  GET-PROPERTIES uses a TYPE-ERROR to complain
	about bad plists.

2004-01-13 18:06  gb

	* level-1/l1-clos-boot.lisp: Recognize that SLOT-MISSING might
	return if it's specialized.  Call it with the symbol SETF, not
	'(SETF SLOT-VALUE).

2004-01-13 18:04  gb

	* level-1/l1-clos.lisp: Check initargs via DESTRUCTURING-BIND in
	%SHARED-INITIALIZE.  ENSURE-CLASS-FOR-DEFCLASS and
	*defclass-redefines-improperly-named-classes-pedantically*.  (SETF
	CLASS-NAME) isn't an accessor; the real method uses
	REINITIALIZE-INSTANCE.

2004-01-13 18:02  gb

	* level-1/l1-dcode.lisp: Bad keywords trigger PROGRAM-ERRORs.

2004-01-13 18:01  gb

	* level-1/: l1-error-signal.lisp, l1-error-system.lisp: PARSE-ERROR
	isn't a STREAM-ERROR.  Tail-call ERROR from SIGNAL-PROGRAM-ERROR,
	to keep it out of backtrace.  UNDEFINED-FUNCTION-CALL: lose
	FUNCTION-NAME slot, use CELL-ERROR-NAME instead.

2004-01-13 17:58  gb

	* level-1/l1-numbers.lisp: Can't have a function called
	CL:RANDOM-STATE, so change its name and its only caller.

2004-01-13 17:58  gb

	* level-1/l1-readloop.lisp: SYMBOL-MACROLET in the cheap evaluator:
	process declarations along with symbol-macros, so that
	AUGMENT-ENVIRONMENT can complain about SPECIAL decls easier.

2004-01-13 17:56  gb

	* level-1/l1-typesys.lisp: Incorporate lots of changes (most of the
	type system, in fact) from recent CMUCL sources.  Thank Cristophe
	Rhodes and others for their work.
	
	Warning to fix an EVAL-WHEN; can't define some stuff at
	compile-time while bootstrapping from the old type system.

2004-01-13 17:55  gb

	* level-1/l1-utils.lisp: Fix ASSOC and friends, broken just a few
	days ago.  Signal PROGRAM-ERROR when detecting argument mismatches
	in macros.

2004-01-13 17:54  gb

	* level-1/sysutils.lisp: TYPE-OF's a little closer to being right
	(checks for PROPERly-named classes.)

2004-01-13 17:53  gb

	* lib/defstruct.lisp: STRUCTURE isn't a type specifier;
	STRUCTURE-OBJECT is.  Use the right one in COPY-STRUCTURE.

2004-01-13 17:52  gb

	* lib/lists.lisp: Use ENDP to detect bad alists in COPY-ALIST. 
	Move ALT-LIST-LENGTH elsewhere (and fix it ...)

2004-01-13 17:50  gb

	* lib/macros.lisp: DEFCLASS: allow NIL as slot :type, expand into
	(new) ENSURE-CLASS-FOR-DEFCLASS.  Signal a PROGRAM-ERROR in
	DEFINE-METHOD-COMBINATION.  Can't have a macro named CL:METHOD, so
	change its name to CCL::REFERENCE-METHOD for the time being.

2004-01-13 17:48  gb

	* lib/numbers.lisp: LCM-2, SIGNUM fixes.

2004-01-13 17:47  gb

	* lib/pprint.lisp: (SATISFIES (OUTPUT-STREAM-P)).  (The thing
	that's catching these things is a half-bootstrapped type system,
	but I'd have liked to have seen that one a lot earlier ...)

2004-01-13 17:46  gb

	* lib/read.lisp: Add an IN-PACKAGE.  PARSE-INTEGER signals
	PARSE-ERRORs.

2004-01-13 17:45  gb

	* lib/time.lisp: The type system is/was choking on unknown types;
	it choked on (NUMBER 0 *), which should have been (REAL 0 *) in the
	first place.

2004-01-13 17:43  gb

	* library/lispequ.lisp: New CTYPEs for negation, intersection.

2004-01-13 17:43  gb

	* lisp-kernel/spentry.s: Restore SPbuiltin_assq (ignore NILs in the
	alist.) (ash x y) returns -1 on (<= n -29); need to find a way to
	parameterize this while keeping M4 happy.

2004-01-12 08:20  beer

	* examples/objc-clos.lisp: Partial support for MAKE-INSTANCE on
	ObjC classes

2004-01-12 00:31  gb

	* level-1/l1-dcode.lisp: Too-few args to generic-function ->
	PROGRAM-ERROR, not just ERROR.

2004-01-12 00:30  gb

	* lib/lists.lisp: BUTLAST, NBUTLAST handle dotted lists again.

2004-01-12 00:29  gb

	* lib/level-2.lisp: Handle the case where &WHOLE is a structured
	lambda-list in %destructure-lambda-list.

2004-01-11 18:54  gb

	* lisp-kernel/spentry.s: Start to replace some old (old-binding
	scheme) entries with &restv support.  SPsvar_progvsave: save the
	old binding, not the new one.

2004-01-11 18:53  gb

	* lisp-kernel/spjump.s: Start to replace some old (old-binding
	scheme) entries with &restv support.

2004-01-11 18:53  gb

	* lib/arrays-fry.lisp: ARRAY-IN-BOUNDS-P allows bignum subscripts
	(which are never in bounds, of course.)

2004-01-11 18:52  gb

	* level-1/l1-utils.lisp: ASSEQL was misparenthesized.

2004-01-11 18:51  gb

	* compiler/PPC/PPC64/ppc64-vinsns.lisp: rename some macros:
	ppc->ppc64.

2004-01-11 18:50  gb

	* compiler/nx0.lisp: NX-TAG-INFO compares tagbody tags with EQL.

2004-01-10 23:24  gb

	* level-1/l1-clos-boot.lisp: (SETF FIND-CLASS) checks more
	carefully for "protected classes".

2004-01-10 23:14  gb

	* compiler/PPC/ppc2.lisp: Vinsn renames; slight change to remove
	backend support for "handle"-based memory accessors.

2004-01-10 23:13  gb

	* compiler/PPC/ppc-vinsns.lisp: Change some vinsn names, eliminate
	some unused vinsns.  This'll be "ppc32-vinsns.lisp" soon.

2004-01-10 23:08  gb

	* compiler/PPC/PPC64/ppc64-arch.lisp: Fix nil-value constant.

2004-01-10 23:08  gb

	* compiler/PPC/PPC64/ppc64-vinsns.lisp: New file; not close to
	correct yet.

2004-01-10 23:07  gb

	* level-1/l1-lisp-threads.lisp: Make *DEFAULT-TEMP-STACK-SIZE* too
	big.

2004-01-10 23:06  gb

	* lib/numbers.lisp: Fix LCM/LCM-2 error checking.

2004-01-10 23:06  gb

	* lisp-kernel/spentry.s: _SPbuiltin_length handles the LIST-LENGTH
	case inline.

2004-01-09 15:09  gb

	* xdump/xfasload.lisp: Back out of the attempt to make LIST-LENGTH
	a builtin.

2004-01-09 14:36  gb

	* lib/lists.lisp: Another typo in BUTLAST.

2004-01-09 14:29  gb

	* level-1/l1-utils.lisp: Typo in ASSEQL.

2004-01-09 14:27  gb

	* xdump/xfasload.lisp: LIST-LENGTH will soon be builtin.

2004-01-09 14:27  gb

	* lib/lists.lisp: [N]BUTLAST fixes.

2004-01-09 14:26  gb

	* level-1/l1-error-system.lisp: BAD-SLOT-TYPE, IMPROPER-LIST
	conditions.

2004-01-09 14:25  gb

	* level-1/l1-error-signal.lisp: Handle IMPROPER-LIST

2004-01-09 14:24  gb

	* level-1/: l1-clos-boot.lisp, l1-clos.lisp: BAD-SLOT-TYPE errors.

2004-01-09 14:24  gb

	* level-0/l0-misc.lisp: LENGTH changes.

2004-01-07 17:30  gb

	* examples/: cocoa-window.lisp, cocoa.lisp: A little bit of
	conditionalization.

2004-01-07 17:29  gb

	* level-1/sysutils.lisp: TYPEP returns 1 value.

2004-01-07 17:29  gb

	* level-0/l0-bignum.lisp: Detect when destructive right shifts
	yield a fixnum more accurately (this was causing the bignums to be
	passed to internal functions that expect fixnums in some cases).

2004-01-07 16:40  gb

	* level-0/l0-misc.lisp: ASSQ is builtin, so just EVAL-REDEF it.

2004-01-07 16:39  gb

	* level-1/l1-utils.lisp: ASSOC variants don't allow NIL in an
	alist.	ASSEQL typechecks CAR/CDR.  MEMEQL uses ENDP, doesn't use
	%CAR/%CDR in unsafe contexts.

2004-01-07 16:38  gb

	* lib/level-2.lisp: Do an EVAL-REDEF for ASSQ.

2004-01-07 16:37  gb

	* lisp-kernel/spentry.s: Fix (at least the function case) of
	:ALLOW-OTHER-KEYS NIL.

2004-01-07 08:42  beer

	* examples/objc-clos.lisp: Added support for foreign slot
	definitions

2004-01-06 20:20  gb

	* level-0/PPC/ppc-clos.lisp: Assume that elaboration will call
	#'%SLOT-ID-REF-MISSING, #'%SLOT-ID-SET-MISSING as constant
	functions (not as symbols.)

2004-01-05 22:21  gb

	* examples/objc-clos.lisp: Print class addresses when generating
	slots, in the commented-out FORMAT calls.

2004-01-05 22:19  gb

	* examples/objc-runtime.lisp: Derive the names of superclasses when
	recursively mapping classes; don't use the name MAP-OBJC-CLASS was
	called with/defaulted to over and over.

2004-01-05 20:05  gb

	* compiler/PPC/PPC32/ppc32-arch.lisp: Say "4" instead of "(ash 1
	ppc::word-shift)", since this is platform-dependent anyway.

2004-01-05 20:04  gb

	* examples/objc-support.lisp: Use "TARGET" package, not "ARCH".

2004-01-05 19:33  gb

	* lisp-kernel/static-linux/: .cvsignore, Makefile, staticlib.c:
	Preliminary support for statically-linked kernel.

2004-01-05 19:30  gb

	* xdump/heap-image.lisp: FIXNUMSHIFT in TARGET package.

2004-01-05 19:30  gb

	* lib/read.lisp: SUBTAG-INSTANCE in TARGET package.

2004-01-05 19:29  gb

	* level-1/l1-lisp-threads.lisp: Intern accessors in "TARGET"
	package.

2004-01-05 19:29  gb

	* compiler/PPC/ppc-disassemble.lisp: EXTRACT-DEFAULT function's in
	PPC package now.

2004-01-05 19:12  gb

	* xdump/xppcfasload.lisp: Error codes in ARCH package.

2004-01-05 19:11  gb

	* xdump/xfasload.lisp: Nilreg-relative-symbols are PPC common.

2004-01-05 19:11  gb

	* lisp-kernel/pmcl-kernel.c: Set lisp_global(STATICALLY_LINKED) if
	STATIC is defined.

2004-01-05 19:10  gb

	* lisp-kernel/plbt.c: Don't assume that dladdr exists if STATIC is
	defined.

2004-01-05 19:09  gb

	* lisp-kernel/: constants.s, lisp_globals.h: STATICALLY_LINKED
	global.

2004-01-05 19:09  gb

	* lib/ppcenv.lisp: PPC regs are in PPC package.

2004-01-05 19:08  gb

	* lib/backtrace-lds.lisp: Opcode/operand stuff's in ARCH package.

2004-01-05 19:08  gb

	* level-1/version.lisp: 040106, for a while.

2004-01-05 19:07  gb

	* level-1/: ppc-error-signal.lisp, ppc-trap-support.lisp: Error
	codes are in ARCH package.

2004-01-05 19:07  gb

	* level-1/l1-lisp-threads.lisp: TCR flags are in ARCH.	(Strange,
	but true.)

2004-01-05 19:06  gb

	* level-1/l1-io.lisp: All PPCs have an FPSCR with the same bits in
	it ...

2004-01-05 19:06  gb

	* level-1/l1-clos.lisp: Fix (bad) typo in %SHARED-INITIALIZE.

2004-01-05 19:05  gb

	* level-1/l1-clos-boot.lisp: Some changes to initarg
	checking/caching; may still not be correct.

2004-01-05 19:04  gb

	* level-0/PPC/: ppc-float.lisp, ppc-numbers.lisp, ppc-symbol.lisp:
	Internal-package dependency changes.

2004-01-05 19:03  gb

	* level-0/PPC/ppc-def.lisp: Errors in ARCH package.

2004-01-05 19:03  gb

	* level-0/l0-cfm-support.lisp: Some support for static linking
	under Linux, and changes to the startup code for when
	*STATICALLY-LINKED* is in effect.

2004-01-05 19:02  gb

	* compiler/PPC/PPC64/ppc64-arch.lisp: Should be close to having
	PPC64 stuff (tags, object layout) here.

2004-01-05 19:02  gb

	* compiler/PPC/PPC32/ppc32-arch.lisp: Should be close to having
	PPC32 stuff (tags, object layout) here.   May need to be
	reorganized to cross-compile cleanly.

2004-01-05 19:00  gb

	* compiler/PPC/: ppc-disassemble.lisp, ppc-lap.lisp,
	ppc-lapmacros.lisp, ppc-vinsns.lisp, ppc2.lisp: Mostly PPC (not
	PPC32 or PPC64) specific, nominally.  (Undoubtedly still some PPC32
	dependencies.)

2004-01-05 18:59  gb

	* compiler/PPC/ppc-backend.lisp: Mostly PPC (not PPC32 or PPC64)
	specific, nominally.

2004-01-05 18:59  gb

	* compiler/PPC/ppc-asm.lisp: Mostly PPC (not PPC32 or PPC64)
	specific, nominally.  Opcode/operand lap stuff's in ARCH.

2004-01-05 18:56  gb

	* compiler/PPC/: ppc-arch.lisp, ppc-arch.lisp: Most stuff that's
	truly PPC-specific should be here (in the PPC package) now.

2004-01-05 18:54  gb

	* compiler/vreg.lisp: Storage classes (s64/u64 need to be added, at
	least) are in the ARCH package.

2004-01-05 18:53  gb

	* compiler/vinsn.lisp: (generic) opcode/operand stuff is in the
	ARCH package.

2004-01-05 18:53  gb

	* compiler/nx0.lisp: Builtin-functions list is in the ARCH package.

2004-01-05 18:52  gb

	* compiler/arch.lisp: Back in the ARCH package, but there's a lot
	less stuff here.

2004-01-03 16:36  gb

	* level-0/l0-bignum.lisp: Try again, using
	WITH-NEGATED-BIGNUM-BUFFERS.

2004-01-03 16:23  gb

	* level-0/l0-bignum.lisp: %BIGNUM-BIGNUM-GCD wasn't zeroing out the
	buffers it (re-)uses, so use a simpler algorithm (that conses more)
	until this is fixed.

2004-01-03 12:52  gb

	* compiler/PPC/ppc-asm.lisp: Slight change to requirements.

2004-01-03 12:51  gb

	* compiler/PPC/ppc-arch.lisp: New file.

2004-01-03 12:51  gb

	* compiler/PPC/PPC64/ppc64-arch.lisp: New (empty, in fact) file.

2004-01-03 12:50  gb

	* compiler/arch.lisp: Try to be less ppc32-specific.

2004-01-03 12:49  gb

	* compiler/PPC/PPC32/ppc32-arch.lisp: Try to be more
	ppc32-specific.

2004-01-03 12:49  gb

	* examples/bridge.lisp: (Mostly) work with gnu-objc; may have
	broken apple-objc ...

2004-01-03 12:48  gb

	* examples/name-translation.lisp: special-case GS under GNUstep.

2004-01-03 12:47  gb

	* examples/: objc-runtime.lisp, objc-clos.lisp: More gnu-objc
	conditionalization.  Take user-specified class-name when mapping
	objc-class.  Make CLASS-OF objc-metaclasses be OBJC-METACLASS.

2004-01-03 12:45  gb

	* examples/objc-support.lisp: More gnu-objc conditionalization.

2004-01-03 12:43  gb

	* level-0/nfasload.lisp: Generalize the notion of packages whose
	symbols are always exported.

2004-01-03 12:42  gb

	* level-1/l1-boot-1.lisp: Move command-line-arg stuff to
	l1-pathnames.

2004-01-03 12:42  gb

	* level-1/l1-boot-3.lisp: Install the kernel error callbacks, late
	in the cold load.

2004-01-03 12:41  gb

	* level-1/l1-clos-boot.lisp: Move FOREIGN-OBJECT-DOMAIN accessors
	elsewhere.  Make slot accessors work on pointer-based instances.

2004-01-03 12:40  gb

	* level-1/l1-clos.lisp: Add a VALIDATE-SUPERCLASS method for
	(FOREIGN-CLASS STANDARD-CLASS), just in case.

2004-01-03 12:39  gb

	* level-1/l1-pathnames.lisp: Move COMMAND-LINE-ARGUMENTS stuff
	here; use it to find the CCL directory, maybe.

2004-01-03 12:39  gb

	* level-1/ppc-error-signal.lisp: Rename the %ERR-DISP callback to
	%X-ERRDISP, so the kernel doesn't try to call out to %ERR-DISP too
	early in the cold load.

2004-01-03 12:38  gb

	* level-1/ppc-trap-support.lisp: Rename the CMAIN callback to
	XCMAIN, so the kernel doesn't try to call out to CMAIN too early in
	the cold load.

2004-01-03 12:37  gb

	* lib/: systems.lisp, compile-ccl.lisp: Add PPC-ARCH.  (This is all
	still a moving target.)

2004-01-03 12:37  gb

	* lisp-kernel/lisp-exceptions.c: Integrate a little better with the
	new debugger.

2004-01-03 12:36  gb

	* lisp-kernel/lisp-exceptions.h: According to my calculations, you
	need 5 bits to express a 5-bit register field (RT, RA, RB, etc.)

2004-01-03 12:35  gb

	* lisp-kernel/ppc_print.c: Print MACPTRs, get method
	names/specializers half-right.

2004-01-03 12:35  gb

	* library/lispequ.lisp: Move FOREIGN-OBJECT-DOMAIN accessors here.

2004-01-03 03:49  gb

	* lisp-kernel/spentry.s: Zero the domain/type fields when making a
	stack-block.

2003-12-31 04:12  gb

	* lib/describe.lisp: Use STANDARD-OBJECT-P to find instance
	class-wrappers.

2003-12-31 04:11  gb

	* level-1/l1-clos-boot.lisp: Fix an EQL-SPECIALIZER botch.  Lots of
	stuff to support foreign classes/foreign objects.

2003-12-31 04:09  gb

	* level-1/l1-clos.lisp: Use %class-slots instead of %CLASS.SLOTS
	when CLASS-SLOTS won't do.  Move CONSTANTLY here, remove some
	outdated comments.

2003-12-31 04:08  gb

	* level-1/l1-dcode.lisp: Careful about getting wrappers in
	dispatch.  Use %class-slots instead of %CLASS.SLOTS when
	CLASS-SLOTS won't do.

2003-12-31 04:06  gb

	* level-1/l1-io.lisp: Write the address involved in a #<Recursive
	printing error>, as if that helps ...  Use CLASS-NAME vice
	%CLASS.NAME.

2003-12-31 04:04  gb

	* level-0/PPC/ppc-utils.lisp: Macptr domain/type accessors.  In LAP
	to simplify treating them as (SIGNED-BYTE 32), but it was easier to
	make domain unsigned.

2003-12-31 04:03  gb

	* level-0/l0-pred.lisp: Half-hearted change to %TYPEP, to handle
	foreign-typed macptrs.

2003-12-31 04:02  gb

	* examples/process-objc-modules.lisp: Don't call MAP-OBJC-CLASS
	when walking modules.

2003-12-31 04:02  gb

	* examples/objc-runtime.lisp: Start to integrate CLOS & ObjC.

2003-12-31 04:01  gb

	* examples/objc-clos.lisp: New file: start to integrate CLOS/ObjC.

2003-12-31 04:01  gb

	* compiler/PPC/ppc-vinsns.lisp: MACPTR->STACK zeroes domain, type
	fields.

2003-12-29 01:19  gb

	* examples/objc-runtime.lisp: SUPER's gensym'ed in methods; FLET
	SUPER accesses it.  Remove the CFBUNDLE stuff, so this file can be
	loaded when it isn't necessary.

2003-12-29 01:17  gb

	* examples/objc-readtable.lisp: Access SUPER via (SUPER).

2003-12-29 01:17  gb

	* examples/fake-cfbundle-path.lisp: Put the CFBUNDLE nonsense here,
	independent of the rest of objc-support.

2003-12-29 01:17  gb

	* examples/cocoa.lisp: Get rid of *DEFAULT-BUNDLE-PATH* and friend;
	require FAKE-CFBUNDLE-PATH and use the function of that name
	explicitly.

2003-12-29 01:15  gb

	* examples/cocoa-window.lisp: Use (SUPER) in
	OBJC-MESSAGE-SEND-SUPER call.

2003-12-21 15:40  gb

	* examples/: cocoa-application.lisp, objc-runtime.lisp,
	process-objc-modules.lisp: revive class info, autorelease-pool when
	reiniting CCL directory

2003-12-20 05:18  gb

	* lisp-kernel/lisp-debug.c: Comment out things that don't (yet)
	work.

2003-12-20 05:17  gb

	* level-1/: l1-clos-boot.lisp, l1-clos.lisp: Punt on primary
	accessor methods.

2003-12-20 05:16  gb

	* lib/xref.lisp: Add newline before EOF.

2003-12-20 05:16  gb

	* lib/describe.lisp: Fix dangling close paren.

2003-12-20 03:45  gb

	* lib/describe.lisp: Alanr's fix to closure-inspector.

2003-12-20 00:48  gb

	* lisp-kernel/: spentry.s, thread_manager.c: Remove inline loginfo.

2003-12-20 00:48  gb

	* level-0/: l0-io.lisp, PPC/ppc-symbol.lisp: Add newline before
	EOF.

2003-12-19 17:29  gb

	* examples/: apple-objc.lisp, gnu-objc.lisp: Replaced by
	objc-runtime.lisp

2003-12-19 16:44  gb

	* lib/macros.lisp: A little clearer to say OPTION-NAME instead of
	(CADR OPTION) in DEFCLASS misc-option case.

2003-12-19 16:35  gb

	* lisp-kernel/lisp-debug.c: Change debugger prompt.  Still confuses
	the hell out of ILISP.

2003-12-19 16:34  gb

	* library/splay-tree.lisp: Keep count of splay-tree nodes;
	PRINT-OBJECT methods.

2003-12-19 16:33  gb

	* level-1/version.lisp: Bump the version number.

2003-12-19 16:33  gb

	* examples/process-objc-modules.lisp: Call MAP-OBJC-CLASS on (true)
	classes; MAP-OBJC-CLASS will handle the metaclass.

2003-12-19 16:32  gb

	* examples/objc-support.lisp: Add (commented-out) DBG call.

2003-12-19 16:31  gb

	* examples/objc-runtime.lisp: Some fixes: ensure that the Cocoa
	demo works under OSX.

2003-12-19 15:09  gb

	* lisp-kernel/: lisp-debug.c, lisp-exceptions.c, lisp-exceptions.h,
	lispdcmd.c: New & improved debugger.

2003-12-19 14:47  gb

	* library/splay-tree.lisp: map-splay-tree

2003-12-19 14:37  gb

	* examples/process-objc-modules.lisp: This is all #+apple-objc.

2003-12-19 14:36  gb

	* examples/objc-readtable.lisp: Move readtable stuff out of main
	path; preserve (for a while) for backward- compatibility.

2003-12-19 14:36  gb

	* examples/bridge.lisp: Require (new) OBJC-RUNTIME. Conditionalize
	a little for runtime differences (needs more work.)

2003-12-19 14:33  gb

	* examples/cocoa.lisp: Define bundle/executable paths here.

2003-12-19 14:31  gb

	* examples/objc-runtime.lisp: New file, intended to replace
	apple-objc.lisp.  Try to hide the differences between Apple/GNU
	ObjC runtimes here.

2003-12-19 07:05  beer

	* examples/apple-objc.lisp: Added missing comma to SELF in
	OBJC-METHOD-DEFINITION-FORM

2003-12-16 11:23  gb

	* lib/xref.lisp: use compiler frontend hooks

2003-12-16 11:22  gb

	* compiler/: nx.lisp, nx0.lisp, nx1.lisp: integrate XREF changes

2003-12-16 11:13  gb

	* examples/: apple-objc.lisp, gnu-objc.lisp: minor changes

2003-12-15 15:16  gb

	* library/splay-tree.lisp: new file

2003-12-15 14:12  gb

	* examples/: bridge.lisp, process-objc-modules.lisp: start to
	conditionalize for runtime

2003-12-15 14:11  gb

	* examples/gnu-objc.lisp: get more of this working

2003-12-13 14:53  gb

	* examples/gnu-objc.lisp: Revive efforts to get this working.

2003-12-13 14:51  gb

	* lib/pathnames.lisp: DIRECTORYP.

2003-12-12 16:32  gb

	* level-1/l1-clos.lisp: SETUP-SLOT-LOOKUP does nothing if no slots.

2003-12-12 16:30  gb

	* lib/defstruct.lisp: STRUCTURE isn't a type-specifier; use
	STRUCTURE-OBJECT instead.

2003-12-12 16:29  gb

	* level-1/sysutils.lisp: STRUCTURE isn't a type-specifier.

2003-12-12 16:29  gb

	* level-1/l1-typesys.lisp: TYPE-SPECIFIER does some typechecking.

2003-12-12 16:28  gb

	* level-1/l1-lisp-threads.lisp: FAKE-STACK-FRAME isn't a type
	specifier.

2003-12-12 16:27  gb

	* level-1/l1-clos-boot.lisp: STANDARD-INSTANCE isn't a type
	specifier.

2003-12-12 16:26  gb

	* level-0/l0-pred.lisp: COMPLEX-ARRAY, DISPLACED-ARRAY aren't type
	specifiers.

2003-12-12 14:12  gb

	* library/lispequ.lisp: New wrapper layout.

2003-12-12 14:12  gb

	* lib/ccl-export-syms.lisp: Export METHOD-NAME from CCL,
	OPENMCL-MOP.

2003-12-12 14:12  gb

	* level-1/l1-typesys.lisp: Set TYPE-PREDICATE slot of standard slot
	definition.

2003-12-12 14:10  gb

	* level-1/l1-dcode.lisp: New slot-value scheme.  No more
	reader/writer dcode.

2003-12-12 14:10  gb

	* level-1/: l1-clos-boot.lisp, l1-clos.lisp: New slot-value scheme.

2003-12-12 14:09  gb

	* level-0/PPC/ppc-clos.lisp: New scheme.

2003-12-10 01:25  gb

	* lisp-kernel/thread_manager.c: Don't free() a pointer that was
	just realloc()ed.

2003-12-10 01:25  gb

	* lisp-kernel/spentry.s: Don't reference tlb_pointer until we're
	sure it's big enough.

2003-12-10 01:24  gb

	* library/lispequ.lisp: More wrapper slots for faster slot lookup.

2003-12-10 01:24  gb

	* level-1/version.lisp: New date.

2003-12-10 01:23  gb

	* level-1/l1-clos.lisp: Set things up for faster slot lookup.

2003-12-10 01:22  gb

	* level-1/l1-clos-boot.lisp: SLOT-ID stuff.

2003-12-10 01:21  gb

	* level-0/PPC/ppc-clos.lisp: Some LAP for slot lookup.

2003-12-10 01:20  gb

	* level-0/l0-init.lisp: New PPC32, MOP features.

2003-12-06 22:25  gb

	* level-1/: l1-clos-boot.lisp, l1-clos.lisp: Move
	SLOT-ID-VALUE/SETF-SLOT-ID-VALUE from l1-clos.lisp to
	l1-clos-boot.lisp.

2003-12-06 22:24  gb

	* library/lispequ.lisp: There -will- be more fields in a class
	wrapper soon.

2003-12-06 21:11  gb

	* compiler/optimizers.lisp: First cut at SLOT-VALUE.

2003-12-06 18:44  gb

	* level-1/l1-io.lisp: PRINT-OBJECT method for SLOT-ID.

2003-12-06 18:44  gb

	* level-1/l1-clos-boot.lisp, level-1/l1-clos.lisp,
	library/lispequ.lisp: Start to implement new slot-lookup scheme.

2003-12-06 17:25  gb

	* examples/cocoa-listener.lisp: Return value of insertNewline:
	method is void.

2003-12-06 17:16  gb

	* level-1/l1-clos-boot.lisp: Be more careful about recognizing EQL
	specializers.

2003-12-06 17:15  gb

	* examples/apple-objc.lisp: COLLECT macro moved to CCL package.

2003-12-01 14:44  gb

	* lib/foreign-types.lisp: %foreign-type-or-record: recognize
	(:struct :foo) off the bat.

2003-12-01 14:44  gb

	* level-1/linux-files.lisp: Better %%rusage, since Darwin mucks up
	system/user time.

2003-12-01 14:42  gb

	* level-0/PPC/ppc-symbol.lisp: %SVAR-BINDING-ADDRESS fix.

2003-11-30 01:55  gb

	* lisp-kernel/pmcl-kernel.c: ensure_gc_structures_writable: account
	for entire heap, not just current dynamic area.  Don't try to
	commit a 0-length page range.

2003-11-30 01:54  gb

	* lisp-kernel/lisp-debug.c: Distinguish between read errors
	(especially EINTR) and EOF; terminate on true EOF.

2003-11-19 01:52  gb

	* level-0/l0-cfm-support.lisp, level-0/l0-utils.lisp,
	level-0/nfasload.lisp, level-0/PPC/ppc-array.lisp,
	level-0/PPC/ppc-def.lisp, level-0/PPC/ppc-float.lisp,
	level-0/PPC/ppc-misc.lisp, level-0/PPC/ppc-symbol.lisp,
	level-0/PPC/ppc-utils.lisp, level-1/l1-aprims.lisp,
	level-1/l1-clos-boot.lisp, level-1/l1-dcode.lisp,
	level-1/l1-events.lisp, level-1/l1-lisp-threads.lisp,
	level-1/l1-readloop.lisp, level-1/l1-streams.lisp,
	level-1/l1-utils.lisp, level-1/ppc-callback-support.lisp,
	level-1/ppc-error-signal.lisp, level-1/ppc-threads-utils.lisp,
	level-1/ppc-trap-support.lisp, lib/arrays-fry.lisp,
	lib/backtrace-lds.lisp, lib/backtrace.lisp, lib/dumplisp.lisp,
	lib/eval.lisp, lib/ppc-metering.lisp,
	library/macptr-termination.lisp: remove sparc lap; move all PPC lap
	code to ccl:level-0;PPC;

2003-11-18 08:32  gb

	* compiler/PPC/ppc-lap.lisp: PPC lap macros hash table in backend

2003-11-18 03:10  gb

	* compiler/backend.lisp, compiler/nx.lisp, compiler/vinsn.lisp,
	compiler/PPC/ppc-arch.lisp, compiler/PPC/ppc-asm.lisp,
	compiler/PPC/ppc-backend.lisp, compiler/PPC/ppc-disassemble.lisp,
	compiler/PPC/ppc-lap.lisp, compiler/PPC/PPC32/ppc32-arch.lisp,
	level-0/PPC/ppc-array.lisp, level-0/PPC/ppc-bignum.lisp,
	level-0/PPC/ppc-pred.lisp, level-0/PPC/ppc-symbol.lisp,
	level-1/l1-boot-2.lisp, level-1/runtime.lisp, lib/compile-ccl.lisp,
	lib/nfcomp.lisp, lib/number-macros.lisp, lib/systems.lisp: ppc-arch
	-> ppc32-arch, lap-macros slot in backend

2003-11-18 02:15  gb

	* compiler/PPC/PPC32/ppc32-arch.lisp: rename of ppc-arch.lisp

2003-11-18 01:25  gb

	* compiler/: arch.lisp, PPC/ppc-arch.lisp, PPC/ppc-asm.lisp: missed
	a few DEFENUM stragglers

2003-11-18 00:51  gb

	* compiler/arch.lisp, compiler/vinsn.lisp, level-0/l0-bignum.lisp,
	level-1/l1-clos.lisp, level-1/l1-typesys.lisp,
	lib/foreign-types.lisp, lib/macros.lisp, lib/number-macros.lisp:
	move ONCE-ONLY, COLLECT. ITERATE to CCL package

2003-11-18 00:51  gb

	* level-1/version.lisp: bump version

2003-11-17 23:59  gb

	* compiler/nx0.lisp, compiler/nx1.lisp, compiler/optimizers.lisp,
	compiler/vinsn.lisp, compiler/vreg.lisp, compiler/PPC/ppc-asm.lisp,
	compiler/PPC/ppc-backend.lisp, compiler/PPC/ppc-disassemble.lisp,
	compiler/PPC/ppc-lap.lisp, compiler/PPC/ppc-lapmacros.lisp,
	compiler/PPC/ppc-vinsns.lisp, compiler/PPC/ppc2.lisp,
	level-0/l0-aprims.lisp, level-0/l0-array.lisp,
	level-0/l0-bignum.lisp, level-0/l0-cfm-support.lisp,
	level-0/l0-def.lisp, level-0/l0-float.lisp, level-0/l0-hash.lisp,
	level-0/l0-init.lisp, level-0/l0-int.lisp, level-0/l0-io.lisp,
	level-0/l0-misc.lisp, level-0/l0-numbers.lisp,
	level-0/l0-pred.lisp, level-0/l0-symbol.lisp,
	level-0/l0-utils.lisp, level-0/nfasload.lisp,
	level-0/PPC/ppc-array.lisp, level-0/PPC/ppc-bignum.lisp,
	level-0/PPC/ppc-debug.lisp, level-0/PPC/ppc-def.lisp,
	level-0/PPC/ppc-float.lisp, level-0/PPC/ppc-hash.lisp,
	level-0/PPC/ppc-io.lisp, level-0/PPC/ppc-misc.lisp,
	level-0/PPC/ppc-numbers.lisp, level-0/PPC/ppc-pred.lisp,
	level-0/PPC/ppc-symbol.lisp, level-0/PPC/ppc-utils.lisp,
	level-1/l1-aprims.lisp, level-1/l1-boot-1.lisp,
	level-1/l1-boot-2.lisp, level-1/l1-clos-boot.lisp,
	level-1/l1-clos.lisp, level-1/l1-dcode.lisp,
	level-1/l1-events.lisp, level-1/l1-io.lisp,
	level-1/l1-lisp-threads.lisp, level-1/l1-numbers.lisp,
	level-1/l1-processes.lisp, level-1/l1-readloop.lisp,
	level-1/l1-sockets.lisp, level-1/l1-streams.lisp,
	level-1/l1-typesys.lisp, level-1/l1-utils.lisp,
	level-1/linux-files.lisp, level-1/ppc-callback-support.lisp,
	level-1/ppc-error-signal.lisp, level-1/ppc-threads-utils.lisp,
	level-1/ppc-trap-support.lisp, level-1/sysutils.lisp,
	lib/arrays-fry.lisp, lib/backtrace-lds.lisp, lib/backtrace.lisp,
	lib/defstruct-lds.lisp, lib/defstruct.lisp, lib/describe.lisp,
	lib/eval.lisp, lib/foreign-types.lisp, lib/macros.lisp,
	lib/nfcomp.lisp, lib/number-case-macro.lisp,
	lib/number-macros.lisp, lib/numbers.lisp, lib/ppc-metering.lisp,
	lib/ppcenv.lisp, lib/prepare-mcl-environment.lisp,
	library/macptr-termination.lisp, xdump/hashenv.lisp,
	xdump/xfasload.lisp, xdump/xppcfasload.lisp: rename arch:: ppc::
	refs to ppc32::, for now

2003-11-17 23:52  gb

	* compiler/: arch.lisp, PPC/ppc-arch.lisp: start big package rename
	scheme

2003-11-17 20:52  gb

	* lib/proxy-events.lisp: hasn't been used in a long time ...

2003-11-13 02:19  gb

	* compiler/PPC/ppc2.lisp: PPC2-LOCAL-GO: need to clean up the
	vstack regardless of XFER token.

2003-11-09 18:15  gb

	* compiler/PPC/ppc-asm.lisp: fix handling of immediate operands in
	vector instructions

2003-11-08 12:45  gb

	* lib/dumplisp.lisp: Clear *INTERACTIVE-ABORT-PROCESS* in
	KILL-LISP-POINTERS.

2003-11-08 12:44  gb

	* level-1/l1-events.lisp: Don't try to interrupt
	*INTERACTIVE-ABORT-PROCESS* if it's null.

2003-11-08 12:39  gb

	* level-1/version.lisp: Bump the version.

2003-11-06 01:57  gb

	* lisp-kernel/lisp-exceptions.c: Use symbolic constants in a few
	places.  Check for recent CREATE_LISP_FRAME_INSTRUCTION before
	pc_luser-ing through stack frame initialization, since it may be
	re-initialization.

2003-11-06 01:56  gb

	* lisp-kernel/lisp-exceptions.h: Define a few opcodes, and define
	CREATE_LISP_FRAME_INSTRUCTION.

2003-11-04 12:04  gb

	* level-1/: l1-clos-boot.lisp, l1-clos.lisp: More structure-class
	accessor stuff.

2003-11-04 12:04  gb

	* level-1/version.lisp: Guess ...

2003-11-04 10:15  gb

	* level-1/l1-clos.lisp: Some more work to make STRUCTURE-CLASS have
	real slot definitions.

2003-11-04 10:15  gb

	* level-1/l1-clos-boot.lisp: Define a MAKE-INSTANCES-OBSOLETE
	method for STRUCTURE-CLASS.  Next step: make it do something, like
	warning ...

2003-11-04 10:13  gb

	* level-1/l1-io.lisp: PRINT-OBJECT method for SLOT-DESCRIPTOR,
	whether standard or not.

2003-10-29 17:47  gb

	* level-1/l1-clos.lisp: Fix initialization of early
	effective-slotds.  Start to integrate STRUCTURE-CLASS a bit better.

2003-10-29 16:18  gb

	* lib/: defstruct-lds.lisp, defstruct-macros.lisp, defstruct.lisp:
	Distinguish between inherited structure slots and direct ones.

2003-10-29 16:16  gb

	* level-1/: l1-clos-boot.lisp, l1-clos.lisp: Introduce SLOTS-CLASS;
	make STD-CLASS and STRUCTURE-CLASS (for now) inherit from it.

2003-10-28 18:00  gb

	* hemlock/src/: files.lisp, line.lisp, linimage.lisp,
	rompsite.lisp: More changes/fixes: line-buffered-p stuff.

2003-10-28 17:59  gb

	* examples/compile-hemlock.lisp: new file

2003-10-27 16:48  gb

	* hemlock/src/: files.lisp, macros.lisp, morecoms.lisp,
	rompsite.lisp, window.lisp, winimage.lisp: Suppress some compiler
	warnings.

2003-10-27 16:47  gb

	* hemlock/src/decls.lisp: Declare some special variables.

2003-10-27 15:42  gb

	* hemlock/src/: bit-display.lisp, bit-screen.lisp, cursor.lisp,
	display.lisp, window.lisp, winimage.lisp: Use asterisks in (more)
	special variable names.

2003-10-27 15:28  gb

	* hemlock/src/: bit-screen.lisp, htext1.lisp, htext3.lisp,
	syntax.lisp: More #-clx stuff, fix typos.

2003-10-27 06:22  gb

	* lisp-kernel/gc.c: Fix botch in mark_tcr_tlb().

2003-10-27 06:21  gb

	* lisp-kernel/: Threads.h, lisp-exceptions.c, thread_manager.c:
	Handle tlb extension

2003-10-27 06:21  gb

	* lib/nfcomp.lisp, xdump/faslenv.lisp: Bump the fasl version.

2003-10-27 06:20  gb

	* level-0/l0-error.lisp: Handle XSYMNOBIND.

2003-10-27 04:24  gb

	* level-0/l0-symbol.lisp: Maintain (weak) inverse mapping from idx
	to svar.

2003-10-27 04:23  gb

	* level-1/l1-lisp-threads.lisp: nth-value-in-frame, etc: new
	binding scheme.

2003-10-27 04:18  gb

	* level-1/version.lisp: Bump.

2003-10-26 03:12  gb

	* lisp-kernel/gc.c: Fix typo.

2003-10-26 03:10  gb

	* lisp-kernel/spentry.s: Check for non-bindable symbols without
	trapping.

2003-10-26 03:09  gb

	* lisp-kernel/gc.c: Try to special-case
	NO_THREAD_LOCAL_BINDING_MARKER when walking tlb.

2003-10-26 03:08  gb

	* lisp-kernel/errors.s: XSYMNOBIND

2003-10-26 03:06  gb

	* lib/prepare-mcl-environment.lisp: Look for svar-idx in
	%RESET-OUTERMOST-BINDING.

2003-10-24 10:40  gb

	* lib/prepare-mcl-environment.lisp: (Hopefully) fix
	%RESET-OUTERMOST-BINDING.

2003-10-24 01:33  gb

	* lisp-kernel/spentry.s: Enable/fix shallow-binding stuff.

2003-10-24 01:33  gb

	* lisp-kernel/macros.s: trlle.

2003-10-24 01:32  gb

	* lisp-kernel/gc.c: GC tcr->tlb.

2003-10-24 01:31  gb

	* lisp-kernel/thread_manager.c: Make initial tlb a little bigger.

2003-10-24 01:29  gb

	* lib/db-io.lisp: #$-reader takes more care with constants.

2003-10-24 01:28  gb

	* level-1/l1-readloop.lisp: Cheap evaluator takes more care with
	constants.

2003-10-24 01:28  gb

	* compiler/nx0.lisp: Avoid consing SVARS unnecessarly when
	transforming symbols.

2003-10-23 15:46  gb

	* level-1/l1-utils.lisp: UNDEFINE-CONSTANT.

2003-10-23 15:46  gb

	* level-0/PPC/ppc-symbol.lisp: Low-level symbol/svar accessors.

2003-10-23 15:45  gb

	* level-0/nfasload.lisp: KEYWORD interning sets global value.

2003-10-23 15:45  gb

	* level-0/l0-symbol.lisp: Need an SVAR for symbol-value in general;
	global versions for when we don't.

2003-10-23 15:43  gb

	* compiler/subprims.lisp: Use UNDEFINE-CONSTANT vice MAKUNBOUND

2003-10-23 13:52  gb

	* level-0/l0-symbol.lisp, level-0/PPC/ppc-symbol.lisp,
	lib/backtrace-lds.lisp: New binding stuff.

2003-10-23 13:51  gb

	* compiler/subprims.lisp: Rename old binding subprims.

2003-10-23 13:51  gb

	* compiler/arch.lisp: SVAR-related tcr fields.

2003-10-23 07:37  gb

	* compiler/PPC/: ppc-vinsns.lisp, ppc2.lisp: backend SVAR support

2003-10-23 06:59  gb

	* xdump/xfasload.lisp: SVAR support.

2003-10-23 06:57  gb

	* level-1/sysutils.lisp: More SVAR type stuff.

2003-10-23 06:57  gb

	* level-1/l1-io.lisp: PRINT-OBJECT for svars.

2003-10-23 06:57  gb

	* level-1/l1-clos-boot.lisp: SVAR class.

2003-10-23 06:57  gb

	* level-0/nfasload.lisp: Special-case SVARs in fasl-gvect.

2003-10-23 06:56  gb

	* level-0/l0-symbol.lisp: SVAR binding stuff.

2003-10-23 06:56  gb

	* level-0/l0-pred.lisp: SVAR type support.

2003-10-23 03:51  gb

	* lisp-kernel/: constants.h, constants.s, macros.s, spentry.s,
	spjump.s, thread_manager.c: New svar stuff.  (will need GC
	changes.)

2003-10-23 03:47  gb

	* compiler/nx1.lisp: svar progv support.

2003-10-23 03:47  gb

	* compiler/arch.lisp: svar tag, struct.

2003-10-23 03:47  gb

	* compiler/subprims.lisp: New subprims for svar binding scheme.

2003-10-21 18:09  gb

	* darwin-headers/: carbon/.cvsignore, carbon/C/populate.sh,
	cocoa/.cvsignore, cocoa/C/populate.sh, gl/.cvsignore,
	gl/C/populate.sh, libc/.cvsignore, libc/C/populate.sh: recover
	darwin-headers sources

2003-10-21 18:07  gb

	* headers/: gl/.cvsignore, gl/C/populate.sh, gnome/.cvsignore,
	gnome/C/populate.sh, gtk/.cvsignore, gtk/C/populate.sh,
	libc/.cvsignore, libc/C/populate.sh: recover headers sources

2003-10-21 18:00  gb

	* lisp-kernel/: gc.h, lisp-exceptions.c: Handle new gc-traps for
	egc state changes.

2003-10-21 18:00  gb

	* level-1/l1-dcode.lisp: CLASS-SLOT bugs in dcode/reader-trap.

2003-10-21 17:59  gb

	* level-1/l1-aprims.lisp: Serialize EGC state changes.

2003-10-19 02:57  gb

	* .cvsignore, LGPL, LICENSE, binppc/.cvsignore, compiler/arch.lisp,
	compiler/backend.lisp, compiler/dll-node.lisp,
	compiler/lambda-list.lisp, compiler/nx-base-app.lisp,
	compiler/nx-basic.lisp, compiler/nx.lisp, compiler/nx0.lisp,
	compiler/nx1.lisp, compiler/nxenv.lisp, compiler/optimizers.lisp,
	compiler/reg.lisp, compiler/risc-lap.lisp, compiler/subprims.lisp,
	compiler/vinsn.lisp, compiler/vreg.lisp,
	compiler/PPC/ppc-arch.lisp, compiler/PPC/ppc-asm.lisp,
	compiler/PPC/ppc-backend.lisp, compiler/PPC/ppc-disassemble.lisp,
	compiler/PPC/ppc-lap.lisp, compiler/PPC/ppc-lapmacros.lisp,
	compiler/PPC/ppc-vinsns.lisp, compiler/PPC/ppc2.lisp,
	l1-pfsls/.cvsignore, level-0/l0-aprims.lisp, level-0/l0-array.lisp,
	level-0/l0-cfm-support.lisp, level-0/l0-clos.lisp,
	level-0/l0-complex.lisp, level-0/l0-dcode.lisp,
	level-0/l0-debug.lisp, level-0/l0-def.lisp, level-0/l0-error.lisp,
	level-0/l0-float.lisp, level-0/l0-hash.lisp, level-0/l0-init.lisp,
	level-0/l0-int.lisp, level-0/l0-io.lisp, level-0/l0-misc.lisp,
	level-0/l0-pred.lisp, level-0/l0-symbol.lisp,
	level-0/l0-utils.lisp, level-0/.cvsignore, level-0/l0-bignum.lisp,
	level-0/l0-numbers.lisp, level-0/nfasload.lisp,
	level-0/PPC/.cvsignore, level-0/PPC/ppc-array.lisp,
	level-0/PPC/ppc-bignum.lisp, level-0/PPC/ppc-debug.lisp,
	level-0/PPC/ppc-def.lisp, level-0/PPC/ppc-float.lisp,
	level-0/PPC/ppc-hash.lisp, level-0/PPC/ppc-io.lisp,
	level-0/PPC/ppc-misc.lisp, level-0/PPC/ppc-numbers.lisp,
	level-0/PPC/ppc-pred.lisp, level-0/PPC/ppc-symbol.lisp,
	level-0/PPC/ppc-utils.lisp, level-1/l1-aprims.lisp,
	level-1/l1-boot-1.lisp, level-1/l1-boot-3.lisp,
	level-1/l1-boot-lds.lisp, level-1/l1-callbacks.lisp,
	level-1/l1-cl-package.lisp, level-1/l1-clos.lisp,
	level-1/l1-dcode.lisp, level-1/l1-error-signal.lisp,
	level-1/l1-error-system.lisp, level-1/l1-events.lisp,
	level-1/l1-files.lisp, level-1/l1-format.lisp,
	level-1/l1-init.lisp, level-1/l1-io.lisp,
	level-1/l1-lisp-threads.lisp, level-1/l1-numbers.lisp,
	level-1/l1-processes.lisp, level-1/l1-reader.lisp,
	level-1/l1-readloop-lds.lisp, level-1/l1-readloop.lisp,
	level-1/l1-sockets.lisp, level-1/l1-sort.lisp,
	level-1/l1-streams.lisp, level-1/l1-symhash.lisp,
	level-1/linux-files.lisp, level-1/l1-boot-2.lisp,
	level-1/l1-clos-boot.lisp, level-1/l1-pathnames.lisp,
	level-1/l1-sysio.lisp, level-1/l1-typesys.lisp,
	level-1/l1-utils.lisp, level-1/level-1.lisp,
	level-1/ppc-callback-support.lisp, level-1/ppc-error-signal.lisp,
	level-1/ppc-threads-utils.lisp, level-1/ppc-trap-support.lisp,
	level-1/runtime.lisp, level-1/solaris-files.lisp,
	level-1/sysutils.lisp, level-1/version.lisp, lib/apropos.lisp,
	lib/arglist.lisp, lib/arrays-fry.lisp, lib/backquote.lisp,
	lib/backtrace-lds.lisp, lib/backtrace.lisp, lib/case-error.lisp,
	lib/ccl-export-syms.lisp, lib/chars.lisp, lib/compile-ccl.lisp,
	lib/defstruct-lds.lisp, lib/defstruct-macros.lisp,
	lib/defstruct.lisp, lib/describe.lisp, lib/distrib-inits.lisp,
	lib/dumplisp.lisp, lib/edit-callers.lisp, lib/encapsulate.lisp,
	lib/db-io.lisp, lib/eval.lisp, lib/foreign-types.lisp,
	lib/format.lisp, lib/hash.lisp, lib/level-2.lisp, lib/lists.lisp,
	lib/macros.lisp, lib/mcl-compat.lisp, lib/method-combination.lisp,
	lib/misc.lisp, lib/nfcomp.lisp, lib/number-case-macro.lisp,
	lib/number-macros.lisp, lib/numbers.lisp, lib/pathnames.lisp,
	lib/ppc-init-ccl.lisp, lib/ppc-metering.lisp, lib/ppcenv.lisp,
	lib/pprint.lisp, lib/prepare-mcl-environment.lisp,
	lib/print-db.lisp, lib/proxy-events.lisp, lib/read.lisp,
	lib/sequences.lisp, lib/setf-runtime.lisp, lib/setf.lisp,
	lib/sort.lisp, lib/source-files.lisp, lib/sparcenv.lisp,
	lib/step.lisp, lib/streams.lisp, lib/systems.lisp, lib/time.lisp,
	library/darwin-syscalls.lisp, library/extended-loop.lisp,
	library/lisp-package.lisp, examples/README-OPENMCL-EXAMPLES,
	examples/apple-objc.lisp, examples/cocoa-listener.lisp,
	examples/cocoa-window.lisp, examples/cocoa.lisp,
	examples/finger.lisp, examples/gtk-clock.lisp,
	examples/gtk-minesweeper.lisp, examples/gtk-step.lisp,
	examples/opengl-ffi.lisp, library/.cvsignore,
	library/linux-syscalls.lisp, library/lispequ.lisp,
	library/loop.lisp, library/mac-file-io.lisp,
	library/macptr-termination.lisp, library/mit-loop.lisp,
	library/openmcl-gtk-support.lisp, library/parse-ffi.lisp,
	library/pascal-strings.lisp, library/pty.lisp,
	library/solaris-records.lisp, library/syscall.lisp,
	lisp-kernel/Threads.h, lisp-kernel/area.h, lisp-kernel/asmutils.s,
	lisp-kernel/bits.c, lisp-kernel/bits.h, lisp-kernel/constants.h,
	lisp-kernel/constants.s, lisp-kernel/errors.s, lisp-kernel/gc.c,
	lisp-kernel/gc.h, lisp-kernel/image.c, lisp-kernel/image.h,
	lisp-kernel/imports.s, lisp-kernel/kernel-globals.h,
	lisp-kernel/lisp-debug.c, lisp-kernel/lisp-errors.h,
	lisp-kernel/lisp-exceptions.c, lisp-kernel/lisp-exceptions.h,
	lisp-kernel/lisp.h, lisp-kernel/lisp.s, lisp-kernel/lisp_globals.h,
	lisp-kernel/lispdcmd.c, lisp-kernel/lispdcmd.h,
	lisp-kernel/lisptypes.h, lisp-kernel/m4macros.m4,
	lisp-kernel/macros.h, lisp-kernel/macros.s,
	lisp-kernel/memprotect.h, lisp-kernel/pad.s, lisp-kernel/plbt.c,
	lisp-kernel/plprint.c, lisp-kernel/plsym.c,
	lisp-kernel/pmcl-kernel.c, lisp-kernel/ppc_print.c,
	lisp-kernel/sampler.c, lisp-kernel/sigcontext.h,
	lisp-kernel/spentry.s, lisp-kernel/spjump.s,
	lisp-kernel/subprims.s, lisp-kernel/thread_manager.c,
	lisp-kernel/uuo.s, lisp-kernel/darwin/.gdb_history,
	lisp-kernel/darwin/.gdbinit, lisp-kernel/darwin/Makefile,
	lisp-kernel/darwin/retain, lisp-kernel/linux/.gdbinit,
	lisp-kernel/linux/Makefile, lisp-kernel/linux/elf32ppclinux.x,
	scripts/openmcl, xdump/.cvsignore, xdump/faslenv.lisp,
	xdump/hashenv.lisp, xdump/heap-image.lisp, xdump/xfasload.lisp,
	xdump/xppcfasload.lisp, xdump/xsparcfasload.lisp, xdump/xsym.lisp,
	OpenMCL.app/Contents/Info.plist, OpenMCL.app/Contents/PkgInfo,
	OpenMCL.app/Contents/Resources/OpenMCLKeyBindings.dict,
	OpenMCL.app/Contents/Resources/openmcl-icon.icns,
	OpenMCL.app/Contents/Resources/English.lproj/Credits.rtf,
	OpenMCL.app/Contents/Resources/English.lproj/InfoPlist.strings,
	OpenMCL.app/Contents/Resources/English.lproj/MainMenu.nib/classes.n
	ib,
	OpenMCL.app/Contents/Resources/English.lproj/MainMenu.nib/info.nib,
	OpenMCL.app/Contents/Resources/English.lproj/MainMenu.nib/objects.n
	ib,
	OpenMCL.app/Contents/Resources/English.lproj/MainMenu~.nib/classes.
	nib,
	OpenMCL.app/Contents/Resources/English.lproj/MainMenu~.nib/info.nib
	,
	OpenMCL.app/Contents/Resources/English.lproj/MainMenu~.nib/objects.
	nib,
	OpenMCL.app/Contents/Resources/English.lproj/OpenmclInspector.nib/c
	lasses.nib,
	OpenMCL.app/Contents/Resources/English.lproj/OpenmclInspector.nib/i
	nfo.nib,
	OpenMCL.app/Contents/Resources/English.lproj/OpenmclInspector.nib/o
	bjects.nib,
	OpenMCL.app/Contents/Resources/English.lproj/lispeditor.nib/classes
	.nib,
	OpenMCL.app/Contents/Resources/English.lproj/lispeditor.nib/info.ni
	b,
	OpenMCL.app/Contents/Resources/English.lproj/lispeditor.nib/objects
	.nib,
	OpenMCL.app/Contents/Resources/English.lproj/lispeditor~.nib/classe
	s.nib,
	OpenMCL.app/Contents/Resources/English.lproj/lispeditor~.nib/info.n
	ib,
	OpenMCL.app/Contents/Resources/English.lproj/lispeditor~.nib/object
	s.nib, OpenMCL.app/Contents/Resources/Help/cocoa-notes.html,
	OpenMCL.app/Contents/Resources/Help/index.html,
	bindarwin/.cvsignore, doc/HTML/.cvsignore,
	examples/CocoaBridgeDoc.txt, examples/bridge.lisp,
	examples/cocoa-application.lisp, examples/cocoa-editor.lisp,
	examples/cocoa-inspector.lisp, examples/cocoa-textfind.lisp,
	examples/gnu-objc.lisp, examples/hemlock-textstorage.lisp,
	examples/jni.lisp, examples/name-translation.lisp,
	examples/objc-support.lisp, examples/process-objc-modules.lisp,
	examples/tiny.lisp, examples/webkit.lisp, hemlock/INSTALL,
	hemlock/README, hemlock/TODO, hemlock/hemlock.system,
	hemlock/hemlock11.cursor, hemlock/hemlock11.mask,
	hemlock/bin/openmcl/.cvsignore, hemlock/doc/cim/aux-sys.mss,
	hemlock/doc/cim/cim.mss, hemlock/doc/misc/compilation.order,
	hemlock/doc/misc/hemlock.log, hemlock/doc/misc/hemlock.upd,
	hemlock/doc/misc/notes.txt, hemlock/doc/misc/perq-hemlock.log,
	hemlock/doc/misc/things-to-do.txt,
	hemlock/doc/scribe-converter/NOTES,
	hemlock/doc/scribe-converter/README, hemlock/doc/user/commands.mss,
	hemlock/doc/user/intro.mss, hemlock/doc/user/lisp.mss,
	hemlock/doc/user/mail.mss, hemlock/doc/user/netnews.mss,
	hemlock/doc/user/special-modes.mss, hemlock/doc/user/user.mss,
	hemlock/src/abbrev.lisp, hemlock/src/auto-save.lisp,
	hemlock/src/bindings-gb.lisp, l1-dfsls/.cvsignore,
	hemlock/src/bindings.lisp, hemlock/src/bit-display.lisp,
	hemlock/src/bit-screen.lisp, hemlock/src/bufed.lisp,
	hemlock/src/buffer.lisp, hemlock/src/charmacs.lisp,
	hemlock/src/command.lisp, hemlock/src/comments.lisp,
	hemlock/src/completion.lisp, hemlock/src/cursor.lisp,
	hemlock/src/debug.lisp, hemlock/src/decls.lisp,
	hemlock/src/defsyn.lisp, hemlock/src/dired.lisp,
	hemlock/src/diredcoms.lisp, hemlock/src/display.lisp,
	hemlock/src/doccoms.lisp, hemlock/src/dylan.lisp,
	hemlock/src/echo.lisp, hemlock/src/echocoms.lisp,
	hemlock/src/edit-defs.lisp, hemlock/src/eval-server.lisp,
	hemlock/src/filecoms.lisp, hemlock/src/files.lisp,
	hemlock/src/fill.lisp, hemlock/src/font.lisp,
	hemlock/src/group.lisp, hemlock/src/hemlock-ext.lisp,
	hemlock/src/highlight.lisp, hemlock/src/htext1.lisp,
	hemlock/src/htext2.lisp, hemlock/src/htext3.lisp,
	hemlock/src/htext4.lisp, hemlock/src/hunk-draw.lisp,
	hemlock/src/icom.lisp, hemlock/src/indent.lisp,
	hemlock/src/input.lisp, hemlock/src/interp.lisp,
	hemlock/src/kbdmac.lisp, hemlock/src/key-event.lisp,
	hemlock/src/keysym-defs.lisp, hemlock/src/killcoms.lisp,
	hemlock/src/line.lisp, hemlock/src/linimage.lisp,
	hemlock/src/lisp-lib.lisp, hemlock/src/lispbuf.lisp,
	hemlock/src/lispdep.lisp, hemlock/src/lispeval.lisp,
	hemlock/src/lispmode.lisp, hemlock/src/macros.lisp,
	hemlock/src/main.lisp, hemlock/src/mh.lisp, hemlock/maint/publish,
	hemlock/resources/XKeysymDB, hemlock/resources/mh-scan,
	hemlock/src/morecoms.lisp, hemlock/src/netnews.lisp,
	hemlock/src/overwrite.lisp, hemlock/src/package.lisp,
	hemlock/src/pascal.lisp, hemlock/src/pop-up-stream.lisp,
	hemlock/src/rcs.lisp, hemlock/src/register.lisp,
	hemlock/src/ring.lisp, hemlock/src/rompsite.lisp,
	hemlock/src/screen.lisp, hemlock/src/scribe.lisp,
	hemlock/src/search1.lisp, hemlock/src/search2.lisp,
	hemlock/src/searchcoms.lisp, hemlock/src/shell.lisp,
	hemlock/src/spell-aug.lisp, hemlock/src/spell-corr.lisp,
	hemlock/src/spell-rt.lisp, hemlock/src/spellcoms.lisp,
	hemlock/src/srccom.lisp, hemlock/src/streams.lisp,
	hemlock/src/struct.lisp, hemlock/src/syntax.lisp,
	hemlock/src/table.lisp, hemlock/src/text.lisp,
	hemlock/src/ts-buf.lisp, hemlock/src/ts-stream.lisp,
	hemlock/src/undo.lisp, hemlock/src/unixcoms.lisp,
	hemlock/src/vars.lisp, hemlock/src/window.lisp,
	hemlock/src/winimage.lisp, hemlock/src/xcoms.lisp,
	hemlock/src/elisp/README, hemlock/src/elisp/base.lisp,
	hemlock/src/elisp/cmucl-hemlock-glue.lisp,
	hemlock/src/elisp/codewalker.lisp, hemlock/src/elisp/compile.lisp,
	hemlock/src/elisp/hemlock-shims.lisp,
	hemlock/src/elisp/implementation-needed,
	hemlock/src/elisp/internals.lisp, hemlock/src/elisp/loadup.lisp,
	hemlock/src/elisp/packages.lisp, hemlock/src/elisp/read-table.lisp,
	hemlock/src/spell/README, hemlock/src/spell/build.lisp,
	hemlock/src/spell/classes.lisp, hemlock/src/spell/constants.lisp,
	hemlock/src/spell/correlate.lisp, hemlock/src/spell/flags.lisp,
	hemlock/src/spell/hashing.lisp, hemlock/src/spell/io.lisp,
	hemlock/src/spell/package.lisp, hemlock/src/spell/spell-aug.lisp,
	hemlock/src/spell/spell-dictionary.text,
	hemlock/src/spell/spell.asd, hemlock/src/spell/spellcoms.lisp,
	hemlock/src/tty/termcap.lisp, hemlock/src/tty/tty-disp-rt.lisp,
	hemlock/src/tty/tty-display.lisp, hemlock/src/tty/tty-screen.lisp,
	hemlock/src/wire/Notes, hemlock/src/wire/package.lisp,
	hemlock/src/wire/port.lisp, hemlock/src/wire/remote.lisp,
	hemlock/src/wire/wire.lisp,
	hemlock/resources/spell-dictionary.text,
	hemlock/unused/bit-stream.lisp, hemlock/unused/clx-ext.lisp,
	hemlock/unused/ed-integrity.lisp, hemlock/unused/gosmacs.lisp,
	hemlock/unused/hacks.lisp, hemlock/unused/hemcom.lisp,
	hemlock/unused/hi-integrity.lisp, hemlock/unused/keytran.lisp,
	hemlock/unused/keytrandefs.lisp, hemlock/unused/spell-build.lisp,
	hemlock/unused/struct-ed.lisp, hemlock/unused/tty-stream.lisp,
	hemlock/website/index.html.in: Initial revision

2003-10-19 02:57  gb

	* .cvsignore, LGPL, LICENSE, binppc/.cvsignore, compiler/arch.lisp,
	compiler/backend.lisp, compiler/dll-node.lisp,
	compiler/lambda-list.lisp, compiler/nx-base-app.lisp,
	compiler/nx-basic.lisp, compiler/nx.lisp, compiler/nx0.lisp,
	compiler/nx1.lisp, compiler/nxenv.lisp, compiler/optimizers.lisp,
	compiler/reg.lisp, compiler/risc-lap.lisp, compiler/subprims.lisp,
	compiler/vinsn.lisp, compiler/vreg.lisp,
	compiler/PPC/ppc-arch.lisp, compiler/PPC/ppc-asm.lisp,
	compiler/PPC/ppc-backend.lisp, compiler/PPC/ppc-disassemble.lisp,
	compiler/PPC/ppc-lap.lisp, compiler/PPC/ppc-lapmacros.lisp,
	compiler/PPC/ppc-vinsns.lisp, compiler/PPC/ppc2.lisp,
	l1-pfsls/.cvsignore, level-0/l0-aprims.lisp, level-0/l0-array.lisp,
	level-0/l0-cfm-support.lisp, level-0/l0-clos.lisp,
	level-0/l0-complex.lisp, level-0/l0-dcode.lisp,
	level-0/l0-debug.lisp, level-0/l0-def.lisp, level-0/l0-error.lisp,
	level-0/l0-float.lisp, level-0/l0-hash.lisp, level-0/l0-init.lisp,
	level-0/l0-int.lisp, level-0/l0-io.lisp, level-0/l0-misc.lisp,
	level-0/l0-pred.lisp, level-0/l0-symbol.lisp,
	level-0/l0-utils.lisp, level-0/.cvsignore, level-0/l0-bignum.lisp,
	level-0/l0-numbers.lisp, level-0/nfasload.lisp,
	level-0/PPC/.cvsignore, level-0/PPC/ppc-array.lisp,
	level-0/PPC/ppc-bignum.lisp, level-0/PPC/ppc-debug.lisp,
	level-0/PPC/ppc-def.lisp, level-0/PPC/ppc-float.lisp,
	level-0/PPC/ppc-hash.lisp, level-0/PPC/ppc-io.lisp,
	level-0/PPC/ppc-misc.lisp, level-0/PPC/ppc-numbers.lisp,
	level-0/PPC/ppc-pred.lisp, level-0/PPC/ppc-symbol.lisp,
	level-0/PPC/ppc-utils.lisp, level-1/l1-aprims.lisp,
	level-1/l1-boot-1.lisp, level-1/l1-boot-3.lisp,
	level-1/l1-boot-lds.lisp, level-1/l1-callbacks.lisp,
	level-1/l1-cl-package.lisp, level-1/l1-clos.lisp,
	level-1/l1-dcode.lisp, level-1/l1-error-signal.lisp,
	level-1/l1-error-system.lisp, level-1/l1-events.lisp,
	level-1/l1-files.lisp, level-1/l1-format.lisp,
	level-1/l1-init.lisp, level-1/l1-io.lisp,
	level-1/l1-lisp-threads.lisp, level-1/l1-numbers.lisp,
	level-1/l1-processes.lisp, level-1/l1-reader.lisp,
	level-1/l1-readloop-lds.lisp, level-1/l1-readloop.lisp,
	level-1/l1-sockets.lisp, level-1/l1-sort.lisp,
	level-1/l1-streams.lisp, level-1/l1-symhash.lisp,
	level-1/linux-files.lisp, level-1/l1-boot-2.lisp,
	level-1/l1-clos-boot.lisp, level-1/l1-pathnames.lisp,
	level-1/l1-sysio.lisp, level-1/l1-typesys.lisp,
	level-1/l1-utils.lisp, level-1/level-1.lisp,
	level-1/ppc-callback-support.lisp, level-1/ppc-error-signal.lisp,
	level-1/ppc-threads-utils.lisp, level-1/ppc-trap-support.lisp,
	level-1/runtime.lisp, level-1/solaris-files.lisp,
	level-1/sysutils.lisp, level-1/version.lisp, lib/apropos.lisp,
	lib/arglist.lisp, lib/arrays-fry.lisp, lib/backquote.lisp,
	lib/backtrace-lds.lisp, lib/backtrace.lisp, lib/case-error.lisp,
	lib/ccl-export-syms.lisp, lib/chars.lisp, lib/compile-ccl.lisp,
	lib/defstruct-lds.lisp, lib/defstruct-macros.lisp,
	lib/defstruct.lisp, lib/describe.lisp, lib/distrib-inits.lisp,
	lib/dumplisp.lisp, lib/edit-callers.lisp, lib/encapsulate.lisp,
	lib/db-io.lisp, lib/eval.lisp, lib/foreign-types.lisp,
	lib/format.lisp, lib/hash.lisp, lib/level-2.lisp, lib/lists.lisp,
	lib/macros.lisp, lib/mcl-compat.lisp, lib/method-combination.lisp,
	lib/misc.lisp, lib/nfcomp.lisp, lib/number-case-macro.lisp,
	lib/number-macros.lisp, lib/numbers.lisp, lib/pathnames.lisp,
	lib/ppc-init-ccl.lisp, lib/ppc-metering.lisp, lib/ppcenv.lisp,
	lib/pprint.lisp, lib/prepare-mcl-environment.lisp,
	lib/print-db.lisp, lib/proxy-events.lisp, lib/read.lisp,
	lib/sequences.lisp, lib/setf-runtime.lisp, lib/setf.lisp,
	lib/sort.lisp, lib/source-files.lisp, lib/sparcenv.lisp,
	lib/step.lisp, lib/streams.lisp, lib/systems.lisp, lib/time.lisp,
	library/darwin-syscalls.lisp, library/extended-loop.lisp,
	library/lisp-package.lisp, examples/README-OPENMCL-EXAMPLES,
	examples/apple-objc.lisp, examples/cocoa-listener.lisp,
	examples/cocoa-window.lisp, examples/cocoa.lisp,
	examples/finger.lisp, examples/gtk-clock.lisp,
	examples/gtk-minesweeper.lisp, examples/gtk-step.lisp,
	examples/opengl-ffi.lisp, library/.cvsignore,
	library/linux-syscalls.lisp, library/lispequ.lisp,
	library/loop.lisp, library/mac-file-io.lisp,
	library/macptr-termination.lisp, library/mit-loop.lisp,
	library/openmcl-gtk-support.lisp, library/parse-ffi.lisp,
	library/pascal-strings.lisp, library/pty.lisp,
	library/solaris-records.lisp, library/syscall.lisp,
	lisp-kernel/Threads.h, lisp-kernel/area.h, lisp-kernel/asmutils.s,
	lisp-kernel/bits.c, lisp-kernel/bits.h, lisp-kernel/constants.h,
	lisp-kernel/constants.s, lisp-kernel/errors.s, lisp-kernel/gc.c,
	lisp-kernel/gc.h, lisp-kernel/image.c, lisp-kernel/image.h,
	lisp-kernel/imports.s, lisp-kernel/kernel-globals.h,
	lisp-kernel/lisp-debug.c, lisp-kernel/lisp-errors.h,
	lisp-kernel/lisp-exceptions.c, lisp-kernel/lisp-exceptions.h,
	lisp-kernel/lisp.h, lisp-kernel/lisp.s, lisp-kernel/lisp_globals.h,
	lisp-kernel/lispdcmd.c, lisp-kernel/lispdcmd.h,
	lisp-kernel/lisptypes.h, lisp-kernel/m4macros.m4,
	lisp-kernel/macros.h, lisp-kernel/macros.s,
	lisp-kernel/memprotect.h, lisp-kernel/pad.s, lisp-kernel/plbt.c,
	lisp-kernel/plprint.c, lisp-kernel/plsym.c,
	lisp-kernel/pmcl-kernel.c, lisp-kernel/ppc_print.c,
	lisp-kernel/sampler.c, lisp-kernel/sigcontext.h,
	lisp-kernel/spentry.s, lisp-kernel/spjump.s,
	lisp-kernel/subprims.s, lisp-kernel/thread_manager.c,
	lisp-kernel/uuo.s, lisp-kernel/darwin/.gdb_history,
	lisp-kernel/darwin/.gdbinit, lisp-kernel/darwin/Makefile,
	lisp-kernel/darwin/retain, lisp-kernel/linux/.gdbinit,
	lisp-kernel/linux/Makefile, lisp-kernel/linux/elf32ppclinux.x,
	scripts/openmcl, xdump/.cvsignore, xdump/faslenv.lisp,
	xdump/hashenv.lisp, xdump/heap-image.lisp, xdump/xfasload.lisp,
	xdump/xppcfasload.lisp, xdump/xsparcfasload.lisp, xdump/xsym.lisp,
	OpenMCL.app/Contents/Info.plist, OpenMCL.app/Contents/PkgInfo,
	OpenMCL.app/Contents/Resources/OpenMCLKeyBindings.dict,
	OpenMCL.app/Contents/Resources/openmcl-icon.icns,
	OpenMCL.app/Contents/Resources/English.lproj/Credits.rtf,
	OpenMCL.app/Contents/Resources/English.lproj/InfoPlist.strings,
	OpenMCL.app/Contents/Resources/English.lproj/MainMenu.nib/classes.n
	ib,
	OpenMCL.app/Contents/Resources/English.lproj/MainMenu.nib/info.nib,
	OpenMCL.app/Contents/Resources/English.lproj/MainMenu.nib/objects.n
	ib,
	OpenMCL.app/Contents/Resources/English.lproj/MainMenu~.nib/classes.
	nib,
	OpenMCL.app/Contents/Resources/English.lproj/MainMenu~.nib/info.nib
	,
	OpenMCL.app/Contents/Resources/English.lproj/MainMenu~.nib/objects.
	nib,
	OpenMCL.app/Contents/Resources/English.lproj/OpenmclInspector.nib/c
	lasses.nib,
	OpenMCL.app/Contents/Resources/English.lproj/OpenmclInspector.nib/i
	nfo.nib,
	OpenMCL.app/Contents/Resources/English.lproj/OpenmclInspector.nib/o
	bjects.nib,
	OpenMCL.app/Contents/Resources/English.lproj/lispeditor.nib/classes
	.nib,
	OpenMCL.app/Contents/Resources/English.lproj/lispeditor.nib/info.ni
	b,
	OpenMCL.app/Contents/Resources/English.lproj/lispeditor.nib/objects
	.nib,
	OpenMCL.app/Contents/Resources/English.lproj/lispeditor~.nib/classe
	s.nib,
	OpenMCL.app/Contents/Resources/English.lproj/lispeditor~.nib/info.n
	ib,
	OpenMCL.app/Contents/Resources/English.lproj/lispeditor~.nib/object
	s.nib, OpenMCL.app/Contents/Resources/Help/cocoa-notes.html,
	OpenMCL.app/Contents/Resources/Help/index.html,
	bindarwin/.cvsignore, doc/HTML/.cvsignore,
	examples/CocoaBridgeDoc.txt, examples/bridge.lisp,
	examples/cocoa-application.lisp, examples/cocoa-editor.lisp,
	examples/cocoa-inspector.lisp, examples/cocoa-textfind.lisp,
	examples/gnu-objc.lisp, examples/hemlock-textstorage.lisp,
	examples/jni.lisp, examples/name-translation.lisp,
	examples/objc-support.lisp, examples/process-objc-modules.lisp,
	examples/tiny.lisp, examples/webkit.lisp, hemlock/INSTALL,
	hemlock/README, hemlock/TODO, hemlock/hemlock.system,
	hemlock/hemlock11.cursor, hemlock/hemlock11.mask,
	hemlock/bin/openmcl/.cvsignore, hemlock/doc/cim/aux-sys.mss,
	hemlock/doc/cim/cim.mss, hemlock/doc/misc/compilation.order,
	hemlock/doc/misc/hemlock.log, hemlock/doc/misc/hemlock.upd,
	hemlock/doc/misc/notes.txt, hemlock/doc/misc/perq-hemlock.log,
	hemlock/doc/misc/things-to-do.txt,
	hemlock/doc/scribe-converter/NOTES,
	hemlock/doc/scribe-converter/README, hemlock/doc/user/commands.mss,
	hemlock/doc/user/intro.mss, hemlock/doc/user/lisp.mss,
	hemlock/doc/user/mail.mss, hemlock/doc/user/netnews.mss,
	hemlock/doc/user/special-modes.mss, hemlock/doc/user/user.mss,
	hemlock/src/abbrev.lisp, hemlock/src/auto-save.lisp,
	hemlock/src/bindings-gb.lisp, l1-dfsls/.cvsignore,
	hemlock/src/bindings.lisp, hemlock/src/bit-display.lisp,
	hemlock/src/bit-screen.lisp, hemlock/src/bufed.lisp,
	hemlock/src/buffer.lisp, hemlock/src/charmacs.lisp,
	hemlock/src/command.lisp, hemlock/src/comments.lisp,
	hemlock/src/completion.lisp, hemlock/src/cursor.lisp,
	hemlock/src/debug.lisp, hemlock/src/decls.lisp,
	hemlock/src/defsyn.lisp, hemlock/src/dired.lisp,
	hemlock/src/diredcoms.lisp, hemlock/src/display.lisp,
	hemlock/src/doccoms.lisp, hemlock/src/dylan.lisp,
	hemlock/src/echo.lisp, hemlock/src/echocoms.lisp,
	hemlock/src/edit-defs.lisp, hemlock/src/eval-server.lisp,
	hemlock/src/filecoms.lisp, hemlock/src/files.lisp,
	hemlock/src/fill.lisp, hemlock/src/font.lisp,
	hemlock/src/group.lisp, hemlock/src/hemlock-ext.lisp,
	hemlock/src/highlight.lisp, hemlock/src/htext1.lisp,
	hemlock/src/htext2.lisp, hemlock/src/htext3.lisp,
	hemlock/src/htext4.lisp, hemlock/src/hunk-draw.lisp,
	hemlock/src/icom.lisp, hemlock/src/indent.lisp,
	hemlock/src/input.lisp, hemlock/src/interp.lisp,
	hemlock/src/kbdmac.lisp, hemlock/src/key-event.lisp,
	hemlock/src/keysym-defs.lisp, hemlock/src/killcoms.lisp,
	hemlock/src/line.lisp, hemlock/src/linimage.lisp,
	hemlock/src/lisp-lib.lisp, hemlock/src/lispbuf.lisp,
	hemlock/src/lispdep.lisp, hemlock/src/lispeval.lisp,
	hemlock/src/lispmode.lisp, hemlock/src/macros.lisp,
	hemlock/src/main.lisp, hemlock/src/mh.lisp, hemlock/maint/publish,
	hemlock/resources/XKeysymDB, hemlock/resources/mh-scan,
	hemlock/src/morecoms.lisp, hemlock/src/netnews.lisp,
	hemlock/src/overwrite.lisp, hemlock/src/package.lisp,
	hemlock/src/pascal.lisp, hemlock/src/pop-up-stream.lisp,
	hemlock/src/rcs.lisp, hemlock/src/register.lisp,
	hemlock/src/ring.lisp, hemlock/src/rompsite.lisp,
	hemlock/src/screen.lisp, hemlock/src/scribe.lisp,
	hemlock/src/search1.lisp, hemlock/src/search2.lisp,
	hemlock/src/searchcoms.lisp, hemlock/src/shell.lisp,
	hemlock/src/spell-aug.lisp, hemlock/src/spell-corr.lisp,
	hemlock/src/spell-rt.lisp, hemlock/src/spellcoms.lisp,
	hemlock/src/srccom.lisp, hemlock/src/streams.lisp,
	hemlock/src/struct.lisp, hemlock/src/syntax.lisp,
	hemlock/src/table.lisp, hemlock/src/text.lisp,
	hemlock/src/ts-buf.lisp, hemlock/src/ts-stream.lisp,
	hemlock/src/undo.lisp, hemlock/src/unixcoms.lisp,
	hemlock/src/vars.lisp, hemlock/src/window.lisp,
	hemlock/src/winimage.lisp, hemlock/src/xcoms.lisp,
	hemlock/src/elisp/README, hemlock/src/elisp/base.lisp,
	hemlock/src/elisp/cmucl-hemlock-glue.lisp,
	hemlock/src/elisp/codewalker.lisp, hemlock/src/elisp/compile.lisp,
	hemlock/src/elisp/hemlock-shims.lisp,
	hemlock/src/elisp/implementation-needed,
	hemlock/src/elisp/internals.lisp, hemlock/src/elisp/loadup.lisp,
	hemlock/src/elisp/packages.lisp, hemlock/src/elisp/read-table.lisp,
	hemlock/src/spell/README, hemlock/src/spell/build.lisp,
	hemlock/src/spell/classes.lisp, hemlock/src/spell/constants.lisp,
	hemlock/src/spell/correlate.lisp, hemlock/src/spell/flags.lisp,
	hemlock/src/spell/hashing.lisp, hemlock/src/spell/io.lisp,
	hemlock/src/spell/package.lisp, hemlock/src/spell/spell-aug.lisp,
	hemlock/src/spell/spell-dictionary.text,
	hemlock/src/spell/spell.asd, hemlock/src/spell/spellcoms.lisp,
	hemlock/src/tty/termcap.lisp, hemlock/src/tty/tty-disp-rt.lisp,
	hemlock/src/tty/tty-display.lisp, hemlock/src/tty/tty-screen.lisp,
	hemlock/src/wire/Notes, hemlock/src/wire/package.lisp,
	hemlock/src/wire/port.lisp, hemlock/src/wire/remote.lisp,
	hemlock/src/wire/wire.lisp,
	hemlock/resources/spell-dictionary.text,
	hemlock/unused/bit-stream.lisp, hemlock/unused/clx-ext.lisp,
	hemlock/unused/ed-integrity.lisp, hemlock/unused/gosmacs.lisp,
	hemlock/unused/hacks.lisp, hemlock/unused/hemcom.lisp,
	hemlock/unused/hi-integrity.lisp, hemlock/unused/keytran.lisp,
	hemlock/unused/keytrandefs.lisp, hemlock/unused/spell-build.lisp,
	hemlock/unused/struct-ed.lisp, hemlock/unused/tty-stream.lisp,
	hemlock/website/index.html.in: recovered 0.14 sources

