#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\begin_preamble
% -----------------------------------------  
% Autogenerated LaTeX file from XML DocBook  
% -----------------------------------------  
%%<params>
%%</params>

\usepackage{ifthen}\newboolean{DBKIsBook}
\setboolean{DBKIsBook}{true}
\IfFileExists{ifxetex.sty}{%
    \usepackage{ifxetex}%
  }{%
    \newif\ifxetex
    \xetexfalse
  }
  \ifxetex
\usepackage{fontspec}\usepackage{xltxtra}\setmainfont{DejaVu Serif}
\setsansfont{DejaVu Sans}
\setmonofont{DejaVu Sans Mono}
\else
\fi
\usepackage{fancybox}\usepackage[hyperlink]{docbook}\renewcommand{\DBKreleaseinfo}{}


\title{Running Other Programs as Subprocesses}
\author{}

% ------------------
% Collaborators
% ------------------
\renewcommand{\DBKindexation}{
\begin{DBKindtable}
\DBKinditem{\writtenby}{}
\end{DBKindtable}
}
\makeindex
\makeglossary
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding latin1
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref section
\pdf_pdfusetitle true
\pdf_quoted_options "%"
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 5
\tocdepth 5
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Running Other Programs as Subprocesses
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Running-Other-Programs-as-Subprocesses"

\end_inset


\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Subprocess-Overview"

\end_inset

Clozure CL provides primitives to run external Unix programs, to select
 and connect Lisp streams to their input and output sources, to (optionally)
 wait for their completion and to check their execution and exit status.
\end_layout

\begin_layout Standard
All of the global symbols described below are exported from the CCL package.
\end_layout

\begin_layout Standard
This implementation is modeled on - and uses some code from - similar facilities
 in CMUCL.
\end_layout

\begin_layout Section
Examples
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Subprocess-Examples"

\end_inset

[firstnumber=1,] ;;; Capture the output of the "uname" program in a lisp
 string-stream ;;; and return the generated string (which will contain a
 trailing ;;; newline.) ? (with-output-to-string (stream) (run-program "uname"
 '("-r") :output stream)) ;;; Write a string to *STANDARD-OUTPUT*, the hard
 way.
 ? (run-program "cat" () :input (make-string-input-stream "hello") :output
 t) ;;; Find out that "ls" doesn't expand wildcards.
 ? (run-program "ls" '("*.lisp") :output t) ;;; Let the shell expand wildcards.
 ? (run-program "sh" '("-c" "ls *.lisp") :output t) 
\end_layout

\begin_layout Standard
These last examples will only produce output if Clozure CL's current directory
 contains .lisp files, of course.
\end_layout

\begin_layout Section
Limitations and known bugs
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Limitations-and-known-bugs"

\end_inset


\end_layout

\begin_layout Itemize
Clozure CL and the external process may get confused about who owns which
 streams when input, output, or error are specified as T and wait is specified
 as NIL.
\end_layout

\begin_layout Itemize
External processes that need to talk to a terminal device may not work properly;
 the environment (SLIME, ILISP) under which Clozure CL is run can affect
 this.
\end_layout

\begin_layout Section
External-Program Dictionary
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "External-Program-Dictionary"

\end_inset


\end_layout

\begin_layout Subsection
RUN-PROGRAM
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_run-program"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
run-program
\end_layout

\end_inset

RUN-PROGRAM --- Invokes an external program as an OS subprocess of lisp.
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
run-program program args &key (wait t) pty sharing input if-input-does-not-exist
 output (if-output-exists :error) (error :output) (if-error-exists :error)
 status-hook external-format env (silently-ignore-catastrophic-failures
 *silently-ignore-catastrophic-failure-in-run-program*)
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
program A string or pathname which denotes an executable file.
 The PATH environment variable is used to find programs whose name doesn't
 contain a directory component.
 
\end_layout

\begin_layout Description
args A list of simple-strings 
\end_layout

\begin_layout Description
wait Indicates whether or not run-program should wait for the EXTERNAL-PROCESS
 to complete or should return immediately.
 
\end_layout

\begin_layout Description
pty This option is accepted but currently ignored; it's intended to make
 it easier to run external programs that need to interact with a terminal
 device.
 
\end_layout

\begin_layout Description
sharing Sets a specific sharing mode (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "Stream-SHARING"

\end_inset

) for any streams created within RUN-PROGRAM when INPUT, OUTPUT or ERROR
 are requested to be a :STREAM.
 
\end_layout

\begin_layout Description
input Selects the input source used by the EXTERNAL-PROCESS.
 May be any of the following: 
\end_layout

\begin_deeper
\begin_layout Itemize
NIL Specifies that a null input stream (e.g., /dev/null) should be used.
\end_layout

\begin_layout Itemize
T Specifies that the EXTERNAL-PROCESS should use the input source with which
 Clozure CL was invoked.
\end_layout

\begin_layout Itemize
A string or pathname.
 Specifies that the EXTERNAL-PROCESS should receive its input from the named
 existing file.
\end_layout

\begin_layout Itemize
:STREAM Creates a Lisp stream opened for character output.
 Any data written to this stream (accessible as the EXTERNAL-PROCESS-INPUT-STREA
M of the EXTERNAL-PROCESS object) appears as input to the external process.
\end_layout

\begin_layout Itemize
A stream.
 Specifies that the lisp stream should provide input to the EXTERNAL-PROCESS.
\end_layout

\end_deeper
\begin_layout Description
if-input-does-not-exist If the input argument specifies the name of an existing
 file, this argument is used as the if-does-not-exist argument to OPEN when
 that file is opened.
 
\end_layout

\begin_layout Description
output Specifies where standard output from the external process should
 be sent.
 Analogous to input above.
 
\end_layout

\begin_layout Description
if-output-exists If output is specified as a string or pathname, this argument
 is used as the if-exists argument to OPEN when that file is opened.
 
\end_layout

\begin_layout Description
error Specifies where error output from the external process should be sent.
 In addition to the values allowed for output, the keyword :OUTPUT can be
 used to indicate that error output should be sent where standard output
 goes.
 
\end_layout

\begin_layout Description
if-error-exists Analogous to if-output-exists.
 
\end_layout

\begin_layout Description
status-hook A user-defined function of one argument (the EXTERNAL-PROCESS
 structure.) This function is called whenever Clozure CL detects a change
 in the status of the EXTERNAL-PROCESS.
 
\end_layout

\begin_layout Description
external-format The external format (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "External-Formats"

\end_inset

) for all of the streams (input, output, and error) used to communicate
 with the external process.
 
\end_layout

\begin_layout Description
env New OS environment variable bindings for the external process.
 By default the external process inherits the environment of the running
 Lisp process.
 Env is an association list with elements (<Environment Variable Name>
\begin_inset space ~
\end_inset

.
\begin_inset space ~
\end_inset

<Value>).
 Name and value are case sensitive strings.
 See 
\begin_inset CommandInset ref
LatexCommand ref
reference "f_setenv"

\end_inset

.
 
\end_layout

\begin_layout Description
silently-ignore-catastrophic-failures If NIL, signal an error if run-program
 is unable to start the program.
 If non-NIL, treat failure to start the same as failure from the program
 itself, by setting the status and exit-code fields.
 Default is *silently-ignore-catastrophic-failure-in-run-program*.
 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Runs the specified program in an external (Unix) process, returning an object
 of type EXTERNAL-PROCESS if successful.
\end_layout

\begin_layout Standard
The implementation involves a lisp process/thread which monitors the status
 of this external process and arranges for the standard I/O descriptors
 for the external process to be connected to the specified lisp streams.
 Since this may require the monitoring thread to do I/O on lisp streams
 in some cases, streams provided as the values of the 
\family typewriter
:INPUT
\family default
, 
\family typewriter
:OUTPUT
\family default
, and 
\family typewriter
:ERROR
\family default
 arguments should not be private to some other lisp thread.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
SIGNAL-EXTERNAL-PROCESS
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_signal-external-process"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
signal-external-process
\end_layout

\end_inset

SIGNAL-EXTERNAL-PROCESS ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
signal-external-process proc signal-number &key (error-if-exited t)
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
proc An EXTERNAL-PROCESS, as returned by RUN-PROGRAM.
 
\end_layout

\begin_layout Description
signal A small integer.
 
\end_layout

\begin_layout Description
error-if-exited A boolean, by default T.
 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Sends 
\family typewriter
signal
\family default
 to the external process 
\family typewriter
proc
\family default
.
 (Typically, it would only be useful to call this function if the EXTERNAL-PROCE
SS was created with :WAIT NIL.)
\end_layout

\begin_layout Standard
If successful, the function returns T; otherwise, an error is signaled.
\end_layout

\begin_layout Standard
However, if 
\family typewriter
error-if-exited
\family default
 is nil, and the attempt to signal the external process fails because the
 external process has already exited, the function will return nil rather
 than signaling an error.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
EXTERNAL-PROCESS-ID
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_external-process-id"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
external-process-id
\end_layout

\end_inset

EXTERNAL-PROCESS-ID --- Returns the "process ID" of an OS subprocess, a
 positive integer which identifies it.
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
external-process-id proc
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
proc An EXTERNAL-PROCESS, as returned by RUN-PROGRAM.
 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Returns the 
\emph on
process id
\emph default
 assigned to the external process by the operating system.
 This is typically a positive, 16-bit number.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
EXTERNAL-PROCESS-INPUT-STREAM
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_external-process-input-stream"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
external-process-input-stream
\end_layout

\end_inset

EXTERNAL-PROCESS-INPUT-STREAM --- Returns the lisp stream which is used
 to write input to a given OS subprocess, if it has one.
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
external-process-input-stream proc
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
proc An EXTERNAL-PROCESS, as returned by RUN-PROGRAM.
 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Returns the stream created when the input argument to run-program is specified
 as :STREAM.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
EXTERNAL-PROCESS-OUTPUT-STREAM
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_external-process-output-stream"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
external-process-output-stream
\end_layout

\end_inset

EXTERNAL-PROCESS-OUTPUT-STREAM --- Returns the lisp stream which is used
 to read output from an OS subprocess, if there is one.
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
external-process-output-stream proc
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
proc An EXTERNAL-PROCESS, as returned by RUN-PROGRAM.
 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Returns the stream created when the output argument to run-program is specified
 as :STREAM.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
EXTERNAL-PROCESS-ERROR-STREAM
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_external-process-error-stream"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
external-process-error-stream
\end_layout

\end_inset

EXTERNAL-PROCESS-ERROR-STREAM --- Returns the stream which is used to read
 "error" output from a given OS subprocess, if it has one.
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
external-process-error-stream proc
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
proc An EXTERNAL-PROCESS, as returned by RUN-PROGRAM.
 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Returns the stream created when the error argument to run-program is specified
 as :STREAM.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
EXTERNAL-PROCESS-STATUS
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_external-process-status"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
external-process-status
\end_layout

\end_inset

EXTERNAL-PROCESS-STATUS --- Returns information about whether an OS subprocess
 is running; or, if not, why not; and what its result code was if it completed.
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
external-process-status proc
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
proc An EXTERNAL-PROCESS, as returned by RUN-PROGRAM.
 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Returns, as multiple values, a keyword denoting the status of the external
 process (one of :running, :stopped, :signaled, or :exited), and the exit
 code or terminating signal if the first value is other than :running.
 
\end_layout

\end_body
\end_document
