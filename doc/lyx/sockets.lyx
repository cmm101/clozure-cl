#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\begin_preamble
% -----------------------------------------  
% Autogenerated LaTeX file from XML DocBook  
% -----------------------------------------  
%%<params>
%%</params>

\usepackage{ifthen}\newboolean{DBKIsBook}
\setboolean{DBKIsBook}{true}
\IfFileExists{ifxetex.sty}{%
    \usepackage{ifxetex}%
  }{%
    \newif\ifxetex
    \xetexfalse
  }
  \ifxetex
\usepackage{fontspec}\usepackage{xltxtra}\setmainfont{DejaVu Serif}
\setsansfont{DejaVu Sans}
\setmonofont{DejaVu Sans Mono}
\else
\fi
\usepackage{fancybox}\usepackage[hyperlink]{docbook}\renewcommand{\DBKreleaseinfo}{}


\title{Programming with Sockets}
\author{}

% ------------------
% Collaborators
% ------------------
\renewcommand{\DBKindexation}{
\begin{DBKindtable}
\DBKinditem{\writtenby}{}
\end{DBKindtable}
}
\makeindex
\makeglossary
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding latin1
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref section
\pdf_pdfusetitle true
\pdf_quoted_options "%"
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 5
\tocdepth 5
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Programming with Sockets
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Programming-with-Sockets"

\end_inset


\end_layout

\begin_layout Section
Overview4
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Sockets-Overview"

\end_inset

Clozure CL supports the socket abstraction for interprocess communication.
 A socket represents a connection to another process, typically (but not
 necessarily) a TCP/IP network connection to a client or server running
 on some other machine on the network.
\end_layout

\begin_layout Standard
All symbols mentioned in this chapter are exported from the CCL package.
 As of version 0.13, these symbols are additionally exported from the OPENMCL-SOC
KET package.
\end_layout

\begin_layout Standard
Clozure CL supports three types of sockets: TCP sockets, UDP sockets, and
 Unix-domain sockets.
 This should be enough for all but the most esoteric network situations.
 All sockets are created by MAKE-SOCKET.
 The type of socket depends on the arguments to it, as follows:
\end_layout

\begin_layout Description
tcp-stream A buffered bi-directional stream over a TCP/IP connection.
 tcp-stream is a subclass of stream, and you can read and write to it using
 all the usual stream functions.
 Created by (make-socket :address-family :internet :type :stream :connect
 :active ...) or by (accept-connection ...).
 
\end_layout

\begin_layout Description
file-socket-stream A buffered bi-directional stream over a "UNIX domain"
 connection.
 file-socket-stream is a subclass of stream, and you can read and write
 to it using all the usual stream functions.
 Created by (make-socket :address-family :file :type :stream :connect :active
 ...) or by (accept-connection ...), 
\end_layout

\begin_layout Description
listener-socket A passive socket used to listen for incoming TCP/IP connections
 on a particular port.
 A listener-socket is not a stream.
 It doesn't support I/O.
 It can only be used to create new tcp-streams by accept-connection.
 Created by (make-socket :type :stream :connect :passive ...) 
\end_layout

\begin_layout Description
file-listener-socket A passive socket used to listen for incoming UNIX domain
 connections named by a file in the local filesystem.
 A listener-socket is not a stream.
 It doesn't support I/O.
 It can only be used to create new file-socket-streams by accept-connection.
 Created by (make-socket :address-family :file :type :stream :connect :passive
 ...) 
\end_layout

\begin_layout Description
udp-socket A socket representing a packet-based UDP/IP connection.
 A udp-socket supports I/O but it is not a stream.
 Instead, you must use the special functions send-to and receive-from to
 read and write to it.
 Created by (make-socket :type :datagram ...) 
\end_layout

\begin_layout Section
Sockets Dictionary
\end_layout

\begin_layout Standard
\noindent
\begin_inset CommandInset label
LatexCommand label
name "Sockets-Dictionary"

\end_inset


\end_layout

\begin_layout Subsection
MAKE-SOCKET
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_make-socket"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
make-socket
\end_layout

\end_inset

MAKE-SOCKET ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
make-socket &key address-family type connect eol format remote-host remote-port
 local-host local-port local-filename remote-filename keepalive reuse-address
 nodelay broadcast linger backlog input-timeout output-timeout connect-timeout
 auto-close deadline
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
address-family The address/protocol family of this socket.
 Currently only :internet (the default), meaning IP, and :file, referring
 to UNIX domain addresses, are supported.
 
\end_layout

\begin_layout Description
type One of :stream (the default) to request a connection-oriented socket,
 or :datagram to request a connectionless socket.
 The default is :stream.
 
\end_layout

\begin_layout Description
connect This argument is only relevant to sockets of type :stream.
 One of :active (the default) to request a :passive to request a file or
 TCP listener socket.
 
\end_layout

\begin_layout Description
eol This argument is currently ignored (it is accepted for compatibility
 with Franz Allegro).
 
\end_layout

\begin_layout Description
format One of :text (the default), :binary, or :bivalent.
 This argument is ignored for :stream sockets for now, as :stream sockets
 are currently always bivalent (i.e.
 they support both character and byte I/O).
 For :datagram sockets, this argument is ignored (the format of a datagram
 socket is always :binary).
 
\end_layout

\begin_layout Description
remote-host Required for TCP streams, it specifies the host to connect to
 (in any format acceptable to lookup-hostname).
 Ignored for listener sockets.
 For UDP sockets, it can be used to specify a default host for subsequent
 calls to send-to or receive-from.
 
\end_layout

\begin_layout Description
remote-port Required for TCP streams, it specifies the port to connect to
 (in any format acceptable to lookup-port).
 Ignored for listener sockets.
 For UDP sockets, it can be used to specify a default port for subsequent
 calls to for subsequent calls to send-to or receive-from.
 
\end_layout

\begin_layout Description
remote-filename Required for file-socket streams, it specifies the name
 of a file in the local filesystem (e.g., NOT mounted via NFS, AFP, SMB, ...)
 which names and controls access to a UNIX-domain socket.
 
\end_layout

\begin_layout Description
local-host Allows you to specify a local host address for a listener or
 UDP socket, for the rare case where you want to restrict connections to
 those coming to a specific local address for security reasons.
 
\end_layout

\begin_layout Description
local-port Specify a local port for a socket.
 Most useful for listener sockets, where it is the port on which the socket
 will listen for connections.
 
\end_layout

\begin_layout Description
local-filename Required for file-listener-sockets.
 Specifies the name of a file in the local filesystem which is used to name
 a UNIX-domain socket.
 The actual filesystem file should not previously exist when the file-listener-s
ocket is created; its parent directory should exist and be writable by the
 caller.
 The file used to name the socket will be deleted when the file-listener-socket
 is closed.
 
\end_layout

\begin_layout Description
keepalive If true, enables the periodic transmission of "keepalive" messages.
 
\end_layout

\begin_layout Description
reuse-address If true, allows the reuse of local ports in listener sockets,
 overriding some TCP/IP protocol specifications.
 You will need this if you are debugging a server..
 
\end_layout

\begin_layout Description
nodelay If true, disables Nagle's algorithm, which tries to minimize TCP
 packet fragmentation by introducing transmission delays in the absence
 of replies.
 Try setting this if you are using a protocol which involves sending a steady
 stream of data with no replies and are seeing significant degradations
 in throughput.
 
\end_layout

\begin_layout Description
broadcast If true, requests permission to broadcast datagrams on a UDP socket.
 
\end_layout

\begin_layout Description
linger If specified and non-nil, should be the number of seconds the OS
 is allowed to wait for data to be pushed through when a close is done.
 Only relevant for TCP sockets.
 
\end_layout

\begin_layout Description
backlog For a listener socket, specifies the number of connections which
 can be pending but not accepted.
 The default is 5, which is also the maximum on some operating systems.
 
\end_layout

\begin_layout Description
input-timeout The number of seconds before an input operation times out.
 Must be a real number between zero and one million.
 If an input operation takes longer than the specified number of seconds,
 an 
\family typewriter
input-timeout
\family default
 error is signalled.
 (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "Stream-Timeouts-And-Deadlines"

\end_inset

) 
\end_layout

\begin_layout Description
output-timeout The number of seconds before an output operation times out.
 Must be a real number between zero and one million.
 If an output operation takes longer than the specified number of seconds,
 an 
\family typewriter
output-timeout
\family default
 error is signalled.
 (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "Stream-Timeouts-And-Deadlines"

\end_inset

) 
\end_layout

\begin_layout Description
connect-timeout The number of seconds before a connection attempt times
 out.
 [TODO: what are acceptable values?] If a connection attempt takes longer
 than the specified number of seconds, a 
\family typewriter
socket-error
\family default
 is signalled.
 This can be useful if the specified interval is shorter than the interval
 that the OS's socket layer imposes, which is sometimes a minute or two.
 
\end_layout

\begin_layout Description
auto-close When non-nil, any resulting socket stream will be closed when
 the GC can prove that the stream is unreferenced.
 This is done via CCL's termination mechanism [TODO add xref].
 
\end_layout

\begin_layout Description
deadline Specifies an absolute time in internal-time-units.
 If an I/O operation on the stream does not complete before the deadline
 then a 
\family typewriter
COMMUNICATION-DEADLINE-EXPIRED
\family default
 error is signalled.
 A deadline takes precedence over any input/output timeouts that may be
 set.
 (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "Stream-Timeouts-And-Deadlines"

\end_inset

) 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Creates and returns a new socket
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
ACCEPT-CONNECTION
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_accept-connection"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
accept-connection
\end_layout

\end_inset

ACCEPT-CONNECTION ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
accept-connection (socket listener-socket) &key wait
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
socket The listener-socket to listen on.
 
\end_layout

\begin_layout Description
wait If true (the default), and there are no connections waiting to be accepted,
 waits until one arrives.
 If false, returns NIL immediately.
 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Extracts the first connection on the queue of pending connections, accepts
 it (i.e.
 completes the connection startup protocol) and returns a new tcp-stream
 or file-socket-stream representing the newly established connection.
 The tcp stream inherits any properties of the listener socket that are
 relevant (e.g.
 :keepalive, :nodelay, etc.) The original listener socket continues to be
 open listening for more connections, so you can call accept-connection
 on it again.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
DOTTED-TO-IPADDR
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_dotted-to-ipaddr"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
dotted-to-ipaddr
\end_layout

\end_inset

DOTTED-TO-IPADDR ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
dotted-to-ipaddr dotted &key errorp
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
dotted A string representing an IP address in the "nn.nn.nn.nn" format 
\end_layout

\begin_layout Description
errorp If true (the default) an error is signaled if dotted is invalid.
 If false, NIL is returned.
 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Converts a dotted-string representation of a host address to a 32-bit unsigned
 IP address.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
IPADDR-TO-DOTTED
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_ipaddr-to-dotted"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ipaddr-to-dotted
\end_layout

\end_inset

IPADDR-TO-DOTTED ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
ipaddr-to-dotted ipaddr &key values
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
ipaddr A 32-bit integer representing an internet host address 
\end_layout

\begin_layout Description
values If false (the default), returns a string in the form "nn.nn.nn.nn".
 If true, returns four values representing the four octets of the address
 as unsigned 8-bit integers.
 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Converts a 32-bit unsigned IP address into octets.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
IPADDR-TO-HOSTNAME
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_ipaddr-to-hostname"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
ipaddr-to-hostname
\end_layout

\end_inset

IPADDR-TO-HOSTNAME ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
ipaddr-to-hostname ipaddr &key ignore-cache
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
ipaddr a 32-bit integer representing an internet host address 
\end_layout

\begin_layout Description
ignore-cache This argument is ignored (it is accepted for compatibility
 with Franz Allegro) 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Converts a 32-bit unsigned IP address into a host name string
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
LOOKUP-HOSTNAME
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_lookup-hostname"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
lookup-hostname
\end_layout

\end_inset

LOOKUP-HOSTNAME ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
lookup-hostname host
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
host Specifies the host.
 It can be either a host name string such as "clozure.com", or a dotted address
 string such as "192.168.0.1", or a 32-bit unsigned IP address such as 3232235521.
 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Converts a host spec in any of the acceptable formats into a 32-bit unsigned
 IP address
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
LOOKUP-PORT
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_lookup-port"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
lookup-port
\end_layout

\end_inset

LOOKUP-PORT ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
lookup-port port protocol
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
port Specifies the port.
 It can be either a string, such as "http" or a symbol, such as :http, or
 an unsigned port number.
 Note that a string is case-sensitive.
 A symbol is lowercased before lookup.
 
\end_layout

\begin_layout Description
protocol Must be one of "tcp" or "udp".
 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Finds the port number for the specified port and protocol
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
RECEIVE-FROM
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_receive-from"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
receive-from
\end_layout

\end_inset

RECEIVE-FROM ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
receive-from (socket udp-socket) size &key buffer extract offset
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
socket The socket to read from 
\end_layout

\begin_layout Description
size Maximum number of bytes to read.
 If the packet is larger than this, any extra bytes are discarded.
 
\end_layout

\begin_layout Description
buffer If specified, must be an octet vector which will be used to read
 in the data.
 If not specified, a new buffer will be created (of type determined by socket-fo
rmat).
 
\end_layout

\begin_layout Description
extract If true, the subsequence of the buffer corresponding only to the
 data read in is extracted and returned as the first value.
 If false (the default) the original buffer is returned even if it is only
 partially filled.
 
\end_layout

\begin_layout Description
offset Specifies the start offset into the buffer at which data is to be
 stored.
 The default is 0.
 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Reads a UDP packet from a socket.
 If no packets are available, waits for a packet to arrive.
 Returns four values: 
\end_layout

\begin_layout Enumerate
The buffer with the data
\end_layout

\begin_layout Enumerate
The number of bytes read
\end_layout

\begin_layout Enumerate
The 32-bit unsigned IP address of the sender of the data
\end_layout

\begin_layout Enumerate
The port number of the sender of the data
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
SEND-TO
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_send-to"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
send-to
\end_layout

\end_inset

SEND-TO ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
send-to (socket udp-socket) buffer size &key remote-host remote-port offset
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
socket The socket to write to 
\end_layout

\begin_layout Description
buffer A vector containing the data to send.
 It must be an octet vector.
 
\end_layout

\begin_layout Description
size Number of octets to send 
\end_layout

\begin_layout Description
remote-host The host to send the packet to, in any format acceptable to
 lookup-hostname.
 The default is the remote host specified in the call to make-socket.
 
\end_layout

\begin_layout Description
remote-port The port to send the packet to, in any format acceptable to
 lookup-port.
 The default is the remote port specified in the call to make-socket.
 
\end_layout

\begin_layout Description
offset The offset in the buffer where the packet data starts 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Send a UDP packet over a socket.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
SHUTDOWN
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_shutdown"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
shutdown
\end_layout

\end_inset

SHUTDOWN ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
shutdown socket &key direction
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
socket The socket to shut down (typically a tcp-stream) 
\end_layout

\begin_layout Description
direction One of :input to disallow further input, or :output to disallow
 further output.
 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Shuts down part of a bidirectional connection.
 This is useful if e.g.
 you need to read responses after sending an end-of-file signal.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
SOCKET-OS-FD
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_socket-os-fd"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
socket-os-fd
\end_layout

\end_inset

SOCKET-OS-FD ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
socket-os-fd socket
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
socket The socket 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Returns the native OS's representation of the socket, or NIL if the socket
 is closed.
 On Unix, this is the Unix 'file descriptor', a small non-negative integer.
 Note that it is rather dangerous to mess around with tcp-stream fd's, as
 there is all sorts of buffering and asynchronous I/O going on above the
 OS level.
 listener-socket and udp-socket fd's are safer to mess with directly as
 there is less magic going on.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
REMOTE-HOST
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_remote-host"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
remote-host
\end_layout

\end_inset

REMOTE-HOST ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
remote-host socket
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
socket The socket 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Returns the 32-bit unsigned IP address of the remote host, or NIL if the
 socket is not connected.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
REMOTE-PORT
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_remote-port"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
remote-port
\end_layout

\end_inset

REMOTE-PORT ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
remote-port socket
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
socket The socket 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Returns the remote port number, or NIL if the socket is not connected.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
LOCAL-HOST
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_local-host"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
local-host
\end_layout

\end_inset

LOCAL-HOST ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
local-host socket
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
socket The socket 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Returns 32-bit unsigned IP address of the local host.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
LOCAL-PORT
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_local-port"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
local-port
\end_layout

\end_inset

LOCAL-PORT ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
local-port socket
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
socket The socket 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Returns the local port number
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
SOCKET-ADDRESS-FAMILY
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_socket-address-family"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
socket-address-family
\end_layout

\end_inset

SOCKET-ADDRESS-FAMILY ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
socket-address-family socket
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
socket The socket 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Returns :internet or :file, as appropriate.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
SOCKET-CONNECT
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_socket-connect"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
socket-connect
\end_layout

\end_inset

SOCKET-CONNECT ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
socket-connect socket
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
socket The socket 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Returns :active for tcp-stream, :passive for listener-socket, and NIL for
 udp-socket
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
SOCKET-FORMAT
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_socket-format"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
socket-format
\end_layout

\end_inset

SOCKET-FORMAT ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
socket-format socket
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
socket The socket 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
Returns the socket format as specified by the :format argument to make-socket.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
SOCKET-TYPE
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_socket-type"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
socket-type
\end_layout

\end_inset

SOCKET-TYPE ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
socket-type socket
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
socket The socket 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
returns :stream for tcp-stream and listener-socket, and :datagram for udp-socket.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
SOCKET-ERROR
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "c_socket-error"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
socket-error
\end_layout

\end_inset

SOCKET-ERROR ---
\end_layout

\begin_layout Standard
Class
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
The class of OS errors signaled by socket functions
\end_layout

\begin_layout Subsubsection*
Superclasses
\end_layout

\begin_layout Standard
simple-error
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
SOCKET-ERROR-CODE
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_socket-error-code"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
socket-error-code
\end_layout

\end_inset

SOCKET-ERROR-CODE ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
socket-error-code socket-error
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
socket-error the condition 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
The OS error code of the error
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
SOCKET-ERROR-IDENTIFIER
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_socket-error-identifier"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
socket-error-identifier
\end_layout

\end_inset

SOCKET-ERROR-IDENTIFIER ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
socket-error-identifier socket-error
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
socket-error the condition 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
A symbol representing the error code in a more OS-independent way.
\end_layout

\begin_layout Standard
One of: :address-in-use :connection-aborted :no-buffer-space :connection-timed-o
ut :connection-refused :host-unreachable :host-down :network-down :address-not-a
vailable :network-reset :connection-reset :shutdown :access-denied or :unknown.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
SOCKET-ERROR-SITUATION
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "f_socket-error-situation"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
socket-error-situation
\end_layout

\end_inset

SOCKET-ERROR-SITUATION ---
\end_layout

\begin_layout Standard
Function
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
socket-error-situation socket-error
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
socket-error the condition 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
A string describing the context where the error happened.
 On Linux, this is the name of the system call which returned the error.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
CLOSE
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "o_close"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
close
\end_layout

\end_inset

CLOSE ---
\end_layout

\begin_layout Standard
Method
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
close (socket socket) &key abort
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
socket The socket to close 
\end_layout

\begin_layout Description
abort If false (the default), closes the socket in an orderly fashion, finishing
 up any buffered pending I/O, before closing the connection.
 If true, aborts/ignores pending I/O.
 (For listener and udp sockets, this argument is effectively ignored since
 there is never any buffered I/O to clean up).
 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
The close generic function can be applied to sockets.
 It releases the operating system resources associated with the socket.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
WITH-OPEN-SOCKET
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "m_with-open-socket"

\end_inset


\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
with-open-socket
\end_layout

\end_inset

WITH-OPEN-SOCKET ---
\end_layout

\begin_layout Standard
Macro
\end_layout

\begin_layout Subsubsection*
Synopsis
\end_layout

\begin_layout Standard
with-open-socket (var .
 make-socket-args) &body body
\end_layout

\begin_layout Subsubsection*
Arguments and Values
\end_layout

\begin_layout Description
var variable to bind 
\end_layout

\begin_layout Description
make-socket-args arguments suitable for passing to make-socket 
\end_layout

\begin_layout Description
body body to execute 
\end_layout

\begin_layout Subsubsection*
Description
\end_layout

\begin_layout Standard
\noindent
executes body with var bound to the result of applying make-socket to make-socke
t-args.
 The socket gets closed on exit.
 
\end_layout

\end_body
\end_document
